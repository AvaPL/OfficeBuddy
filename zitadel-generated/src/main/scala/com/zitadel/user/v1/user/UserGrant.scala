// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class UserGrant(
    id: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    roleKeys: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    state: com.zitadel.user.v1.user.UserGrantState = com.zitadel.user.v1.user.UserGrantState.USER_GRANT_STATE_UNSPECIFIED,
    userId: _root_.scala.Predef.String = "",
    userName: _root_.scala.Predef.String = "",
    firstName: _root_.scala.Predef.String = "",
    lastName: _root_.scala.Predef.String = "",
    email: _root_.scala.Predef.String = "",
    displayName: _root_.scala.Predef.String = "",
    orgId: _root_.scala.Predef.String = "",
    orgName: _root_.scala.Predef.String = "",
    orgDomain: _root_.scala.Predef.String = "",
    projectId: _root_.scala.Predef.String = "",
    projectName: _root_.scala.Predef.String = "",
    projectGrantId: _root_.scala.Predef.String = "",
    avatarUrl: _root_.scala.Predef.String = "",
    preferredLoginName: _root_.scala.Predef.String = "",
    userType: com.zitadel.user.v1.user.Type = com.zitadel.user.v1.user.Type.TYPE_UNSPECIFIED,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[UserGrant] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      roleKeys.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      
      {
        val __value = state.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      
      {
        val __value = userId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = userName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = firstName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = lastName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      
      {
        val __value = email
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = orgId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = orgName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      
      {
        val __value = orgDomain
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
        }
      };
      
      {
        val __value = projectId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(14, __value)
        }
      };
      
      {
        val __value = projectName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
        }
      };
      
      {
        val __value = projectGrantId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, __value)
        }
      };
      
      {
        val __value = avatarUrl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(17, __value)
        }
      };
      
      {
        val __value = preferredLoginName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(18, __value)
        }
      };
      
      {
        val __value = userType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(19, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      roleKeys.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      {
        val __v = state.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      {
        val __v = userId
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = userName
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = firstName
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = lastName
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = email
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = orgId
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = orgName
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      {
        val __v = orgDomain
        if (!__v.isEmpty) {
          _output__.writeString(13, __v)
        }
      };
      {
        val __v = projectId
        if (!__v.isEmpty) {
          _output__.writeString(14, __v)
        }
      };
      {
        val __v = projectName
        if (!__v.isEmpty) {
          _output__.writeString(15, __v)
        }
      };
      {
        val __v = projectGrantId
        if (!__v.isEmpty) {
          _output__.writeString(16, __v)
        }
      };
      {
        val __v = avatarUrl
        if (!__v.isEmpty) {
          _output__.writeString(17, __v)
        }
      };
      {
        val __v = preferredLoginName
        if (!__v.isEmpty) {
          _output__.writeString(18, __v)
        }
      };
      {
        val __v = userType.value
        if (__v != 0) {
          _output__.writeEnum(19, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Predef.String): UserGrant = copy(id = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: UserGrant = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): UserGrant = copy(details = Option(__v))
    def clearRoleKeys = copy(roleKeys = _root_.scala.Seq.empty)
    def addRoleKeys(__vs: _root_.scala.Predef.String *): UserGrant = addAllRoleKeys(__vs)
    def addAllRoleKeys(__vs: Iterable[_root_.scala.Predef.String]): UserGrant = copy(roleKeys = roleKeys ++ __vs)
    def withRoleKeys(__v: _root_.scala.Seq[_root_.scala.Predef.String]): UserGrant = copy(roleKeys = __v)
    def withState(__v: com.zitadel.user.v1.user.UserGrantState): UserGrant = copy(state = __v)
    def withUserId(__v: _root_.scala.Predef.String): UserGrant = copy(userId = __v)
    def withUserName(__v: _root_.scala.Predef.String): UserGrant = copy(userName = __v)
    def withFirstName(__v: _root_.scala.Predef.String): UserGrant = copy(firstName = __v)
    def withLastName(__v: _root_.scala.Predef.String): UserGrant = copy(lastName = __v)
    def withEmail(__v: _root_.scala.Predef.String): UserGrant = copy(email = __v)
    def withDisplayName(__v: _root_.scala.Predef.String): UserGrant = copy(displayName = __v)
    def withOrgId(__v: _root_.scala.Predef.String): UserGrant = copy(orgId = __v)
    def withOrgName(__v: _root_.scala.Predef.String): UserGrant = copy(orgName = __v)
    def withOrgDomain(__v: _root_.scala.Predef.String): UserGrant = copy(orgDomain = __v)
    def withProjectId(__v: _root_.scala.Predef.String): UserGrant = copy(projectId = __v)
    def withProjectName(__v: _root_.scala.Predef.String): UserGrant = copy(projectName = __v)
    def withProjectGrantId(__v: _root_.scala.Predef.String): UserGrant = copy(projectGrantId = __v)
    def withAvatarUrl(__v: _root_.scala.Predef.String): UserGrant = copy(avatarUrl = __v)
    def withPreferredLoginName(__v: _root_.scala.Predef.String): UserGrant = copy(preferredLoginName = __v)
    def withUserType(__v: com.zitadel.user.v1.user.Type): UserGrant = copy(userType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 2 => details.orNull
        case 3 => roleKeys
        case 4 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 5 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = userName
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = firstName
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = lastName
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = email
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = orgId
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = orgName
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = orgDomain
          if (__t != "") __t else null
        }
        case 14 => {
          val __t = projectId
          if (__t != "") __t else null
        }
        case 15 => {
          val __t = projectName
          if (__t != "") __t else null
        }
        case 16 => {
          val __t = projectGrantId
          if (__t != "") __t else null
        }
        case 17 => {
          val __t = avatarUrl
          if (__t != "") __t else null
        }
        case 18 => {
          val __t = preferredLoginName
          if (__t != "") __t else null
        }
        case 19 => {
          val __t = userType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PRepeated(roleKeys.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
        case 5 => _root_.scalapb.descriptors.PString(userId)
        case 6 => _root_.scalapb.descriptors.PString(userName)
        case 7 => _root_.scalapb.descriptors.PString(firstName)
        case 8 => _root_.scalapb.descriptors.PString(lastName)
        case 9 => _root_.scalapb.descriptors.PString(email)
        case 10 => _root_.scalapb.descriptors.PString(displayName)
        case 11 => _root_.scalapb.descriptors.PString(orgId)
        case 12 => _root_.scalapb.descriptors.PString(orgName)
        case 13 => _root_.scalapb.descriptors.PString(orgDomain)
        case 14 => _root_.scalapb.descriptors.PString(projectId)
        case 15 => _root_.scalapb.descriptors.PString(projectName)
        case 16 => _root_.scalapb.descriptors.PString(projectGrantId)
        case 17 => _root_.scalapb.descriptors.PString(avatarUrl)
        case 18 => _root_.scalapb.descriptors.PString(preferredLoginName)
        case 19 => _root_.scalapb.descriptors.PEnum(userType.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.UserGrant.type = com.zitadel.user.v1.user.UserGrant
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.UserGrant])
}

object UserGrant extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.UserGrant] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.UserGrant] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.UserGrant = {
    var __id: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    val __roleKeys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __state: com.zitadel.user.v1.user.UserGrantState = com.zitadel.user.v1.user.UserGrantState.USER_GRANT_STATE_UNSPECIFIED
    var __userId: _root_.scala.Predef.String = ""
    var __userName: _root_.scala.Predef.String = ""
    var __firstName: _root_.scala.Predef.String = ""
    var __lastName: _root_.scala.Predef.String = ""
    var __email: _root_.scala.Predef.String = ""
    var __displayName: _root_.scala.Predef.String = ""
    var __orgId: _root_.scala.Predef.String = ""
    var __orgName: _root_.scala.Predef.String = ""
    var __orgDomain: _root_.scala.Predef.String = ""
    var __projectId: _root_.scala.Predef.String = ""
    var __projectName: _root_.scala.Predef.String = ""
    var __projectGrantId: _root_.scala.Predef.String = ""
    var __avatarUrl: _root_.scala.Predef.String = ""
    var __preferredLoginName: _root_.scala.Predef.String = ""
    var __userType: com.zitadel.user.v1.user.Type = com.zitadel.user.v1.user.Type.TYPE_UNSPECIFIED
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __roleKeys += _input__.readStringRequireUtf8()
        case 32 =>
          __state = com.zitadel.user.v1.user.UserGrantState.fromValue(_input__.readEnum())
        case 42 =>
          __userId = _input__.readStringRequireUtf8()
        case 50 =>
          __userName = _input__.readStringRequireUtf8()
        case 58 =>
          __firstName = _input__.readStringRequireUtf8()
        case 66 =>
          __lastName = _input__.readStringRequireUtf8()
        case 74 =>
          __email = _input__.readStringRequireUtf8()
        case 82 =>
          __displayName = _input__.readStringRequireUtf8()
        case 90 =>
          __orgId = _input__.readStringRequireUtf8()
        case 98 =>
          __orgName = _input__.readStringRequireUtf8()
        case 106 =>
          __orgDomain = _input__.readStringRequireUtf8()
        case 114 =>
          __projectId = _input__.readStringRequireUtf8()
        case 122 =>
          __projectName = _input__.readStringRequireUtf8()
        case 130 =>
          __projectGrantId = _input__.readStringRequireUtf8()
        case 138 =>
          __avatarUrl = _input__.readStringRequireUtf8()
        case 146 =>
          __preferredLoginName = _input__.readStringRequireUtf8()
        case 152 =>
          __userType = com.zitadel.user.v1.user.Type.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.UserGrant(
        id = __id,
        details = __details,
        roleKeys = __roleKeys.result(),
        state = __state,
        userId = __userId,
        userName = __userName,
        firstName = __firstName,
        lastName = __lastName,
        email = __email,
        displayName = __displayName,
        orgId = __orgId,
        orgName = __orgName,
        orgDomain = __orgDomain,
        projectId = __projectId,
        projectName = __projectName,
        projectGrantId = __projectGrantId,
        avatarUrl = __avatarUrl,
        preferredLoginName = __preferredLoginName,
        userType = __userType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.UserGrant] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.UserGrant(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        roleKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        state = com.zitadel.user.v1.user.UserGrantState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.user.v1.user.UserGrantState.USER_GRANT_STATE_UNSPECIFIED.scalaValueDescriptor).number),
        userId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        firstName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        lastName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        orgId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        orgName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        orgDomain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectGrantId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        avatarUrl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        preferredLoginName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userType = com.zitadel.user.v1.user.Type.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.user.v1.user.Type.TYPE_UNSPECIFIED.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(31)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(31)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => com.zitadel.user.v1.user.UserGrantState
      case 19 => com.zitadel.user.v1.user.Type
    }
  }
  lazy val defaultInstance = com.zitadel.user.v1.user.UserGrant(
    id = "",
    details = _root_.scala.None,
    roleKeys = _root_.scala.Seq.empty,
    state = com.zitadel.user.v1.user.UserGrantState.USER_GRANT_STATE_UNSPECIFIED,
    userId = "",
    userName = "",
    firstName = "",
    lastName = "",
    email = "",
    displayName = "",
    orgId = "",
    orgName = "",
    orgDomain = "",
    projectId = "",
    projectName = "",
    projectGrantId = "",
    avatarUrl = "",
    preferredLoginName = "",
    userType = com.zitadel.user.v1.user.Type.TYPE_UNSPECIFIED
  )
  implicit class UserGrantLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.UserGrant]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.UserGrant](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def roleKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.roleKeys)((c_, f_) => c_.copy(roleKeys = f_))
    def state: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.UserGrantState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def userId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def userName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
    def firstName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstName)((c_, f_) => c_.copy(firstName = f_))
    def lastName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastName)((c_, f_) => c_.copy(lastName = f_))
    def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.email)((c_, f_) => c_.copy(email = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgId)((c_, f_) => c_.copy(orgId = f_))
    def orgName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgName)((c_, f_) => c_.copy(orgName = f_))
    def orgDomain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgDomain)((c_, f_) => c_.copy(orgDomain = f_))
    def projectId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectId)((c_, f_) => c_.copy(projectId = f_))
    def projectName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectName)((c_, f_) => c_.copy(projectName = f_))
    def projectGrantId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectGrantId)((c_, f_) => c_.copy(projectGrantId = f_))
    def avatarUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.avatarUrl)((c_, f_) => c_.copy(avatarUrl = f_))
    def preferredLoginName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.preferredLoginName)((c_, f_) => c_.copy(preferredLoginName = f_))
    def userType: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Type] = field(_.userType)((c_, f_) => c_.copy(userType = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  final val ROLE_KEYS_FIELD_NUMBER = 3
  final val STATE_FIELD_NUMBER = 4
  final val USER_ID_FIELD_NUMBER = 5
  final val USER_NAME_FIELD_NUMBER = 6
  final val FIRST_NAME_FIELD_NUMBER = 7
  final val LAST_NAME_FIELD_NUMBER = 8
  final val EMAIL_FIELD_NUMBER = 9
  final val DISPLAY_NAME_FIELD_NUMBER = 10
  final val ORG_ID_FIELD_NUMBER = 11
  final val ORG_NAME_FIELD_NUMBER = 12
  final val ORG_DOMAIN_FIELD_NUMBER = 13
  final val PROJECT_ID_FIELD_NUMBER = 14
  final val PROJECT_NAME_FIELD_NUMBER = 15
  final val PROJECT_GRANT_ID_FIELD_NUMBER = 16
  final val AVATAR_URL_FIELD_NUMBER = 17
  final val PREFERRED_LOGIN_NAME_FIELD_NUMBER = 18
  final val USER_TYPE_FIELD_NUMBER = 19
  def of(
    id: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    roleKeys: _root_.scala.Seq[_root_.scala.Predef.String],
    state: com.zitadel.user.v1.user.UserGrantState,
    userId: _root_.scala.Predef.String,
    userName: _root_.scala.Predef.String,
    firstName: _root_.scala.Predef.String,
    lastName: _root_.scala.Predef.String,
    email: _root_.scala.Predef.String,
    displayName: _root_.scala.Predef.String,
    orgId: _root_.scala.Predef.String,
    orgName: _root_.scala.Predef.String,
    orgDomain: _root_.scala.Predef.String,
    projectId: _root_.scala.Predef.String,
    projectName: _root_.scala.Predef.String,
    projectGrantId: _root_.scala.Predef.String,
    avatarUrl: _root_.scala.Predef.String,
    preferredLoginName: _root_.scala.Predef.String,
    userType: com.zitadel.user.v1.user.Type
  ): _root_.com.zitadel.user.v1.user.UserGrant = _root_.com.zitadel.user.v1.user.UserGrant(
    id,
    details,
    roleKeys,
    state,
    userId,
    userName,
    firstName,
    lastName,
    email,
    displayName,
    orgId,
    orgName,
    orgDomain,
    projectId,
    projectName,
    projectGrantId,
    avatarUrl,
    preferredLoginName,
    userType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.UserGrant])
}
