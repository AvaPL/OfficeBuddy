// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class RefreshToken(
    id: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    clientId: _root_.scala.Predef.String = "",
    authTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    idleExpiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    expiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    scopes: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    audience: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RefreshToken] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      if (authTime.isDefined) {
        val __value = authTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (idleExpiration.isDefined) {
        val __value = idleExpiration.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (expiration.isDefined) {
        val __value = expiration.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      scopes.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      }
      audience.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      authTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      idleExpiration.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      expiration.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      scopes.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      audience.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Predef.String): RefreshToken = copy(id = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: RefreshToken = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): RefreshToken = copy(details = Option(__v))
    def withClientId(__v: _root_.scala.Predef.String): RefreshToken = copy(clientId = __v)
    def getAuthTime: com.google.protobuf.timestamp.Timestamp = authTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearAuthTime: RefreshToken = copy(authTime = _root_.scala.None)
    def withAuthTime(__v: com.google.protobuf.timestamp.Timestamp): RefreshToken = copy(authTime = Option(__v))
    def getIdleExpiration: com.google.protobuf.timestamp.Timestamp = idleExpiration.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearIdleExpiration: RefreshToken = copy(idleExpiration = _root_.scala.None)
    def withIdleExpiration(__v: com.google.protobuf.timestamp.Timestamp): RefreshToken = copy(idleExpiration = Option(__v))
    def getExpiration: com.google.protobuf.timestamp.Timestamp = expiration.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearExpiration: RefreshToken = copy(expiration = _root_.scala.None)
    def withExpiration(__v: com.google.protobuf.timestamp.Timestamp): RefreshToken = copy(expiration = Option(__v))
    def clearScopes = copy(scopes = _root_.scala.Seq.empty)
    def addScopes(__vs: _root_.scala.Predef.String *): RefreshToken = addAllScopes(__vs)
    def addAllScopes(__vs: Iterable[_root_.scala.Predef.String]): RefreshToken = copy(scopes = scopes ++ __vs)
    def withScopes(__v: _root_.scala.Seq[_root_.scala.Predef.String]): RefreshToken = copy(scopes = __v)
    def clearAudience = copy(audience = _root_.scala.Seq.empty)
    def addAudience(__vs: _root_.scala.Predef.String *): RefreshToken = addAllAudience(__vs)
    def addAllAudience(__vs: Iterable[_root_.scala.Predef.String]): RefreshToken = copy(audience = audience ++ __vs)
    def withAudience(__v: _root_.scala.Seq[_root_.scala.Predef.String]): RefreshToken = copy(audience = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 2 => details.orNull
        case 3 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 4 => authTime.orNull
        case 5 => idleExpiration.orNull
        case 6 => expiration.orNull
        case 7 => scopes
        case 8 => audience
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(clientId)
        case 4 => authTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => idleExpiration.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => expiration.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PRepeated(scopes.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 8 => _root_.scalapb.descriptors.PRepeated(audience.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.RefreshToken.type = com.zitadel.user.v1.user.RefreshToken
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.RefreshToken])
}

object RefreshToken extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.RefreshToken] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.RefreshToken] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.RefreshToken = {
    var __id: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __clientId: _root_.scala.Predef.String = ""
    var __authTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __idleExpiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __expiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    val __scopes: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __audience: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __clientId = _input__.readStringRequireUtf8()
        case 34 =>
          __authTime = Option(__authTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __idleExpiration = Option(__idleExpiration.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __expiration = Option(__expiration.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __scopes += _input__.readStringRequireUtf8()
        case 66 =>
          __audience += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.RefreshToken(
        id = __id,
        details = __details,
        clientId = __clientId,
        authTime = __authTime,
        idleExpiration = __idleExpiration,
        expiration = __expiration,
        scopes = __scopes.result(),
        audience = __audience.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.RefreshToken] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.RefreshToken(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        authTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        idleExpiration = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        expiration = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        scopes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        audience = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(29)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(29)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.v1.`object`.ObjectDetails
      case 4 => __out = com.google.protobuf.timestamp.Timestamp
      case 5 => __out = com.google.protobuf.timestamp.Timestamp
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.user.v1.user.RefreshToken(
    id = "",
    details = _root_.scala.None,
    clientId = "",
    authTime = _root_.scala.None,
    idleExpiration = _root_.scala.None,
    expiration = _root_.scala.None,
    scopes = _root_.scala.Seq.empty,
    audience = _root_.scala.Seq.empty
  )
  implicit class RefreshTokenLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.RefreshToken]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.RefreshToken](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def authTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getAuthTime)((c_, f_) => c_.copy(authTime = Option(f_)))
    def optionalAuthTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.authTime)((c_, f_) => c_.copy(authTime = f_))
    def idleExpiration: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getIdleExpiration)((c_, f_) => c_.copy(idleExpiration = Option(f_)))
    def optionalIdleExpiration: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.idleExpiration)((c_, f_) => c_.copy(idleExpiration = f_))
    def expiration: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getExpiration)((c_, f_) => c_.copy(expiration = Option(f_)))
    def optionalExpiration: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.expiration)((c_, f_) => c_.copy(expiration = f_))
    def scopes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.scopes)((c_, f_) => c_.copy(scopes = f_))
    def audience: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.audience)((c_, f_) => c_.copy(audience = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  final val CLIENT_ID_FIELD_NUMBER = 3
  final val AUTH_TIME_FIELD_NUMBER = 4
  final val IDLE_EXPIRATION_FIELD_NUMBER = 5
  final val EXPIRATION_FIELD_NUMBER = 6
  final val SCOPES_FIELD_NUMBER = 7
  final val AUDIENCE_FIELD_NUMBER = 8
  def of(
    id: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    clientId: _root_.scala.Predef.String,
    authTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    idleExpiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    expiration: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    scopes: _root_.scala.Seq[_root_.scala.Predef.String],
    audience: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.com.zitadel.user.v1.user.RefreshToken = _root_.com.zitadel.user.v1.user.RefreshToken(
    id,
    details,
    clientId,
    authTime,
    idleExpiration,
    expiration,
    scopes,
    audience
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.RefreshToken])
}
