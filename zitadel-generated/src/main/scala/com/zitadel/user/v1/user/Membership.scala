// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class Membership(
    userId: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    roles: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    displayName: _root_.scala.Predef.String = "",
    `type`: com.zitadel.user.v1.user.Membership.Type = com.zitadel.user.v1.user.Membership.Type.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Membership] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = userId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      roles.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      if (`type`.iam.isDefined) {
        val __value = `type`.iam.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
      };
      if (`type`.orgId.isDefined) {
        val __value = `type`.orgId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
      };
      if (`type`.projectId.isDefined) {
        val __value = `type`.projectId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      };
      if (`type`.projectGrantId.isDefined) {
        val __value = `type`.projectGrantId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = userId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      roles.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      `type`.iam.foreach { __v =>
        val __m = __v
        _output__.writeBool(5, __m)
      };
      `type`.orgId.foreach { __v =>
        val __m = __v
        _output__.writeString(6, __m)
      };
      `type`.projectId.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      `type`.projectGrantId.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withUserId(__v: _root_.scala.Predef.String): Membership = copy(userId = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: Membership = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): Membership = copy(details = Option(__v))
    def clearRoles = copy(roles = _root_.scala.Seq.empty)
    def addRoles(__vs: _root_.scala.Predef.String *): Membership = addAllRoles(__vs)
    def addAllRoles(__vs: Iterable[_root_.scala.Predef.String]): Membership = copy(roles = roles ++ __vs)
    def withRoles(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Membership = copy(roles = __v)
    def withDisplayName(__v: _root_.scala.Predef.String): Membership = copy(displayName = __v)
    def getIam: _root_.scala.Boolean = `type`.iam.getOrElse(false)
    def withIam(__v: _root_.scala.Boolean): Membership = copy(`type` = com.zitadel.user.v1.user.Membership.Type.Iam(__v))
    def getOrgId: _root_.scala.Predef.String = `type`.orgId.getOrElse("")
    def withOrgId(__v: _root_.scala.Predef.String): Membership = copy(`type` = com.zitadel.user.v1.user.Membership.Type.OrgId(__v))
    def getProjectId: _root_.scala.Predef.String = `type`.projectId.getOrElse("")
    def withProjectId(__v: _root_.scala.Predef.String): Membership = copy(`type` = com.zitadel.user.v1.user.Membership.Type.ProjectId(__v))
    def getProjectGrantId: _root_.scala.Predef.String = `type`.projectGrantId.getOrElse("")
    def withProjectGrantId(__v: _root_.scala.Predef.String): Membership = copy(`type` = com.zitadel.user.v1.user.Membership.Type.ProjectGrantId(__v))
    def clearType: Membership = copy(`type` = com.zitadel.user.v1.user.Membership.Type.Empty)
    def withType(__v: com.zitadel.user.v1.user.Membership.Type): Membership = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 2 => details.orNull
        case 3 => roles
        case 4 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 5 => `type`.iam.orNull
        case 6 => `type`.orgId.orNull
        case 7 => `type`.projectId.orNull
        case 8 => `type`.projectGrantId.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(userId)
        case 2 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PRepeated(roles.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PString(displayName)
        case 5 => `type`.iam.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => `type`.orgId.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => `type`.projectId.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => `type`.projectGrantId.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.Membership.type = com.zitadel.user.v1.user.Membership
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.Membership])
}

object Membership extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Membership] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Membership] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.Membership = {
    var __userId: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    val __roles: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __displayName: _root_.scala.Predef.String = ""
    var __type: com.zitadel.user.v1.user.Membership.Type = com.zitadel.user.v1.user.Membership.Type.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __userId = _input__.readStringRequireUtf8()
        case 18 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __roles += _input__.readStringRequireUtf8()
        case 34 =>
          __displayName = _input__.readStringRequireUtf8()
        case 40 =>
          __type = com.zitadel.user.v1.user.Membership.Type.Iam(_input__.readBool())
        case 50 =>
          __type = com.zitadel.user.v1.user.Membership.Type.OrgId(_input__.readStringRequireUtf8())
        case 58 =>
          __type = com.zitadel.user.v1.user.Membership.Type.ProjectId(_input__.readStringRequireUtf8())
        case 66 =>
          __type = com.zitadel.user.v1.user.Membership.Type.ProjectGrantId(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.Membership(
        userId = __userId,
        details = __details,
        roles = __roles.result(),
        displayName = __displayName,
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.Membership] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.Membership(
        userId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        roles = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        `type` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(com.zitadel.user.v1.user.Membership.Type.Iam(_))
            .orElse[com.zitadel.user.v1.user.Membership.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.user.v1.user.Membership.Type.OrgId(_)))
            .orElse[com.zitadel.user.v1.user.Membership.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.user.v1.user.Membership.Type.ProjectId(_)))
            .orElse[com.zitadel.user.v1.user.Membership.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.user.v1.user.Membership.Type.ProjectGrantId(_)))
            .getOrElse(com.zitadel.user.v1.user.Membership.Type.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(22)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(22)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.user.v1.user.Membership(
    userId = "",
    details = _root_.scala.None,
    roles = _root_.scala.Seq.empty,
    displayName = "",
    `type` = com.zitadel.user.v1.user.Membership.Type.Empty
  )
  sealed trait Type extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isIam: _root_.scala.Boolean = false
    def isOrgId: _root_.scala.Boolean = false
    def isProjectId: _root_.scala.Boolean = false
    def isProjectGrantId: _root_.scala.Boolean = false
    def iam: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def orgId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def projectId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def projectGrantId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Type {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.user.v1.user.Membership.Type {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Iam(value: _root_.scala.Boolean) extends com.zitadel.user.v1.user.Membership.Type {
      type ValueType = _root_.scala.Boolean
      override def isIam: _root_.scala.Boolean = true
      override def iam: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class OrgId(value: _root_.scala.Predef.String) extends com.zitadel.user.v1.user.Membership.Type {
      type ValueType = _root_.scala.Predef.String
      override def isOrgId: _root_.scala.Boolean = true
      override def orgId: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class ProjectId(value: _root_.scala.Predef.String) extends com.zitadel.user.v1.user.Membership.Type {
      type ValueType = _root_.scala.Predef.String
      override def isProjectId: _root_.scala.Boolean = true
      override def projectId: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class ProjectGrantId(value: _root_.scala.Predef.String) extends com.zitadel.user.v1.user.Membership.Type {
      type ValueType = _root_.scala.Predef.String
      override def isProjectGrantId: _root_.scala.Boolean = true
      override def projectGrantId: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 8
    }
  }
  implicit class MembershipLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Membership]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.Membership](_l) {
    def userId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def roles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.roles)((c_, f_) => c_.copy(roles = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def iam: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIam)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.Membership.Type.Iam(f_)))
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getOrgId)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.Membership.Type.OrgId(f_)))
    def projectId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getProjectId)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.Membership.Type.ProjectId(f_)))
    def projectGrantId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getProjectGrantId)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.Membership.Type.ProjectGrantId(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Membership.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val USER_ID_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  final val ROLES_FIELD_NUMBER = 3
  final val DISPLAY_NAME_FIELD_NUMBER = 4
  final val IAM_FIELD_NUMBER = 5
  final val ORG_ID_FIELD_NUMBER = 6
  final val PROJECT_ID_FIELD_NUMBER = 7
  final val PROJECT_GRANT_ID_FIELD_NUMBER = 8
  def of(
    userId: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    roles: _root_.scala.Seq[_root_.scala.Predef.String],
    displayName: _root_.scala.Predef.String,
    `type`: com.zitadel.user.v1.user.Membership.Type
  ): _root_.com.zitadel.user.v1.user.Membership = _root_.com.zitadel.user.v1.user.Membership(
    userId,
    details,
    roles,
    displayName,
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.Membership])
}
