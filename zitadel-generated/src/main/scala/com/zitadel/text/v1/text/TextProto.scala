// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.text.v1.text

object TextProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.zitadel.v1.`object`.ObjectProto,
    com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto,
    com.validate.validate.ValidateProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      com.zitadel.text.v1.text.MessageCustomText,
      com.zitadel.text.v1.text.LoginCustomText,
      com.zitadel.text.v1.text.SelectAccountScreenText,
      com.zitadel.text.v1.text.LoginScreenText,
      com.zitadel.text.v1.text.PasswordScreenText,
      com.zitadel.text.v1.text.UsernameChangeScreenText,
      com.zitadel.text.v1.text.UsernameChangeDoneScreenText,
      com.zitadel.text.v1.text.InitPasswordScreenText,
      com.zitadel.text.v1.text.InitPasswordDoneScreenText,
      com.zitadel.text.v1.text.EmailVerificationScreenText,
      com.zitadel.text.v1.text.EmailVerificationDoneScreenText,
      com.zitadel.text.v1.text.InitializeUserScreenText,
      com.zitadel.text.v1.text.InitializeUserDoneScreenText,
      com.zitadel.text.v1.text.InitMFAPromptScreenText,
      com.zitadel.text.v1.text.InitMFAOTPScreenText,
      com.zitadel.text.v1.text.InitMFAU2FScreenText,
      com.zitadel.text.v1.text.InitMFADoneScreenText,
      com.zitadel.text.v1.text.MFAProvidersText,
      com.zitadel.text.v1.text.VerifyMFAOTPScreenText,
      com.zitadel.text.v1.text.VerifyMFAU2FScreenText,
      com.zitadel.text.v1.text.PasswordlessScreenText,
      com.zitadel.text.v1.text.PasswordChangeScreenText,
      com.zitadel.text.v1.text.PasswordChangeDoneScreenText,
      com.zitadel.text.v1.text.PasswordResetDoneScreenText,
      com.zitadel.text.v1.text.RegistrationOptionScreenText,
      com.zitadel.text.v1.text.RegistrationUserScreenText,
      com.zitadel.text.v1.text.ExternalRegistrationUserOverviewScreenText,
      com.zitadel.text.v1.text.RegistrationOrgScreenText,
      com.zitadel.text.v1.text.LinkingUserDoneScreenText,
      com.zitadel.text.v1.text.ExternalUserNotFoundScreenText,
      com.zitadel.text.v1.text.SuccessLoginScreenText,
      com.zitadel.text.v1.text.LogoutDoneScreenText,
      com.zitadel.text.v1.text.FooterText,
      com.zitadel.text.v1.text.PasswordlessPromptScreenText,
      com.zitadel.text.v1.text.PasswordlessRegistrationScreenText,
      com.zitadel.text.v1.text.PasswordlessRegistrationDoneScreenText
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChJ6aXRhZGVsL3RleHQucHJvdG8SD3ppdGFkZWwudGV4dC52MRoUeml0YWRlbC9vYmplY3QucHJvdG8aLnByb3RvYy1nZW4tb
  3BlbmFwaXYyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJvdG8aF3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvIq8HChFNZXNzYWdlQ3Vzd
  G9tVGV4dBJBCgdkZXRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMSW
  woFdGl0bGUYAiABKAlCReI/BxIFdGl0bGWSQTgyG2N1c3RvbSB0ZXh0IGZvciBlbWFpbCB0aXRsZUoZIlpJVEFERUwgLSBNZXNzY
  WdlIFRpdGxlIlIFdGl0bGUSYgoKcHJlX2hlYWRlchgDIAEoCUJD4j8LEglwcmVIZWFkZXKSQTIyIGN1c3RvbSB0ZXh0IGZvciBlb
  WFpbCBwcmUtaGVhZGVySg4iVXNlciBNZXNzYWdlIlIJcHJlSGVhZGVyElsKB3N1YmplY3QYBCABKAlCQeI/CRIHc3ViamVjdJJBM
  jIdY3VzdG9tIHRleHQgZm9yIGVtYWlsIHN1YmplY3RKESJNZXNzYWdlIFN1YmplY3QiUgdzdWJqZWN0EnMKCGdyZWV0aW5nGAUgA
  SgJQlfiPwoSCGdyZWV0aW5nkkFHMh5jdXN0b20gdGV4dCBmb3IgZW1haWwgZ3JlZXRpbmdKJSJIZWxsbyB7ey5GaXJzdE5hbWV9f
  SB7ey5MYXN0TmFtZX19LCJSCGdyZWV0aW5nEs4BCgR0ZXh0GAYgASgJQrkB4j8GEgR0ZXh0kkGsATIaY3VzdG9tIHRleHQgZm9yI
  GVtYWlsIHRleHRKjQEiVGhpcyBpcyBteSBjdXN0b20gbWVzc2FnZSBUZXh0LiBJIGNhbiBhbHNvIGluY2x1ZGUgc29tZSBmaWVsZ
  HMsIGRlcGVuZGluZyBvbiB0aGUgbWVzc2FnZSB0eXBlIEkgd2FudCB0byBzZW5kLiB7ey5GaXJzdE5hbWV9fSB7ey5MYXN0TmFtZ
  X19LCJSBHRleHQSaAoLYnV0dG9uX3RleHQYByABKAlCR+I/DBIKYnV0dG9uVGV4dJJBNTIhY3VzdG9tIHRleHQgZm9yIGVtYWlsI
  GJ1dHRvbl90ZXh0ShAiQ2FsbCB0byBhY3Rpb24iUgpidXR0b25UZXh0EloKC2Zvb3Rlcl90ZXh0GAggASgJQjniPwwSCmZvb3Rlc
  lRleHSSQScyIWN1c3RvbSB0ZXh0IGZvciBlbWFpbCBmb290ZXJfdGV4dEoCIiJSCmZvb3RlclRleHQSLQoKaXNfZGVmYXVsdBgJI
  AEoCEIO4j8LEglpc0RlZmF1bHRSCWlzRGVmYXVsdCKuIQoPTG9naW5DdXN0b21UZXh0EkEKB2RldGFpbHMYASABKAsyGS56aXRhZ
  GVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscxJwChNzZWxlY3RfYWNjb3VudF90ZXh0GAIgASgLMigue
  ml0YWRlbC50ZXh0LnYxLlNlbGVjdEFjY291bnRTY3JlZW5UZXh0QhbiPxMSEXNlbGVjdEFjY291bnRUZXh0UhFzZWxlY3RBY2Nvd
  W50VGV4dBJPCgpsb2dpbl90ZXh0GAMgASgLMiAueml0YWRlbC50ZXh0LnYxLkxvZ2luU2NyZWVuVGV4dEIO4j8LEglsb2dpblRle
  HRSCWxvZ2luVGV4dBJbCg1wYXNzd29yZF90ZXh0GAQgASgLMiMueml0YWRlbC50ZXh0LnYxLlBhc3N3b3JkU2NyZWVuVGV4dEIR4
  j8OEgxwYXNzd29yZFRleHRSDHBhc3N3b3JkVGV4dBJ0ChR1c2VybmFtZV9jaGFuZ2VfdGV4dBgFIAEoCzIpLnppdGFkZWwudGV4d
  C52MS5Vc2VybmFtZUNoYW5nZVNjcmVlblRleHRCF+I/FBISdXNlcm5hbWVDaGFuZ2VUZXh0UhJ1c2VybmFtZUNoYW5nZVRleHQSh
  QEKGXVzZXJuYW1lX2NoYW5nZV9kb25lX3RleHQYBiABKAsyLS56aXRhZGVsLnRleHQudjEuVXNlcm5hbWVDaGFuZ2VEb25lU2NyZ
  WVuVGV4dEIb4j8YEhZ1c2VybmFtZUNoYW5nZURvbmVUZXh0UhZ1c2VybmFtZUNoYW5nZURvbmVUZXh0EmwKEmluaXRfcGFzc3dvc
  mRfdGV4dBgHIAEoCzInLnppdGFkZWwudGV4dC52MS5Jbml0UGFzc3dvcmRTY3JlZW5UZXh0QhXiPxISEGluaXRQYXNzd29yZFRle
  HRSEGluaXRQYXNzd29yZFRleHQSfQoXaW5pdF9wYXNzd29yZF9kb25lX3RleHQYCCABKAsyKy56aXRhZGVsLnRleHQudjEuSW5pd
  FBhc3N3b3JkRG9uZVNjcmVlblRleHRCGeI/FhIUaW5pdFBhc3N3b3JkRG9uZVRleHRSFGluaXRQYXNzd29yZERvbmVUZXh0EoABC
  hdlbWFpbF92ZXJpZmljYXRpb25fdGV4dBgJIAEoCzIsLnppdGFkZWwudGV4dC52MS5FbWFpbFZlcmlmaWNhdGlvblNjcmVlblRle
  HRCGuI/FxIVZW1haWxWZXJpZmljYXRpb25UZXh0UhVlbWFpbFZlcmlmaWNhdGlvblRleHQSkQEKHGVtYWlsX3ZlcmlmaWNhdGlvb
  l9kb25lX3RleHQYCiABKAsyMC56aXRhZGVsLnRleHQudjEuRW1haWxWZXJpZmljYXRpb25Eb25lU2NyZWVuVGV4dEIe4j8bEhllb
  WFpbFZlcmlmaWNhdGlvbkRvbmVUZXh0UhllbWFpbFZlcmlmaWNhdGlvbkRvbmVUZXh0EnQKFGluaXRpYWxpemVfdXNlcl90ZXh0G
  AsgASgLMikueml0YWRlbC50ZXh0LnYxLkluaXRpYWxpemVVc2VyU2NyZWVuVGV4dEIX4j8UEhJpbml0aWFsaXplVXNlclRleHRSE
  mluaXRpYWxpemVVc2VyVGV4dBJ4ChRpbml0aWFsaXplX2RvbmVfdGV4dBgMIAEoCzItLnppdGFkZWwudGV4dC52MS5Jbml0aWFsa
  XplVXNlckRvbmVTY3JlZW5UZXh0QhfiPxQSEmluaXRpYWxpemVEb25lVGV4dFISaW5pdGlhbGl6ZURvbmVUZXh0EnEKFGluaXRfb
  WZhX3Byb21wdF90ZXh0GA0gASgLMigueml0YWRlbC50ZXh0LnYxLkluaXRNRkFQcm9tcHRTY3JlZW5UZXh0QhbiPxMSEWluaXRNZ
  mFQcm9tcHRUZXh0UhFpbml0TWZhUHJvbXB0VGV4dBJlChFpbml0X21mYV9vdHBfdGV4dBgOIAEoCzIlLnppdGFkZWwudGV4dC52M
  S5Jbml0TUZBT1RQU2NyZWVuVGV4dEIT4j8QEg5pbml0TWZhT3RwVGV4dFIOaW5pdE1mYU90cFRleHQSZQoRaW5pdF9tZmFfdTJmX
  3RleHQYDyABKAsyJS56aXRhZGVsLnRleHQudjEuSW5pdE1GQVUyRlNjcmVlblRleHRCE+I/EBIOaW5pdE1mYVUyRlRleHRSDmlua
  XRNZmFVMmZUZXh0EmkKEmluaXRfbWZhX2RvbmVfdGV4dBgQIAEoCzImLnppdGFkZWwudGV4dC52MS5Jbml0TUZBRG9uZVNjcmVlb
  lRleHRCFOI/ERIPaW5pdE1mYURvbmVUZXh0Ug9pbml0TWZhRG9uZVRleHQSZgoSbWZhX3Byb3ZpZGVyc190ZXh0GBEgASgLMiEue
  ml0YWRlbC50ZXh0LnYxLk1GQVByb3ZpZGVyc1RleHRCFeI/EhIQbWZhUHJvdmlkZXJzVGV4dFIQbWZhUHJvdmlkZXJzVGV4dBJtC
  hN2ZXJpZnlfbWZhX290cF90ZXh0GBIgASgLMicueml0YWRlbC50ZXh0LnYxLlZlcmlmeU1GQU9UUFNjcmVlblRleHRCFeI/EhIQd
  mVyaWZ5TWZhT3RwVGV4dFIQdmVyaWZ5TWZhT3RwVGV4dBJtChN2ZXJpZnlfbWZhX3UyZl90ZXh0GBMgASgLMicueml0YWRlbC50Z
  Xh0LnYxLlZlcmlmeU1GQVUyRlNjcmVlblRleHRCFeI/EhIQdmVyaWZ5TWZhVTJGVGV4dFIQdmVyaWZ5TWZhVTJmVGV4dBJrChFwY
  XNzd29yZGxlc3NfdGV4dBgUIAEoCzInLnppdGFkZWwudGV4dC52MS5QYXNzd29yZGxlc3NTY3JlZW5UZXh0QhXiPxISEHBhc3N3b
  3JkbGVzc1RleHRSEHBhc3N3b3JkbGVzc1RleHQSdAoUcGFzc3dvcmRfY2hhbmdlX3RleHQYFSABKAsyKS56aXRhZGVsLnRleHQud
  jEuUGFzc3dvcmRDaGFuZ2VTY3JlZW5UZXh0QhfiPxQSEnBhc3N3b3JkQ2hhbmdlVGV4dFIScGFzc3dvcmRDaGFuZ2VUZXh0EoUBC
  hlwYXNzd29yZF9jaGFuZ2VfZG9uZV90ZXh0GBYgASgLMi0ueml0YWRlbC50ZXh0LnYxLlBhc3N3b3JkQ2hhbmdlRG9uZVNjcmVlb
  lRleHRCG+I/GBIWcGFzc3dvcmRDaGFuZ2VEb25lVGV4dFIWcGFzc3dvcmRDaGFuZ2VEb25lVGV4dBKBAQoYcGFzc3dvcmRfcmVzZ
  XRfZG9uZV90ZXh0GBcgASgLMiwueml0YWRlbC50ZXh0LnYxLlBhc3N3b3JkUmVzZXREb25lU2NyZWVuVGV4dEIa4j8XEhVwYXNzd
  29yZFJlc2V0RG9uZVRleHRSFXBhc3N3b3JkUmVzZXREb25lVGV4dBKEAQoYcmVnaXN0cmF0aW9uX29wdGlvbl90ZXh0GBggASgLM
  i0ueml0YWRlbC50ZXh0LnYxLlJlZ2lzdHJhdGlvbk9wdGlvblNjcmVlblRleHRCG+I/GBIWcmVnaXN0cmF0aW9uT3B0aW9uVGV4d
  FIWcmVnaXN0cmF0aW9uT3B0aW9uVGV4dBJ8ChZyZWdpc3RyYXRpb25fdXNlcl90ZXh0GBkgASgLMisueml0YWRlbC50ZXh0LnYxL
  lJlZ2lzdHJhdGlvblVzZXJTY3JlZW5UZXh0QhniPxYSFHJlZ2lzdHJhdGlvblVzZXJUZXh0UhRyZWdpc3RyYXRpb25Vc2VyVGV4d
  BJ4ChVyZWdpc3RyYXRpb25fb3JnX3RleHQYGiABKAsyKi56aXRhZGVsLnRleHQudjEuUmVnaXN0cmF0aW9uT3JnU2NyZWVuVGV4d
  EIY4j8VEhNyZWdpc3RyYXRpb25PcmdUZXh0UhNyZWdpc3RyYXRpb25PcmdUZXh0EnkKFmxpbmtpbmdfdXNlcl9kb25lX3RleHQYG
  yABKAsyKi56aXRhZGVsLnRleHQudjEuTGlua2luZ1VzZXJEb25lU2NyZWVuVGV4dEIY4j8VEhNsaW5raW5nVXNlckRvbmVUZXh0U
  hNsaW5raW5nVXNlckRvbmVUZXh0Eo4BChxleHRlcm5hbF91c2VyX25vdF9mb3VuZF90ZXh0GBwgASgLMi8ueml0YWRlbC50ZXh0L
  nYxLkV4dGVybmFsVXNlck5vdEZvdW5kU2NyZWVuVGV4dEId4j8aEhhleHRlcm5hbFVzZXJOb3RGb3VuZFRleHRSGGV4dGVybmFsV
  XNlck5vdEZvdW5kVGV4dBJsChJzdWNjZXNzX2xvZ2luX3RleHQYHSABKAsyJy56aXRhZGVsLnRleHQudjEuU3VjY2Vzc0xvZ2luU
  2NyZWVuVGV4dEIV4j8SEhBzdWNjZXNzTG9naW5UZXh0UhBzdWNjZXNzTG9naW5UZXh0ElcKC2xvZ291dF90ZXh0GB4gASgLMiUue
  ml0YWRlbC50ZXh0LnYxLkxvZ291dERvbmVTY3JlZW5UZXh0Qg/iPwwSCmxvZ291dFRleHRSCmxvZ291dFRleHQSTQoLZm9vdGVyX
  3RleHQYHyABKAsyGy56aXRhZGVsLnRleHQudjEuRm9vdGVyVGV4dEIP4j8MEgpmb290ZXJUZXh0Ugpmb290ZXJUZXh0EoQBChhwY
  XNzd29yZGxlc3NfcHJvbXB0X3RleHQYICABKAsyLS56aXRhZGVsLnRleHQudjEuUGFzc3dvcmRsZXNzUHJvbXB0U2NyZWVuVGV4d
  EIb4j8YEhZwYXNzd29yZGxlc3NQcm9tcHRUZXh0UhZwYXNzd29yZGxlc3NQcm9tcHRUZXh0EpwBCh5wYXNzd29yZGxlc3NfcmVna
  XN0cmF0aW9uX3RleHQYISABKAsyMy56aXRhZGVsLnRleHQudjEuUGFzc3dvcmRsZXNzUmVnaXN0cmF0aW9uU2NyZWVuVGV4dEIh4
  j8eEhxwYXNzd29yZGxlc3NSZWdpc3RyYXRpb25UZXh0UhxwYXNzd29yZGxlc3NSZWdpc3RyYXRpb25UZXh0Eq0BCiNwYXNzd29yZ
  Gxlc3NfcmVnaXN0cmF0aW9uX2RvbmVfdGV4dBgiIAEoCzI3LnppdGFkZWwudGV4dC52MS5QYXNzd29yZGxlc3NSZWdpc3RyYXRpb
  25Eb25lU2NyZWVuVGV4dEIl4j8iEiBwYXNzd29yZGxlc3NSZWdpc3RyYXRpb25Eb25lVGV4dFIgcGFzc3dvcmRsZXNzUmVnaXN0c
  mF0aW9uRG9uZVRleHQSvgEKKGV4dGVybmFsX3JlZ2lzdHJhdGlvbl91c2VyX292ZXJ2aWV3X3RleHQYIyABKAsyOy56aXRhZGVsL
  nRleHQudjEuRXh0ZXJuYWxSZWdpc3RyYXRpb25Vc2VyT3ZlcnZpZXdTY3JlZW5UZXh0QiniPyYSJGV4dGVybmFsUmVnaXN0cmF0a
  W9uVXNlck92ZXJ2aWV3VGV4dFIkZXh0ZXJuYWxSZWdpc3RyYXRpb25Vc2VyT3ZlcnZpZXdUZXh0Ei0KCmlzX2RlZmF1bHQYJCABK
  AhCDuI/CxIJaXNEZWZhdWx0Uglpc0RlZmF1bHQi/QQKF1NlbGVjdEFjY291bnRTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQhLiP
  wcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC2Rlc
  2NyaXB0aW9uElQKFXRpdGxlX2xpbmtpbmdfcHJvY2VzcxgDIAEoCUIg4j8VEhN0aXRsZUxpbmtpbmdQcm9jZXNz+kIFcgMYyAFSE
  3RpdGxlTGlua2luZ1Byb2Nlc3MSZgobZGVzY3JpcHRpb25fbGlua2luZ19wcm9jZXNzGAQgASgJQibiPxsSGWRlc2NyaXB0aW9uT
  Glua2luZ1Byb2Nlc3P6QgVyAxj0A1IZZGVzY3JpcHRpb25MaW5raW5nUHJvY2VzcxI1CgpvdGhlcl91c2VyGAUgASgJQhbiPwsSC
  W90aGVyVXNlcvpCBXIDGPQDUglvdGhlclVzZXISUAoUc2Vzc2lvbl9zdGF0ZV9hY3RpdmUYBiABKAlCHuI/FBISc2Vzc2lvblN0Y
  XRlQWN0aXZl+kIEcgIYZFISc2Vzc2lvblN0YXRlQWN0aXZlElYKFnNlc3Npb25fc3RhdGVfaW5hY3RpdmUYByABKAlCIOI/FhIUc
  2Vzc2lvblN0YXRlSW5hY3RpdmX6QgRyAhhkUhRzZXNzaW9uU3RhdGVJbmFjdGl2ZRJdChp1c2VyX211c3RfYmVfbWVtYmVyX29mX
  29yZxgIIAEoCUIi4j8XEhV1c2VyTXVzdEJlTWVtYmVyT2ZPcmf6QgVyAxj0A1IVdXNlck11c3RCZU1lbWJlck9mT3JnIoQHCg9Mb
  2dpblNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABK
  AlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SVAoVdGl0bGVfbGlua2luZ19wcm9jZXNzGAMgASgJQiDiP
  xUSE3RpdGxlTGlua2luZ1Byb2Nlc3P6QgVyAxjIAVITdGl0bGVMaW5raW5nUHJvY2VzcxJmChtkZXNjcmlwdGlvbl9saW5raW5nX
  3Byb2Nlc3MYBCABKAlCJuI/GxIZZGVzY3JpcHRpb25MaW5raW5nUHJvY2Vzc/pCBXIDGPQDUhlkZXNjcmlwdGlvbkxpbmtpbmdQc
  m9jZXNzEl0KGnVzZXJfbXVzdF9iZV9tZW1iZXJfb2Zfb3JnGAUgASgJQiLiPxcSFXVzZXJNdXN0QmVNZW1iZXJPZk9yZ/pCBXIDG
  PQDUhV1c2VyTXVzdEJlTWVtYmVyT2ZPcmcSRQoQbG9naW5fbmFtZV9sYWJlbBgGIAEoCUIb4j8QEg5sb2dpbk5hbWVMYWJlbPpCB
  XIDGMgBUg5sb2dpbk5hbWVMYWJlbBJQChRyZWdpc3Rlcl9idXR0b25fdGV4dBgHIAEoCUIe4j8UEhJyZWdpc3RlckJ1dHRvblRle
  HT6QgRyAhhkUhJyZWdpc3RlckJ1dHRvblRleHQSRAoQbmV4dF9idXR0b25fdGV4dBgIIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4d
  PpCBHICGGRSDm5leHRCdXR0b25UZXh0EmAKGWV4dGVybmFsX3VzZXJfZGVzY3JpcHRpb24YCSABKAlCJOI/GRIXZXh0ZXJuYWxVc
  2VyRGVzY3JpcHRpb276QgVyAxj0A1IXZXh0ZXJuYWxVc2VyRGVzY3JpcHRpb24SVAoVdXNlcl9uYW1lX3BsYWNlaG9sZGVyGAogA
  SgJQiDiPxUSE3VzZXJOYW1lUGxhY2Vob2xkZXL6QgVyAxjIAVITdXNlck5hbWVQbGFjZWhvbGRlchJXChZsb2dpbl9uYW1lX3BsY
  WNlaG9sZGVyGAsgASgJQiHiPxYSFGxvZ2luTmFtZVBsYWNlaG9sZGVy+kIFcgMYyAFSFGxvZ2luTmFtZVBsYWNlaG9sZGVyIuoFC
  hJQYXNzd29yZFNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb
  24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SQQoOcGFzc3dvcmRfbGFiZWwYAyABKAlCGuI/D
  xINcGFzc3dvcmRMYWJlbPpCBXIDGMgBUg1wYXNzd29yZExhYmVsEkEKD3Jlc2V0X2xpbmtfdGV4dBgEIAEoCUIZ4j8PEg1yZXNld
  ExpbmtUZXh0+kIEcgIYZFINcmVzZXRMaW5rVGV4dBJEChBiYWNrX2J1dHRvbl90ZXh0GAUgASgJQhriPxASDmJhY2tCdXR0b25UZ
  Xh0+kIEcgIYZFIOYmFja0J1dHRvblRleHQSRAoQbmV4dF9idXR0b25fdGV4dBgGIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4dPpCB
  HICGGRSDm5leHRCdXR0b25UZXh0EjQKCm1pbl9sZW5ndGgYByABKAlCFeI/CxIJbWluTGVuZ3Ro+kIEcgIYZFIJbWluTGVuZ3RoE
  j0KDWhhc191cHBlcmNhc2UYCCABKAlCGOI/DhIMaGFzVXBwZXJjYXNl+kIEcgIYZFIMaGFzVXBwZXJjYXNlEj0KDWhhc19sb3dlc
  mNhc2UYCSABKAlCGOI/DhIMaGFzTG93ZXJjYXNl+kIEcgIYZFIMaGFzTG93ZXJjYXNlEjQKCmhhc19udW1iZXIYCiABKAlCFeI/C
  xIJaGFzTnVtYmVy+kIEcgIYZFIJaGFzTnVtYmVyEjQKCmhhc19zeW1ib2wYCyABKAlCFeI/CxIJaGFzU3ltYm9s+kIEcgIYZFIJa
  GFzU3ltYm9sEjwKDGNvbmZpcm1hdGlvbhgMIAEoCUIY4j8OEgxjb25maXJtYXRpb276QgRyAhhkUgxjb25maXJtYXRpb24i1QIKG
  FVzZXJuYW1lQ2hhbmdlU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjc
  mlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDUgtkZXNjcmlwdGlvbhJBCg51c2VybmFtZV9sYWJlbBgDIAEoC
  UIa4j8PEg11c2VybmFtZUxhYmVs+kIFcgMYyAFSDXVzZXJuYW1lTGFiZWwSSgoSY2FuY2VsX2J1dHRvbl90ZXh0GAQgASgJQhziP
  xISEGNhbmNlbEJ1dHRvblRleHT6QgRyAhhkUhBjYW5jZWxCdXR0b25UZXh0EkQKEG5leHRfYnV0dG9uX3RleHQYBSABKAlCGuI/E
  BIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dCLKAQocVXNlcm5hbWVDaGFuZ2VEb25lU2NyZWVuVGV4dBIoC
  gV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwd
  GlvbvpCBXIDGPQDUgtkZXNjcmlwdGlvbhJEChBuZXh0X2J1dHRvbl90ZXh0GAMgASgJQhriPxASDm5leHRCdXR0b25UZXh0+kIEc
  gIYZFIObmV4dEJ1dHRvblRleHQi9wMKFkluaXRQYXNzd29yZFNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6Q
  gVyAxjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SN
  QoKY29kZV9sYWJlbBgDIAEoCUIW4j8LEgljb2RlTGFiZWz6QgVyAxjIAVIJY29kZUxhYmVsEksKEm5ld19wYXNzd29yZF9sYWJlb
  BgEIAEoCUId4j8SEhBuZXdQYXNzd29yZExhYmVs+kIFcgMYyAFSEG5ld1Bhc3N3b3JkTGFiZWwSYQoabmV3X3Bhc3N3b3JkX2Nvb
  mZpcm1fbGFiZWwYBSABKAlCJOI/GRIXbmV3UGFzc3dvcmRDb25maXJtTGFiZWz6QgVyAxjIAVIXbmV3UGFzc3dvcmRDb25maXJtT
  GFiZWwSRAoQbmV4dF9idXR0b25fdGV4dBgGIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4dPpCBHICGGRSDm5leHRCdXR0b25UZXh0E
  koKEnJlc2VuZF9idXR0b25fdGV4dBgHIAEoCUIc4j8SEhByZXNlbmRCdXR0b25UZXh0+kIEcgIYZFIQcmVzZW5kQnV0dG9uVGV4d
  CKUAgoaSW5pdFBhc3N3b3JkRG9uZVNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSO
  goLZGVzY3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SRAoQbmV4dF9idXR0b25fd
  GV4dBgDIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4dPpCBHICGGRSDm5leHRCdXR0b25UZXh0EkoKEmNhbmNlbF9idXR0b25fdGV4d
  BgEIAEoCUIc4j8SEhBjYW5jZWxCdXR0b25UZXh0+kIEcgIYZFIQY2FuY2VsQnV0dG9uVGV4dCLMAgobRW1haWxWZXJpZmljYXRpb
  25TY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQ
  hjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0aW9uEjUKCmNvZGVfbGFiZWwYAyABKAlCFuI/CxIJY29kZUxhYmVs+
  kIFcgMYyAFSCWNvZGVMYWJlbBJEChBuZXh0X2J1dHRvbl90ZXh0GAQgASgJQhriPxASDm5leHRCdXR0b25UZXh0+kIEcgIYZFIOb
  mV4dEJ1dHRvblRleHQSSgoScmVzZW5kX2J1dHRvbl90ZXh0GAUgASgJQhziPxISEHJlc2VuZEJ1dHRvblRleHT6QgRyAhhkUhByZ
  XNlbmRCdXR0b25UZXh0IuICCh9FbWFpbFZlcmlmaWNhdGlvbkRvbmVTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQhLiPwcSBXRpd
  Gxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0a
  W9uEkQKEG5leHRfYnV0dG9uX3RleHQYAyABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dBJKC
  hJjYW5jZWxfYnV0dG9uX3RleHQYBCABKAlCHOI/EhIQY2FuY2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhbmNlbEJ1dHRvblRleHQSR
  woRbG9naW5fYnV0dG9uX3RleHQYBSABKAlCG+I/ERIPbG9naW5CdXR0b25UZXh0+kIEcgIYZFIPbG9naW5CdXR0b25UZXh0IvkDC
  hhJbml0aWFsaXplVXNlclNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY
  3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SNQoKY29kZV9sYWJlbBgDIAEoCUIW4
  j8LEgljb2RlTGFiZWz6QgVyAxjIAVIJY29kZUxhYmVsEksKEm5ld19wYXNzd29yZF9sYWJlbBgEIAEoCUId4j8SEhBuZXdQYXNzd
  29yZExhYmVs+kIFcgMYyAFSEG5ld1Bhc3N3b3JkTGFiZWwSYQoabmV3X3Bhc3N3b3JkX2NvbmZpcm1fbGFiZWwYBSABKAlCJOI/G
  RIXbmV3UGFzc3dvcmRDb25maXJtTGFiZWz6QgVyAxjIAVIXbmV3UGFzc3dvcmRDb25maXJtTGFiZWwSSgoScmVzZW5kX2J1dHRvb
  l90ZXh0GAYgASgJQhziPxISEHJlc2VuZEJ1dHRvblRleHT6QgRyAhhkUhByZXNlbmRCdXR0b25UZXh0EkQKEG5leHRfYnV0dG9uX
  3RleHQYByABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dCKWAgocSW5pdGlhbGl6ZVVzZXJEb
  25lU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoC
  UIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDUgtkZXNjcmlwdGlvbhJKChJjYW5jZWxfYnV0dG9uX3RleHQYAyABKAlCHOI/EhIQY
  2FuY2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhbmNlbEJ1dHRvblRleHQSRAoQbmV4dF9idXR0b25fdGV4dBgEIAEoCUIa4j8QEg5uZ
  Xh0QnV0dG9uVGV4dPpCBHICGGRSDm5leHRCdXR0b25UZXh0IvkCChdJbml0TUZBUHJvbXB0U2NyZWVuVGV4dBIoCgV0aXRsZRgBI
  AEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDG
  PQDUgtkZXNjcmlwdGlvbhI1CgpvdHBfb3B0aW9uGAMgASgJQhbiPwsSCW90cE9wdGlvbvpCBXIDGMgBUglvdHBPcHRpb24SNQoKd
  TJmX29wdGlvbhgEIAEoCUIW4j8LEgl1MkZPcHRpb276QgVyAxjIAVIJdTJmT3B0aW9uEkQKEHNraXBfYnV0dG9uX3RleHQYBSABK
  AlCGuI/EBIOc2tpcEJ1dHRvblRleHT6QgRyAhhkUg5za2lwQnV0dG9uVGV4dBJEChBuZXh0X2J1dHRvbl90ZXh0GAYgASgJQhriP
  xASDm5leHRCdXR0b25UZXh0+kIEcgIYZFIObmV4dEJ1dHRvblRleHQiyAMKFEluaXRNRkFPVFBTY3JlZW5UZXh0EigKBXRpdGxlG
  AEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFc
  gMY9ANSC2Rlc2NyaXB0aW9uEkQKD2Rlc2NyaXB0aW9uX290cBgDIAEoCUIb4j8QEg5kZXNjcmlwdGlvbk90cPpCBXIDGPQDUg5kZ
  XNjcmlwdGlvbk90cBI7CgxzZWNyZXRfbGFiZWwYBCABKAlCGOI/DRILc2VjcmV0TGFiZWz6QgVyAxjIAVILc2VjcmV0TGFiZWwSN
  QoKY29kZV9sYWJlbBgFIAEoCUIW4j8LEgljb2RlTGFiZWz6QgVyAxjIAVIJY29kZUxhYmVsEkQKEG5leHRfYnV0dG9uX3RleHQYB
  iABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dBJKChJjYW5jZWxfYnV0dG9uX3RleHQYByABK
  AlCHOI/EhIQY2FuY2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhbmNlbEJ1dHRvblRleHQinwMKFEluaXRNRkFVMkZTY3JlZW5UZXh0E
  igKBXRpdGxlGAEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2Nya
  XB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0aW9uEkUKEHRva2VuX25hbWVfbGFiZWwYAyABKAlCG+I/EBIOdG9rZW5OYW1lTGFiZWz6Q
  gVyAxjIAVIOdG9rZW5OYW1lTGFiZWwSPgoNbm90X3N1cHBvcnRlZBgEIAEoCUIZ4j8OEgxub3RTdXBwb3J0ZWT6QgVyAxj0A1IMb
  m90U3VwcG9ydGVkEmAKGnJlZ2lzdGVyX3Rva2VuX2J1dHRvbl90ZXh0GAUgASgJQiPiPxkSF3JlZ2lzdGVyVG9rZW5CdXR0b25UZ
  Xh0+kIEcgIYZFIXcmVnaXN0ZXJUb2tlbkJ1dHRvblRleHQSOAoLZXJyb3JfcmV0cnkYBiABKAlCF+I/DBIKZXJyb3JSZXRyefpCB
  XIDGPQDUgplcnJvclJldHJ5Io8CChVJbml0TUZBRG9uZVNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyA
  xjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SSgoSY
  2FuY2VsX2J1dHRvbl90ZXh0GAMgASgJQhziPxISEGNhbmNlbEJ1dHRvblRleHT6QgRyAhhkUhBjYW5jZWxCdXR0b25UZXh0EkQKE
  G5leHRfYnV0dG9uX3RleHQYBCABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dCKXAQoQTUZBU
  HJvdmlkZXJzVGV4dBI7CgxjaG9vc2Vfb3RoZXIYASABKAlCGOI/DRILY2hvb3NlT3RoZXL6QgVyAxj0A1ILY2hvb3NlT3RoZXISI
  goDb3RwGAIgASgJQhDiPwUSA290cPpCBXIDGMgBUgNvdHASIgoDdTJmGAMgASgJQhDiPwUSA3UyRvpCBXIDGMgBUgN1MmYi+wEKF
  lZlcmlmeU1GQU9UUFNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY3Jpc
  HRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SNQoKY29kZV9sYWJlbBgDIAEoCUIW4j8LE
  gljb2RlTGFiZWz6QgVyAxjIAVIJY29kZUxhYmVsEkQKEG5leHRfYnV0dG9uX3RleHQYBCABKAlCGuI/EBIObmV4dEJ1dHRvblRle
  HT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dCLIAgoWVmVyaWZ5TUZBVTJGU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0a
  XRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDUgtkZXNjcmlwd
  GlvbhJOChN2YWxpZGF0ZV90b2tlbl90ZXh0GAMgASgJQh7iPxMSEXZhbGlkYXRlVG9rZW5UZXh0+kIFcgMY9ANSEXZhbGlkYXRlV
  G9rZW5UZXh0Ej4KDW5vdF9zdXBwb3J0ZWQYBCABKAlCGeI/DhIMbm90U3VwcG9ydGVk+kIFcgMY9ANSDG5vdFN1cHBvcnRlZBI4C
  gtlcnJvcl9yZXRyeRgFIAEoCUIX4j8MEgplcnJvclJldHJ5+kIFcgMY9ANSCmVycm9yUmV0cnkiuAMKFlBhc3N3b3JkbGVzc1Njc
  mVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABKAlCGOI/D
  RILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SWwoZbG9naW5fd2l0aF9wd19idXR0b25fdGV4dBgDIAEoCUIh4j8XE
  hVsb2dpbldpdGhQd0J1dHRvblRleHT6QgRyAhhkUhVsb2dpbldpdGhQd0J1dHRvblRleHQSYQoadmFsaWRhdGVfdG9rZW5fYnV0d
  G9uX3RleHQYBCABKAlCJOI/GRIXdmFsaWRhdGVUb2tlbkJ1dHRvblRleHT6QgVyAxjIAVIXdmFsaWRhdGVUb2tlbkJ1dHRvblRle
  HQSPgoNbm90X3N1cHBvcnRlZBgFIAEoCUIZ4j8OEgxub3RTdXBwb3J0ZWT6QgVyAxj0A1IMbm90U3VwcG9ydGVkEjgKC2Vycm9yX
  3JldHJ5GAYgASgJQhfiPwwSCmVycm9yUmV0cnn6QgVyAxj0A1IKZXJyb3JSZXRyeSKPBAoYUGFzc3dvcmRDaGFuZ2VTY3JlZW5UZ
  Xh0EigKBXRpdGxlGAEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc
  2NyaXB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0aW9uEksKEm9sZF9wYXNzd29yZF9sYWJlbBgDIAEoCUId4j8SEhBvbGRQYXNzd29yZ
  ExhYmVs+kIFcgMYyAFSEG9sZFBhc3N3b3JkTGFiZWwSSwoSbmV3X3Bhc3N3b3JkX2xhYmVsGAQgASgJQh3iPxISEG5ld1Bhc3N3b
  3JkTGFiZWz6QgVyAxjIAVIQbmV3UGFzc3dvcmRMYWJlbBJhChpuZXdfcGFzc3dvcmRfY29uZmlybV9sYWJlbBgFIAEoCUIk4j8ZE
  hduZXdQYXNzd29yZENvbmZpcm1MYWJlbPpCBXIDGMgBUhduZXdQYXNzd29yZENvbmZpcm1MYWJlbBJKChJjYW5jZWxfYnV0dG9uX
  3RleHQYBiABKAlCHOI/EhIQY2FuY2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhbmNlbEJ1dHRvblRleHQSRAoQbmV4dF9idXR0b25fd
  GV4dBgHIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4dPpCBHICGGRSDm5leHRCdXR0b25UZXh0IsoBChxQYXNzd29yZENoYW5nZURvb
  mVTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQ
  hjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0aW9uEkQKEG5leHRfYnV0dG9uX3RleHQYAyABKAlCGuI/EBIObmV4d
  EJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dCLJAQobUGFzc3dvcmRSZXNldERvbmVTY3JlZW5UZXh0EigKBXRpdGxlG
  AEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFc
  gMY9ANSC2Rlc2NyaXB0aW9uEkQKEG5leHRfYnV0dG9uX3RleHQYAyABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZ
  Xh0QnV0dG9uVGV4dCKHAwocUmVnaXN0cmF0aW9uT3B0aW9uU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCB
  XIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDUgtkZXNjcmlwdGlvbhJSC
  hV1c2VyX25hbWVfYnV0dG9uX3RleHQYAyABKAlCH+I/FBISdXNlck5hbWVCdXR0b25UZXh0+kIFcgMYyAFSEnVzZXJOYW1lQnV0d
  G9uVGV4dBJjChpleHRlcm5hbF9sb2dpbl9kZXNjcmlwdGlvbhgEIAEoCUIl4j8aEhhleHRlcm5hbExvZ2luRGVzY3JpcHRpb276Q
  gVyAxj0A1IYZXh0ZXJuYWxMb2dpbkRlc2NyaXB0aW9uEkgKEWxvZ2luX2J1dHRvbl90ZXh0GAUgASgJQhziPxESD2xvZ2luQnV0d
  G9uVGV4dPpCBXIDGMgBUg9sb2dpbkJ1dHRvblRleHQiygoKGlJlZ2lzdHJhdGlvblVzZXJTY3JlZW5UZXh0EigKBXRpdGxlGAEgA
  SgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9
  ANSC2Rlc2NyaXB0aW9uEl0KGGRlc2NyaXB0aW9uX29yZ19yZWdpc3RlchgDIAEoCUIj4j8YEhZkZXNjcmlwdGlvbk9yZ1JlZ2lzd
  GVy+kIFcgMY9ANSFmRlc2NyaXB0aW9uT3JnUmVnaXN0ZXISRAoPZmlyc3RuYW1lX2xhYmVsGAQgASgJQhviPxASDmZpcnN0bmFtZ
  UxhYmVs+kIFcgMYyAFSDmZpcnN0bmFtZUxhYmVsEkEKDmxhc3RuYW1lX2xhYmVsGAUgASgJQhriPw8SDWxhc3RuYW1lTGFiZWz6Q
  gVyAxjIAVINbGFzdG5hbWVMYWJlbBI4CgtlbWFpbF9sYWJlbBgGIAEoCUIX4j8MEgplbWFpbExhYmVs+kIFcgMYyAFSCmVtYWlsT
  GFiZWwSQQoOdXNlcm5hbWVfbGFiZWwYByABKAlCGuI/DxINdXNlcm5hbWVMYWJlbPpCBXIDGMgBUg11c2VybmFtZUxhYmVsEkEKD
  mxhbmd1YWdlX2xhYmVsGAggASgJQhriPw8SDWxhbmd1YWdlTGFiZWz6QgVyAxjIAVINbGFuZ3VhZ2VMYWJlbBI7CgxnZW5kZXJfb
  GFiZWwYCSABKAlCGOI/DRILZ2VuZGVyTGFiZWz6QgVyAxjIAVILZ2VuZGVyTGFiZWwSQQoOcGFzc3dvcmRfbGFiZWwYCiABKAlCG
  uI/DxINcGFzc3dvcmRMYWJlbPpCBXIDGMgBUg1wYXNzd29yZExhYmVsElcKFnBhc3N3b3JkX2NvbmZpcm1fbGFiZWwYCyABKAlCI
  eI/FhIUcGFzc3dvcmRDb25maXJtTGFiZWz6QgVyAxjIAVIUcGFzc3dvcmRDb25maXJtTGFiZWwSUgoVdG9zX2FuZF9wcml2YWN5X
  2xhYmVsGAwgASgJQh/iPxQSEnRvc0FuZFByaXZhY3lMYWJlbPpCBXIDGMgBUhJ0b3NBbmRQcml2YWN5TGFiZWwSOAoLdG9zX2Nvb
  mZpcm0YDSABKAlCF+I/DBIKdG9zQ29uZmlybfpCBXIDGMgBUgp0b3NDb25maXJtEjwKDXRvc19saW5rX3RleHQYDyABKAlCGOI/D
  RILdG9zTGlua1RleHT6QgVyAxjIAVILdG9zTGlua1RleHQSRAoPcHJpdmFjeV9jb25maXJtGBAgASgJQhviPxASDnByaXZhY3lDb
  25maXJt+kIFcgMYyAFSDnByaXZhY3lDb25maXJtEkgKEXByaXZhY3lfbGlua190ZXh0GBIgASgJQhziPxESD3ByaXZhY3lMaW5rV
  GV4dPpCBXIDGMgBUg9wcml2YWN5TGlua1RleHQSRQoQbmV4dF9idXR0b25fdGV4dBgUIAEoCUIb4j8QEg5uZXh0QnV0dG9uVGV4d
  PpCBXIDGMgBUg5uZXh0QnV0dG9uVGV4dBJFChBiYWNrX2J1dHRvbl90ZXh0GBUgASgJQhviPxASDmJhY2tCdXR0b25UZXh0+kIFc
  gMYyAFSDmJhY2tCdXR0b25UZXh0SgQIDhAPSgQIERASSgQIExAUSgQIFhAXUgh0b3NfbGlua1IMcHJpdmFjeV9saW5rUhpleHRlc
  m5hbF9sb2dpbl9kZXNjcmlwdGlvblIPdG9zX2NvbmZpcm1fYW5kItkICipFeHRlcm5hbFJlZ2lzdHJhdGlvblVzZXJPdmVydmlld
  1NjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABKAlCG
  OI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SOAoLZW1haWxfbGFiZWwYAyABKAlCF+I/DBIKZW1haWxMYWJlb
  PpCBXIDGMgBUgplbWFpbExhYmVsEkEKDnVzZXJuYW1lX2xhYmVsGAQgASgJQhriPw8SDXVzZXJuYW1lTGFiZWz6QgVyAxjIAVINd
  XNlcm5hbWVMYWJlbBJECg9maXJzdG5hbWVfbGFiZWwYBSABKAlCG+I/EBIOZmlyc3RuYW1lTGFiZWz6QgVyAxjIAVIOZmlyc3RuY
  W1lTGFiZWwSQQoObGFzdG5hbWVfbGFiZWwYBiABKAlCGuI/DxINbGFzdG5hbWVMYWJlbPpCBXIDGMgBUg1sYXN0bmFtZUxhYmVsE
  kEKDm5pY2tuYW1lX2xhYmVsGAcgASgJQhriPw8SDW5pY2tuYW1lTGFiZWz6QgVyAxjIAVINbmlja25hbWVMYWJlbBJBCg5sYW5nd
  WFnZV9sYWJlbBgIIAEoCUIa4j8PEg1sYW5ndWFnZUxhYmVs+kIFcgMYyAFSDWxhbmd1YWdlTGFiZWwSOAoLcGhvbmVfbGFiZWwYC
  SABKAlCF+I/DBIKcGhvbmVMYWJlbPpCBXIDGMgBUgpwaG9uZUxhYmVsElIKFXRvc19hbmRfcHJpdmFjeV9sYWJlbBgKIAEoCUIf4
  j8UEhJ0b3NBbmRQcml2YWN5TGFiZWz6QgVyAxjIAVISdG9zQW5kUHJpdmFjeUxhYmVsEjgKC3Rvc19jb25maXJtGAsgASgJQhfiP
  wwSCnRvc0NvbmZpcm36QgVyAxjIAVIKdG9zQ29uZmlybRI8Cg10b3NfbGlua190ZXh0GAwgASgJQhjiPw0SC3Rvc0xpbmtUZXh0+
  kIFcgMYyAFSC3Rvc0xpbmtUZXh0EkgKEXByaXZhY3lfbGlua190ZXh0GA4gASgJQhziPxESD3ByaXZhY3lMaW5rVGV4dPpCBXIDG
  MgBUg9wcml2YWN5TGlua1RleHQSRQoQYmFja19idXR0b25fdGV4dBgPIAEoCUIb4j8QEg5iYWNrQnV0dG9uVGV4dPpCBXIDGMgBU
  g5iYWNrQnV0dG9uVGV4dBJFChBuZXh0X2J1dHRvbl90ZXh0GBAgASgJQhviPxASDm5leHRCdXR0b25UZXh0+kIFcgMYyAFSDm5le
  HRCdXR0b25UZXh0EkQKD3ByaXZhY3lfY29uZmlybRgRIAEoCUIb4j8QEg5wcml2YWN5Q29uZmlybfpCBXIDGMgBUg5wcml2YWN5Q
  29uZmlybUoECA0QDlIPdG9zX2NvbmZpcm1fYW5kIuMIChlSZWdpc3RyYXRpb25PcmdTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQ
  hLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC
  2Rlc2NyaXB0aW9uEj4KDW9yZ25hbWVfbGFiZWwYAyABKAlCGeI/DhIMb3JnbmFtZUxhYmVs+kIFcgMYyAFSDG9yZ25hbWVMYWJlb
  BJECg9maXJzdG5hbWVfbGFiZWwYBCABKAlCG+I/EBIOZmlyc3RuYW1lTGFiZWz6QgVyAxjIAVIOZmlyc3RuYW1lTGFiZWwSQQoOb
  GFzdG5hbWVfbGFiZWwYBSABKAlCGuI/DxINbGFzdG5hbWVMYWJlbPpCBXIDGMgBUg1sYXN0bmFtZUxhYmVsEkEKDnVzZXJuYW1lX
  2xhYmVsGAYgASgJQhriPw8SDXVzZXJuYW1lTGFiZWz6QgVyAxjIAVINdXNlcm5hbWVMYWJlbBI4CgtlbWFpbF9sYWJlbBgHIAEoC
  UIX4j8MEgplbWFpbExhYmVs+kIFcgMYyAFSCmVtYWlsTGFiZWwSQQoOcGFzc3dvcmRfbGFiZWwYCSABKAlCGuI/DxINcGFzc3dvc
  mRMYWJlbPpCBXIDGMgBUg1wYXNzd29yZExhYmVsElcKFnBhc3N3b3JkX2NvbmZpcm1fbGFiZWwYCiABKAlCIeI/FhIUcGFzc3dvc
  mRDb25maXJtTGFiZWz6QgVyAxjIAVIUcGFzc3dvcmRDb25maXJtTGFiZWwSUgoVdG9zX2FuZF9wcml2YWN5X2xhYmVsGAsgASgJQ
  h/iPxQSEnRvc0FuZFByaXZhY3lMYWJlbPpCBXIDGMgBUhJ0b3NBbmRQcml2YWN5TGFiZWwSOAoLdG9zX2NvbmZpcm0YDCABKAlCF
  +I/DBIKdG9zQ29uZmlybfpCBXIDGMgBUgp0b3NDb25maXJtEjwKDXRvc19saW5rX3RleHQYDiABKAlCGOI/DRILdG9zTGlua1Rle
  HT6QgVyAxjIAVILdG9zTGlua1RleHQSRAoPcHJpdmFjeV9jb25maXJtGA8gASgJQhviPxASDnByaXZhY3lDb25maXJt+kIFcgMYy
  AFSDnByaXZhY3lDb25maXJtEkgKEXByaXZhY3lfbGlua190ZXh0GBEgASgJQhziPxESD3ByaXZhY3lMaW5rVGV4dPpCBXIDGMgBU
  g9wcml2YWN5TGlua1RleHQSRQoQc2F2ZV9idXR0b25fdGV4dBgTIAEoCUIb4j8QEg5zYXZlQnV0dG9uVGV4dPpCBXIDGMgBUg5zY
  XZlQnV0dG9uVGV4dEoECA0QDkoECBAQEUoECBIQE0oECBQQFVIIdG9zX2xpbmtSDHByaXZhY3lfbGlua1IaZXh0ZXJuYWxfbG9na
  W5fZGVzY3JpcHRpb25SD3Rvc19jb25maXJtX2FuZCKTAgoZTGlua2luZ1VzZXJEb25lU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoC
  UIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6CgtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDU
  gtkZXNjcmlwdGlvbhJKChJjYW5jZWxfYnV0dG9uX3RleHQYAyABKAlCHOI/EhIQY2FuY2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhb
  mNlbEJ1dHRvblRleHQSRAoQbmV4dF9idXR0b25fdGV4dBgEIAEoCUIa4j8QEg5uZXh0QnV0dG9uVGV4dPpCBHICGGRSDm5leHRCd
  XR0b25UZXh0Ip4FCh5FeHRlcm5hbFVzZXJOb3RGb3VuZFNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyA
  xjIAVIFdGl0bGUSOgoLZGVzY3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SRAoQb
  Glua19idXR0b25fdGV4dBgDIAEoCUIa4j8QEg5saW5rQnV0dG9uVGV4dPpCBHICGGRSDmxpbmtCdXR0b25UZXh0El0KGWF1dG9fc
  mVnaXN0ZXJfYnV0dG9uX3RleHQYBCABKAlCIuI/GBIWYXV0b1JlZ2lzdGVyQnV0dG9uVGV4dPpCBHICGGRSFmF1dG9SZWdpc3Rlc
  kJ1dHRvblRleHQSUgoVdG9zX2FuZF9wcml2YWN5X2xhYmVsGAUgASgJQh/iPxQSEnRvc0FuZFByaXZhY3lMYWJlbPpCBXIDGMgBU
  hJ0b3NBbmRQcml2YWN5TGFiZWwSOAoLdG9zX2NvbmZpcm0YBiABKAlCF+I/DBIKdG9zQ29uZmlybfpCBXIDGMgBUgp0b3NDb25ma
  XJtEjwKDXRvc19saW5rX3RleHQYByABKAlCGOI/DRILdG9zTGlua1RleHT6QgVyAxjIAVILdG9zTGlua1RleHQSSAoRcHJpdmFje
  V9saW5rX3RleHQYCCABKAlCHOI/ERIPcHJpdmFjeUxpbmtUZXh0+kIFcgMYyAFSD3ByaXZhY3lMaW5rVGV4dBJECg9wcml2YWN5X
  2NvbmZpcm0YCiABKAlCG+I/EBIOcHJpdmFjeUNvbmZpcm36QgVyAxjIAVIOcHJpdmFjeUNvbmZpcm1KBAgJEApSD3Rvc19jb25ma
  XJtX2FuZCLFAgoWU3VjY2Vzc0xvZ2luU2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZ
  RJgChlhdXRvX3JlZGlyZWN0X2Rlc2NyaXB0aW9uGAIgASgJQiTiPxkSF2F1dG9SZWRpcmVjdERlc2NyaXB0aW9u+kIFcgMY9ANSF
  2F1dG9SZWRpcmVjdERlc2NyaXB0aW9uElgKFnJlZGlyZWN0ZWRfZGVzY3JpcHRpb24YAyABKAlCIeI/FxIVcmVkaXJlY3RlZERlc
  2NyaXB0aW9u+kIEcgIYZFIVcmVkaXJlY3RlZERlc2NyaXB0aW9uEkUKEG5leHRfYnV0dG9uX3RleHQYBCABKAlCG+I/EBIObmV4d
  EJ1dHRvblRleHT6QgVyAxjIAVIObmV4dEJ1dHRvblRleHQixgEKFExvZ291dERvbmVTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQ
  hLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgASgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC
  2Rlc2NyaXB0aW9uEkgKEWxvZ2luX2J1dHRvbl90ZXh0GAMgASgJQhziPxESD2xvZ2luQnV0dG9uVGV4dPpCBXIDGMgBUg9sb2dpb
  kJ1dHRvblRleHQinAIKCkZvb3RlclRleHQSIgoDdG9zGAEgASgJQhDiPwUSA3Rvc/pCBXIDGMgBUgN0b3MSQQoOcHJpdmFjeV9wb
  2xpY3kYAyABKAlCGuI/DxINcHJpdmFjeVBvbGljefpCBXIDGMgBUg1wcml2YWN5UG9saWN5EiUKBGhlbHAYBSABKAlCEeI/BhIEa
  GVscPpCBXIDGMgBUgRoZWxwEj4KDXN1cHBvcnRfZW1haWwYByABKAlCGeI/DhIMc3VwcG9ydEVtYWls+kIFcgMYyAFSDHN1cHBvc
  nRFbWFpbEoECAIQA0oECAQQBUoECAYQB0oECAgQCVIIdG9zX2xpbmtSE3ByaXZhY3lfcG9saWN5X2xpbmtSCWhlbHBfbGluayK3A
  wocUGFzc3dvcmRsZXNzUHJvbXB0U2NyZWVuVGV4dBIoCgV0aXRsZRgBIAEoCUIS4j8HEgV0aXRsZfpCBXIDGMgBUgV0aXRsZRI6C
  gtkZXNjcmlwdGlvbhgCIAEoCUIY4j8NEgtkZXNjcmlwdGlvbvpCBXIDGPQDUgtkZXNjcmlwdGlvbhJHChBkZXNjcmlwdGlvbl9pb
  ml0GAMgASgJQhziPxESD2Rlc2NyaXB0aW9uSW5pdPpCBXIDGPQDUg9kZXNjcmlwdGlvbkluaXQSXAoYcGFzc3dvcmRsZXNzX2J1d
  HRvbl90ZXh0GAQgASgJQiLiPxgSFnBhc3N3b3JkbGVzc0J1dHRvblRleHT6QgRyAhhkUhZwYXNzd29yZGxlc3NCdXR0b25UZXh0E
  kQKEG5leHRfYnV0dG9uX3RleHQYBSABKAlCGuI/EBIObmV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dBJEChBza
  2lwX2J1dHRvbl90ZXh0GAYgASgJQhriPxASDnNraXBCdXR0b25UZXh0+kIEcgIYZFIOc2tpcEJ1dHRvblRleHQirQMKIlBhc3N3b
  3JkbGVzc1JlZ2lzdHJhdGlvblNjcmVlblRleHQSKAoFdGl0bGUYASABKAlCEuI/BxIFdGl0bGX6QgVyAxjIAVIFdGl0bGUSOgoLZ
  GVzY3JpcHRpb24YAiABKAlCGOI/DRILZGVzY3JpcHRpb276QgVyAxj0A1ILZGVzY3JpcHRpb24SRQoQdG9rZW5fbmFtZV9sYWJlb
  BgDIAEoCUIb4j8QEg50b2tlbk5hbWVMYWJlbPpCBXIDGMgBUg50b2tlbk5hbWVMYWJlbBI+Cg1ub3Rfc3VwcG9ydGVkGAQgASgJQ
  hniPw4SDG5vdFN1cHBvcnRlZPpCBXIDGPQDUgxub3RTdXBwb3J0ZWQSYAoacmVnaXN0ZXJfdG9rZW5fYnV0dG9uX3RleHQYBSABK
  AlCI+I/GRIXcmVnaXN0ZXJUb2tlbkJ1dHRvblRleHT6QgRyAhhkUhdyZWdpc3RlclRva2VuQnV0dG9uVGV4dBI4CgtlcnJvcl9yZ
  XRyeRgGIAEoCUIX4j8MEgplcnJvclJldHJ5+kIFcgMY9ANSCmVycm9yUmV0cnki6wIKJlBhc3N3b3JkbGVzc1JlZ2lzdHJhdGlvb
  kRvbmVTY3JlZW5UZXh0EigKBXRpdGxlGAEgASgJQhLiPwcSBXRpdGxl+kIFcgMYyAFSBXRpdGxlEjoKC2Rlc2NyaXB0aW9uGAIgA
  SgJQhjiPw0SC2Rlc2NyaXB0aW9u+kIFcgMY9ANSC2Rlc2NyaXB0aW9uEkQKEG5leHRfYnV0dG9uX3RleHQYAyABKAlCGuI/EBIOb
  mV4dEJ1dHRvblRleHT6QgRyAhhkUg5uZXh0QnV0dG9uVGV4dBJKChJjYW5jZWxfYnV0dG9uX3RleHQYBCABKAlCHOI/EhIQY2FuY
  2VsQnV0dG9uVGV4dPpCBHICGGRSEGNhbmNlbEJ1dHRvblRleHQSSQoRZGVzY3JpcHRpb25fY2xvc2UYBSABKAlCHOI/EhIQZGVzY
  3JpcHRpb25DbG9zZfpCBHICGGRSEGRlc2NyaXB0aW9uQ2xvc2VCqAEKE2NvbS56aXRhZGVsLnRleHQudjFCCVRleHRQcm90b1ABW
  ihnaXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9wa2cvZ3JwYy90ZXh0ogIDWlRYqgIPWml0YWRlbC5UZXh0LlYxygIPWml0YWRlb
  FxUZXh0XFYx4gIbWml0YWRlbFxUZXh0XFYxXEdQQk1ldGFkYXRh6gIRWml0YWRlbDo6VGV4dDo6VjFiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.zitadel.v1.`object`.ObjectProto.javaDescriptor,
      com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto.javaDescriptor,
      com.validate.validate.ValidateProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}