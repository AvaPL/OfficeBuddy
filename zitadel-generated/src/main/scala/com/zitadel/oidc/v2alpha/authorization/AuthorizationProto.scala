// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.oidc.v2alpha.authorization

object AuthorizationProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.duration.DurationProto,
    com.google.protobuf.timestamp.TimestampProto,
    com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      com.zitadel.oidc.v2alpha.authorization.AuthRequest,
      com.zitadel.oidc.v2alpha.authorization.AuthorizationError
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Cih6aXRhZGVsL29pZGMvdjJhbHBoYS9hdXRob3JpemF0aW9uLnByb3RvEhR6aXRhZGVsLm9pZGMudjJhbHBoYRoeZ29vZ2xlL
  3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGi5wcm90b2MtZ2VuLW9wZW5hc
  Gl2Mi9vcHRpb25zL2Fubm90YXRpb25zLnByb3RvItcOCgtBdXRoUmVxdWVzdBI7CgJpZBgBIAEoCUIr4j8EEgJpZJJBITIfSUQgb
  2YgdGhlIGF1dGhvcml6YXRpb24gcmVxdWVzdFICaWQSfQoNY3JlYXRpb25fZGF0ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Ua
  W1lc3RhbXBCPOI/DhIMY3JlYXRpb25EYXRlkkEoMiZUaW1lIHdoZW4gdGhlIGF1dGggcmVxdWVzdCB3YXMgY3JlYXRlZFIMY3JlY
  XRpb25EYXRlEm4KCWNsaWVudF9pZBgDIAEoCUJR4j8KEghjbGllbnRJZJJBQTI/T0lEQyBjbGllbnQgSUQgb2YgdGhlIGFwcGxpY
  2F0aW9uIHRoYXQgY3JlYXRlZCB0aGUgYXV0aCByZXF1ZXN0UghjbGllbnRJZBJpCgVzY29wZRgEIAMoCUJT4j8HEgVzY29wZZJBR
  jJEUmVxdWVzdGVkIHNjb3BlcyBieSB0aGUgYXBwbGljYXRpb24sIHdoaWNoIHRoZSB1c2VyIG11c3QgY29uc2VudCB0by5SBXNjb
  3BlEmQKDHJlZGlyZWN0X3VyaRgFIAEoCUJB4j8NEgtyZWRpcmVjdFVyaZJBLjIsQmFzZSBVUkkgdGhhdCBwb2ludHMgYmFjayB0b
  yB0aGUgYXBwbGljYXRpb25SC3JlZGlyZWN0VXJpEnAKBnByb21wdBgGIAMoDjIcLnppdGFkZWwub2lkYy52MmFscGhhLlByb21wd
  EI64j8IEgZwcm9tcHSSQSwyKlByb21wdHMgdGhhdCBtdXN0IGJlIGRpc3BsYXllZCB0byB0aGUgdXNlclIGcHJvbXB0EuIDCgp1a
  V9sb2NhbGVzGAcgAygJQsID4j8LEgl1aUxvY2FsZXOSQbADMq0DRW5kLVVzZXIncyBwcmVmZXJyZWQgbGFuZ3VhZ2VzIGFuZCBzY
  3JpcHRzIGZvciB0aGUgdXNlciBpbnRlcmZhY2UsIHJlcHJlc2VudGVkIGFzIGEgbGlzdCBvZiBCQ1A0NyBbUkZDNTY0Nl0gbGFuZ
  3VhZ2UgdGFnIHZhbHVlcywgb3JkZXJlZCBieSBwcmVmZXJlbmNlLiBGb3IgaW5zdGFuY2UsIHRoZSB2YWx1ZSBbZnItQ0EsIGZyL
  CBlbl0gcmVwcmVzZW50cyBhIHByZWZlcmVuY2UgZm9yIEZyZW5jaCBhcyBzcG9rZW4gaW4gQ2FuYWRhLCB0aGVuIEZyZW5jaCAod
  2l0aG91dCBhIHJlZ2lvbiBkZXNpZ25hdGlvbiksIGZvbGxvd2VkIGJ5IEVuZ2xpc2ggKHdpdGhvdXQgYSByZWdpb24gZGVzaWduY
  XRpb24pLiBBbiBlcnJvciBTSE9VTEQgTk9UIHJlc3VsdCBpZiBzb21lIG9yIGFsbCBvZiB0aGUgcmVxdWVzdGVkIGxvY2FsZXMgY
  XJlIG5vdCBzdXBwb3J0ZWQuUgl1aUxvY2FsZXMSmAEKCmxvZ2luX2hpbnQYCCABKAlCdOI/CxIJbG9naW5IaW50kkFjMmFMb2dpb
  iBoaW50IGNhbiBiZSBzZXQgYnkgdGhlIGFwcGxpY2F0aW9uIHdpdGggYSB1c2VyIGlkZW50aWZpZXIgc3VjaCBhcyBhbiBlbWFpb
  CBvciBwaG9uZSBudW1iZXIuSABSCWxvZ2luSGludIgBARK0AgoHbWF4X2FnZRgJIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhd
  GlvbkL6AeI/CBIGbWF4QWdlkkHrATLoAVNwZWNpZmllcyB0aGUgYWxsb3dhYmxlIGVsYXBzZWQgdGltZSBpbiBzZWNvbmRzIHNpb
  mNlIHRoZSBsYXN0IHRpbWUgdGhlIEVuZC1Vc2VyIHdhcyBhY3RpdmVseSBhdXRoZW50aWNhdGVkLiBJZiB0aGUgZWxhcHNlZCB0a
  W1lIGlzIGdyZWF0ZXIgdGhhbiB0aGlzIHZhbHVlLCBvciB0aGUgZmllbGQgaXMgcHJlc2VudCB3aXRoIDAgZHVyYXRpb24sIHRoZ
  SB1c2VyIG11c3QgYmUgcmUtYXV0aGVudGljYXRlZC5IAVIGbWF4QWdliAEBEnoKDGhpbnRfdXNlcl9pZBgKIAEoCUJT4j8MEgpoa
  W50VXNlcklkkkFBMj9Vc2VyIElEIHRha2VuIGZyb20gYSBJRCBUb2tlbiBIaW50IGlmIGl0IHdhcyBwcmVzZW50IGFuZCB2YWxpZ
  C5IAlIKaGludFVzZXJJZIgBATp6kkF3KnUKMEZpbmQgb3V0IG1vcmUgYWJvdXQgT0lEQyBBdXRoIFJlcXVlc3QgcGFyYW1ldGVyc
  xJBaHR0cHM6Ly9vcGVuaWQubmV0L3NwZWNzL29wZW5pZC1jb25uZWN0LWNvcmUtMV8wLmh0bWwjQXV0aFJlcXVlc3RCDQoLX2xvZ
  2luX2hpbnRCCgoIX21heF9hZ2VCDwoNX2hpbnRfdXNlcl9pZCL3AQoSQXV0aG9yaXphdGlvbkVycm9yEkMKBWVycm9yGAEgASgOM
  iEueml0YWRlbC5vaWRjLnYyYWxwaGEuRXJyb3JSZWFzb25CCuI/BxIFZXJyb3JSBWVycm9yEkcKEWVycm9yX2Rlc2NyaXB0aW9uG
  AIgASgJQhXiPxISEGVycm9yRGVzY3JpcHRpb25IAFIQZXJyb3JEZXNjcmlwdGlvbogBARIvCgllcnJvcl91cmkYAyABKAlCDeI/C
  hIIZXJyb3JVcmlIAVIIZXJyb3JVcmmIAQFCFAoSX2Vycm9yX2Rlc2NyaXB0aW9uQgwKCl9lcnJvcl91cmkqiAIKBlByb21wdBIvC
  hJQUk9NUFRfVU5TUEVDSUZJRUQQABoX4j8UEhJQUk9NUFRfVU5TUEVDSUZJRUQSIQoLUFJPTVBUX05PTkUQARoQ4j8NEgtQUk9NU
  FRfTk9ORRIjCgxQUk9NUFRfTE9HSU4QAhoR4j8OEgxQUk9NUFRfTE9HSU4SJwoOUFJPTVBUX0NPTlNFTlQQAxoT4j8QEg5QUk9NU
  FRfQ09OU0VOVBI1ChVQUk9NUFRfU0VMRUNUX0FDQ09VTlQQBBoa4j8XEhVQUk9NUFRfU0VMRUNUX0FDQ09VTlQSJQoNUFJPTVBUX
  0NSRUFURRAFGhLiPw8SDVBST01QVF9DUkVBVEUqoAoKC0Vycm9yUmVhc29uEjsKGEVSUk9SX1JFQVNPTl9VTlNQRUNJRklFRBAAG
  h3iPxoSGEVSUk9SX1JFQVNPTl9VTlNQRUNJRklFRBJDChxFUlJPUl9SRUFTT05fSU5WQUxJRF9SRVFVRVNUEAEaIeI/HhIcRVJST
  1JfUkVBU09OX0lOVkFMSURfUkVRVUVTVBJLCiBFUlJPUl9SRUFTT05fVU5BVVRIT1JJWkVEX0NMSUVOVBACGiXiPyISIEVSUk9SX
  1JFQVNPTl9VTkFVVEhPUklaRURfQ0xJRU5UEj8KGkVSUk9SX1JFQVNPTl9BQ0NFU1NfREVOSUVEEAMaH+I/HBIaRVJST1JfUkVBU
  09OX0FDQ0VTU19ERU5JRUQSVwomRVJST1JfUkVBU09OX1VOU1VQUE9SVEVEX1JFU1BPTlNFX1RZUEUQBBor4j8oEiZFUlJPUl9SR
  UFTT05fVU5TVVBQT1JURURfUkVTUE9OU0VfVFlQRRI/ChpFUlJPUl9SRUFTT05fSU5WQUxJRF9TQ09QRRAFGh/iPxwSGkVSUk9SX
  1JFQVNPTl9JTlZBTElEX1NDT1BFEj0KGUVSUk9SX1JFQVNPTl9TRVJWRVJfRVJST1IQBhoe4j8bEhlFUlJPUl9SRUFTT05fU0VSV
  kVSX0VSUk9SEk8KIkVSUk9SX1JFQVNPTl9URU1QT1JBUllfVU5BVkFJTEFCTEUQBxon4j8kEiJFUlJPUl9SRUFTT05fVEVNUE9SQ
  VJZX1VOQVZBSUxBQkxFEk0KIUVSUk9SX1JFQVNPTl9JTlRFUkFDVElPTl9SRVFVSVJFRBAIGibiPyMSIUVSUk9SX1JFQVNPTl9JT
  lRFUkFDVElPTl9SRVFVSVJFRBJBChtFUlJPUl9SRUFTT05fTE9HSU5fUkVRVUlSRUQQCRog4j8dEhtFUlJPUl9SRUFTT05fTE9HS
  U5fUkVRVUlSRUQSWQonRVJST1JfUkVBU09OX0FDQ09VTlRfU0VMRUNUSU9OX1JFUVVJUkVEEAoaLOI/KRInRVJST1JfUkVBU09OX
  0FDQ09VTlRfU0VMRUNUSU9OX1JFUVVJUkVEEkUKHUVSUk9SX1JFQVNPTl9DT05TRU5UX1JFUVVJUkVEEAsaIuI/HxIdRVJST1JfU
  kVBU09OX0NPTlNFTlRfUkVRVUlSRUQSSwogRVJST1JfUkVBU09OX0lOVkFMSURfUkVRVUVTVF9VUkkQDBol4j8iEiBFUlJPUl9SR
  UFTT05fSU5WQUxJRF9SRVFVRVNUX1VSSRJRCiNFUlJPUl9SRUFTT05fSU5WQUxJRF9SRVFVRVNUX09CSkVDVBANGijiPyUSI0VSU
  k9SX1JFQVNPTl9JTlZBTElEX1JFUVVFU1RfT0JKRUNUEk8KIkVSUk9SX1JFQVNPTl9SRVFVRVNUX05PVF9TVVBQT1JURUQQDhon4
  j8kEiJFUlJPUl9SRUFTT05fUkVRVUVTVF9OT1RfU1VQUE9SVEVEElcKJkVSUk9SX1JFQVNPTl9SRVFVRVNUX1VSSV9OT1RfU1VQU
  E9SVEVEEA8aK+I/KBImRVJST1JfUkVBU09OX1JFUVVFU1RfVVJJX05PVF9TVVBQT1JURUQSWQonRVJST1JfUkVBU09OX1JFR0lTV
  FJBVElPTl9OT1RfU1VQUE9SVEVEEBAaLOI/KRInRVJST1JfUkVBU09OX1JFR0lTVFJBVElPTl9OT1RfU1VQUE9SVEVEQtcBChhjb
  20ueml0YWRlbC5vaWRjLnYyYWxwaGFCEkF1dGhvcml6YXRpb25Qcm90b1ABWjVnaXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9wa
  2cvZ3JwYy9vaWRjL3YyYWxwaGE7b2lkY6ICA1pPWKoCFFppdGFkZWwuT2lkYy5WMmFscGhhygIUWml0YWRlbFxPaWRjXFYyYWxwa
  GHiAiBaaXRhZGVsXE9pZGNcVjJhbHBoYVxHUEJNZXRhZGF0YeoCFlppdGFkZWw6Ok9pZGM6OlYyYWxwaGFiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.duration.DurationProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}