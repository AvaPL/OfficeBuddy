// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.settings.v2alpha.settings_service

@SerialVersionUID(0L)
final case class GetGeneralSettingsResponse(
    defaultOrgId: _root_.scala.Predef.String = "",
    defaultLanguage: _root_.scala.Predef.String = "",
    supportedLanguages: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetGeneralSettingsResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = defaultOrgId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = defaultLanguage
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      supportedLanguages.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = defaultOrgId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = defaultLanguage
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      supportedLanguages.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withDefaultOrgId(__v: _root_.scala.Predef.String): GetGeneralSettingsResponse = copy(defaultOrgId = __v)
    def withDefaultLanguage(__v: _root_.scala.Predef.String): GetGeneralSettingsResponse = copy(defaultLanguage = __v)
    def clearSupportedLanguages = copy(supportedLanguages = _root_.scala.Seq.empty)
    def addSupportedLanguages(__vs: _root_.scala.Predef.String *): GetGeneralSettingsResponse = addAllSupportedLanguages(__vs)
    def addAllSupportedLanguages(__vs: Iterable[_root_.scala.Predef.String]): GetGeneralSettingsResponse = copy(supportedLanguages = supportedLanguages ++ __vs)
    def withSupportedLanguages(__v: _root_.scala.Seq[_root_.scala.Predef.String]): GetGeneralSettingsResponse = copy(supportedLanguages = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = defaultOrgId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = defaultLanguage
          if (__t != "") __t else null
        }
        case 3 => supportedLanguages
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(defaultOrgId)
        case 2 => _root_.scalapb.descriptors.PString(defaultLanguage)
        case 3 => _root_.scalapb.descriptors.PRepeated(supportedLanguages.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse.type = com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse
    // @@protoc_insertion_point(GeneratedMessage[zitadel.settings.v2alpha.GetGeneralSettingsResponse])
}

object GetGeneralSettingsResponse extends scalapb.GeneratedMessageCompanion[com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse = {
    var __defaultOrgId: _root_.scala.Predef.String = ""
    var __defaultLanguage: _root_.scala.Predef.String = ""
    val __supportedLanguages: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __defaultOrgId = _input__.readStringRequireUtf8()
        case 18 =>
          __defaultLanguage = _input__.readStringRequireUtf8()
        case 26 =>
          __supportedLanguages += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse(
        defaultOrgId = __defaultOrgId,
        defaultLanguage = __defaultLanguage,
        supportedLanguages = __supportedLanguages.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse(
        defaultOrgId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        defaultLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        supportedLanguages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SettingsServiceProto.javaDescriptor.getMessageTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SettingsServiceProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse(
    defaultOrgId = "",
    defaultLanguage = "",
    supportedLanguages = _root_.scala.Seq.empty
  )
  implicit class GetGeneralSettingsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse](_l) {
    def defaultOrgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.defaultOrgId)((c_, f_) => c_.copy(defaultOrgId = f_))
    def defaultLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.defaultLanguage)((c_, f_) => c_.copy(defaultLanguage = f_))
    def supportedLanguages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.supportedLanguages)((c_, f_) => c_.copy(supportedLanguages = f_))
  }
  final val DEFAULT_ORG_ID_FIELD_NUMBER = 1
  final val DEFAULT_LANGUAGE_FIELD_NUMBER = 2
  final val SUPPORTED_LANGUAGES_FIELD_NUMBER = 3
  def of(
    defaultOrgId: _root_.scala.Predef.String,
    defaultLanguage: _root_.scala.Predef.String,
    supportedLanguages: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse = _root_.com.zitadel.settings.v2alpha.settings_service.GetGeneralSettingsResponse(
    defaultOrgId,
    defaultLanguage,
    supportedLanguages
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.settings.v2alpha.GetGeneralSettingsResponse])
}
