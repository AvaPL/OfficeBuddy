// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.settings.v1.settings

@SerialVersionUID(0L)
final case class SMTPConfig(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    senderAddress: _root_.scala.Predef.String = "",
    senderName: _root_.scala.Predef.String = "",
    tls: _root_.scala.Boolean = false,
    host: _root_.scala.Predef.String = "",
    user: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SMTPConfig] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = senderAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = senderName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = tls
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = host
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = user
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = senderAddress
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = senderName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = tls
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = host
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = user
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: SMTPConfig = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): SMTPConfig = copy(details = Option(__v))
    def withSenderAddress(__v: _root_.scala.Predef.String): SMTPConfig = copy(senderAddress = __v)
    def withSenderName(__v: _root_.scala.Predef.String): SMTPConfig = copy(senderName = __v)
    def withTls(__v: _root_.scala.Boolean): SMTPConfig = copy(tls = __v)
    def withHost(__v: _root_.scala.Predef.String): SMTPConfig = copy(host = __v)
    def withUser(__v: _root_.scala.Predef.String): SMTPConfig = copy(user = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => details.orNull
        case 2 => {
          val __t = senderAddress
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = senderName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = tls
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = host
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = user
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(senderAddress)
        case 3 => _root_.scalapb.descriptors.PString(senderName)
        case 4 => _root_.scalapb.descriptors.PBoolean(tls)
        case 5 => _root_.scalapb.descriptors.PString(host)
        case 6 => _root_.scalapb.descriptors.PString(user)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.settings.v1.settings.SMTPConfig.type = com.zitadel.settings.v1.settings.SMTPConfig
    // @@protoc_insertion_point(GeneratedMessage[zitadel.settings.v1.SMTPConfig])
}

object SMTPConfig extends scalapb.GeneratedMessageCompanion[com.zitadel.settings.v1.settings.SMTPConfig] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.settings.v1.settings.SMTPConfig] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.settings.v1.settings.SMTPConfig = {
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __senderAddress: _root_.scala.Predef.String = ""
    var __senderName: _root_.scala.Predef.String = ""
    var __tls: _root_.scala.Boolean = false
    var __host: _root_.scala.Predef.String = ""
    var __user: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __senderAddress = _input__.readStringRequireUtf8()
        case 26 =>
          __senderName = _input__.readStringRequireUtf8()
        case 32 =>
          __tls = _input__.readBool()
        case 42 =>
          __host = _input__.readStringRequireUtf8()
        case 50 =>
          __user = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.settings.v1.settings.SMTPConfig(
        details = __details,
        senderAddress = __senderAddress,
        senderName = __senderName,
        tls = __tls,
        host = __host,
        user = __user,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.settings.v1.settings.SMTPConfig] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.settings.v1.settings.SMTPConfig(
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        senderAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        senderName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tls = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        host = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        user = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SettingsProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SettingsProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.settings.v1.settings.SMTPConfig(
    details = _root_.scala.None,
    senderAddress = "",
    senderName = "",
    tls = false,
    host = "",
    user = ""
  )
  implicit class SMTPConfigLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.settings.v1.settings.SMTPConfig]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.settings.v1.settings.SMTPConfig](_l) {
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def senderAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.senderAddress)((c_, f_) => c_.copy(senderAddress = f_))
    def senderName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.senderName)((c_, f_) => c_.copy(senderName = f_))
    def tls: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.tls)((c_, f_) => c_.copy(tls = f_))
    def host: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.host)((c_, f_) => c_.copy(host = f_))
    def user: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.user)((c_, f_) => c_.copy(user = f_))
  }
  final val DETAILS_FIELD_NUMBER = 1
  final val SENDER_ADDRESS_FIELD_NUMBER = 2
  final val SENDER_NAME_FIELD_NUMBER = 3
  final val TLS_FIELD_NUMBER = 4
  final val HOST_FIELD_NUMBER = 5
  final val USER_FIELD_NUMBER = 6
  def of(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    senderAddress: _root_.scala.Predef.String,
    senderName: _root_.scala.Predef.String,
    tls: _root_.scala.Boolean,
    host: _root_.scala.Predef.String,
    user: _root_.scala.Predef.String
  ): _root_.com.zitadel.settings.v1.settings.SMTPConfig = _root_.com.zitadel.settings.v1.settings.SMTPConfig(
    details,
    senderAddress,
    senderName,
    tls,
    host,
    user
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.settings.v1.SMTPConfig])
}
