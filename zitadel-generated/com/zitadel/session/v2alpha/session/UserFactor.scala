// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.session.v2alpha.session

@SerialVersionUID(0L)
final case class UserFactor(
    verifiedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    id: _root_.scala.Predef.String = "",
    loginName: _root_.scala.Predef.String = "",
    displayName: _root_.scala.Predef.String = "",
    organisationId: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[UserFactor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (verifiedAt.isDefined) {
        val __value = verifiedAt.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = loginName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = organisationId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      verifiedAt.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = loginName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = organisationId
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getVerifiedAt: com.google.protobuf.timestamp.Timestamp = verifiedAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearVerifiedAt: UserFactor = copy(verifiedAt = _root_.scala.None)
    def withVerifiedAt(__v: com.google.protobuf.timestamp.Timestamp): UserFactor = copy(verifiedAt = Option(__v))
    def withId(__v: _root_.scala.Predef.String): UserFactor = copy(id = __v)
    def withLoginName(__v: _root_.scala.Predef.String): UserFactor = copy(loginName = __v)
    def withDisplayName(__v: _root_.scala.Predef.String): UserFactor = copy(displayName = __v)
    def withOrganisationId(__v: _root_.scala.Predef.String): UserFactor = copy(organisationId = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => verifiedAt.orNull
        case 2 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = loginName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = organisationId
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => verifiedAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(id)
        case 3 => _root_.scalapb.descriptors.PString(loginName)
        case 4 => _root_.scalapb.descriptors.PString(displayName)
        case 5 => _root_.scalapb.descriptors.PString(organisationId)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.session.v2alpha.session.UserFactor.type = com.zitadel.session.v2alpha.session.UserFactor
    // @@protoc_insertion_point(GeneratedMessage[zitadel.session.v2alpha.UserFactor])
}

object UserFactor extends scalapb.GeneratedMessageCompanion[com.zitadel.session.v2alpha.session.UserFactor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.session.v2alpha.session.UserFactor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.session.v2alpha.session.UserFactor = {
    var __verifiedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __id: _root_.scala.Predef.String = ""
    var __loginName: _root_.scala.Predef.String = ""
    var __displayName: _root_.scala.Predef.String = ""
    var __organisationId: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __verifiedAt = Option(__verifiedAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __id = _input__.readStringRequireUtf8()
        case 26 =>
          __loginName = _input__.readStringRequireUtf8()
        case 34 =>
          __displayName = _input__.readStringRequireUtf8()
        case 42 =>
          __organisationId = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.session.v2alpha.session.UserFactor(
        verifiedAt = __verifiedAt,
        id = __id,
        loginName = __loginName,
        displayName = __displayName,
        organisationId = __organisationId,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.session.v2alpha.session.UserFactor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.session.v2alpha.session.UserFactor(
        verifiedAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        loginName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        organisationId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SessionProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SessionProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.session.v2alpha.session.UserFactor(
    verifiedAt = _root_.scala.None,
    id = "",
    loginName = "",
    displayName = "",
    organisationId = ""
  )
  implicit class UserFactorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.session.v2alpha.session.UserFactor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.session.v2alpha.session.UserFactor](_l) {
    def verifiedAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getVerifiedAt)((c_, f_) => c_.copy(verifiedAt = Option(f_)))
    def optionalVerifiedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.verifiedAt)((c_, f_) => c_.copy(verifiedAt = f_))
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def loginName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.loginName)((c_, f_) => c_.copy(loginName = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def organisationId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.organisationId)((c_, f_) => c_.copy(organisationId = f_))
  }
  final val VERIFIED_AT_FIELD_NUMBER = 1
  final val ID_FIELD_NUMBER = 2
  final val LOGIN_NAME_FIELD_NUMBER = 3
  final val DISPLAY_NAME_FIELD_NUMBER = 4
  final val ORGANISATION_ID_FIELD_NUMBER = 5
  def of(
    verifiedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    id: _root_.scala.Predef.String,
    loginName: _root_.scala.Predef.String,
    displayName: _root_.scala.Predef.String,
    organisationId: _root_.scala.Predef.String
  ): _root_.com.zitadel.session.v2alpha.session.UserFactor = _root_.com.zitadel.session.v2alpha.session.UserFactor(
    verifiedAt,
    id,
    loginName,
    displayName,
    organisationId
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.session.v2alpha.UserFactor])
}
