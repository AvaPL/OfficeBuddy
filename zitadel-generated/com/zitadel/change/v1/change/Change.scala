// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.change.v1.change

@SerialVersionUID(0L)
final case class Change(
    changeDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    eventType: _root_.scala.Option[com.zitadel.v1.message.LocalizedMessage] = _root_.scala.None,
    sequence: _root_.scala.Long = 0L,
    editorId: _root_.scala.Predef.String = "",
    editorDisplayName: _root_.scala.Predef.String = "",
    resourceOwnerId: _root_.scala.Predef.String = "",
    editorPreferredLoginName: _root_.scala.Predef.String = "",
    editorAvatarUrl: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Change] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (changeDate.isDefined) {
        val __value = changeDate.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (eventType.isDefined) {
        val __value = eventType.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = sequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
        }
      };
      
      {
        val __value = editorId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = editorDisplayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = resourceOwnerId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = editorPreferredLoginName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = editorAvatarUrl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      changeDate.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      eventType.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = sequence
        if (__v != 0L) {
          _output__.writeUInt64(3, __v)
        }
      };
      {
        val __v = editorId
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = editorDisplayName
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = resourceOwnerId
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = editorPreferredLoginName
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = editorAvatarUrl
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getChangeDate: com.google.protobuf.timestamp.Timestamp = changeDate.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearChangeDate: Change = copy(changeDate = _root_.scala.None)
    def withChangeDate(__v: com.google.protobuf.timestamp.Timestamp): Change = copy(changeDate = Option(__v))
    def getEventType: com.zitadel.v1.message.LocalizedMessage = eventType.getOrElse(com.zitadel.v1.message.LocalizedMessage.defaultInstance)
    def clearEventType: Change = copy(eventType = _root_.scala.None)
    def withEventType(__v: com.zitadel.v1.message.LocalizedMessage): Change = copy(eventType = Option(__v))
    def withSequence(__v: _root_.scala.Long): Change = copy(sequence = __v)
    def withEditorId(__v: _root_.scala.Predef.String): Change = copy(editorId = __v)
    def withEditorDisplayName(__v: _root_.scala.Predef.String): Change = copy(editorDisplayName = __v)
    def withResourceOwnerId(__v: _root_.scala.Predef.String): Change = copy(resourceOwnerId = __v)
    def withEditorPreferredLoginName(__v: _root_.scala.Predef.String): Change = copy(editorPreferredLoginName = __v)
    def withEditorAvatarUrl(__v: _root_.scala.Predef.String): Change = copy(editorAvatarUrl = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => changeDate.orNull
        case 2 => eventType.orNull
        case 3 => {
          val __t = sequence
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = editorId
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = editorDisplayName
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = resourceOwnerId
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = editorPreferredLoginName
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = editorAvatarUrl
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => changeDate.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => eventType.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PLong(sequence)
        case 4 => _root_.scalapb.descriptors.PString(editorId)
        case 5 => _root_.scalapb.descriptors.PString(editorDisplayName)
        case 6 => _root_.scalapb.descriptors.PString(resourceOwnerId)
        case 7 => _root_.scalapb.descriptors.PString(editorPreferredLoginName)
        case 8 => _root_.scalapb.descriptors.PString(editorAvatarUrl)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.change.v1.change.Change.type = com.zitadel.change.v1.change.Change
    // @@protoc_insertion_point(GeneratedMessage[zitadel.change.v1.Change])
}

object Change extends scalapb.GeneratedMessageCompanion[com.zitadel.change.v1.change.Change] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.change.v1.change.Change] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.change.v1.change.Change = {
    var __changeDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __eventType: _root_.scala.Option[com.zitadel.v1.message.LocalizedMessage] = _root_.scala.None
    var __sequence: _root_.scala.Long = 0L
    var __editorId: _root_.scala.Predef.String = ""
    var __editorDisplayName: _root_.scala.Predef.String = ""
    var __resourceOwnerId: _root_.scala.Predef.String = ""
    var __editorPreferredLoginName: _root_.scala.Predef.String = ""
    var __editorAvatarUrl: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __changeDate = Option(__changeDate.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __eventType = Option(__eventType.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.message.LocalizedMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __sequence = _input__.readUInt64()
        case 34 =>
          __editorId = _input__.readStringRequireUtf8()
        case 42 =>
          __editorDisplayName = _input__.readStringRequireUtf8()
        case 50 =>
          __resourceOwnerId = _input__.readStringRequireUtf8()
        case 58 =>
          __editorPreferredLoginName = _input__.readStringRequireUtf8()
        case 66 =>
          __editorAvatarUrl = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.change.v1.change.Change(
        changeDate = __changeDate,
        eventType = __eventType,
        sequence = __sequence,
        editorId = __editorId,
        editorDisplayName = __editorDisplayName,
        resourceOwnerId = __resourceOwnerId,
        editorPreferredLoginName = __editorPreferredLoginName,
        editorAvatarUrl = __editorAvatarUrl,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.change.v1.change.Change] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.change.v1.change.Change(
        changeDate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        eventType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.message.LocalizedMessage]]),
        sequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        editorId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        editorDisplayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        resourceOwnerId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        editorPreferredLoginName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        editorAvatarUrl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ChangeProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ChangeProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.protobuf.timestamp.Timestamp
      case 2 => __out = com.zitadel.v1.message.LocalizedMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.change.v1.change.Change(
    changeDate = _root_.scala.None,
    eventType = _root_.scala.None,
    sequence = 0L,
    editorId = "",
    editorDisplayName = "",
    resourceOwnerId = "",
    editorPreferredLoginName = "",
    editorAvatarUrl = ""
  )
  implicit class ChangeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.change.v1.change.Change]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.change.v1.change.Change](_l) {
    def changeDate: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getChangeDate)((c_, f_) => c_.copy(changeDate = Option(f_)))
    def optionalChangeDate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.changeDate)((c_, f_) => c_.copy(changeDate = f_))
    def eventType: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.message.LocalizedMessage] = field(_.getEventType)((c_, f_) => c_.copy(eventType = Option(f_)))
    def optionalEventType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.message.LocalizedMessage]] = field(_.eventType)((c_, f_) => c_.copy(eventType = f_))
    def sequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sequence)((c_, f_) => c_.copy(sequence = f_))
    def editorId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.editorId)((c_, f_) => c_.copy(editorId = f_))
    def editorDisplayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.editorDisplayName)((c_, f_) => c_.copy(editorDisplayName = f_))
    def resourceOwnerId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.resourceOwnerId)((c_, f_) => c_.copy(resourceOwnerId = f_))
    def editorPreferredLoginName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.editorPreferredLoginName)((c_, f_) => c_.copy(editorPreferredLoginName = f_))
    def editorAvatarUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.editorAvatarUrl)((c_, f_) => c_.copy(editorAvatarUrl = f_))
  }
  final val CHANGE_DATE_FIELD_NUMBER = 1
  final val EVENT_TYPE_FIELD_NUMBER = 2
  final val SEQUENCE_FIELD_NUMBER = 3
  final val EDITOR_ID_FIELD_NUMBER = 4
  final val EDITOR_DISPLAY_NAME_FIELD_NUMBER = 5
  final val RESOURCE_OWNER_ID_FIELD_NUMBER = 6
  final val EDITOR_PREFERRED_LOGIN_NAME_FIELD_NUMBER = 7
  final val EDITOR_AVATAR_URL_FIELD_NUMBER = 8
  def of(
    changeDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    eventType: _root_.scala.Option[com.zitadel.v1.message.LocalizedMessage],
    sequence: _root_.scala.Long,
    editorId: _root_.scala.Predef.String,
    editorDisplayName: _root_.scala.Predef.String,
    resourceOwnerId: _root_.scala.Predef.String,
    editorPreferredLoginName: _root_.scala.Predef.String,
    editorAvatarUrl: _root_.scala.Predef.String
  ): _root_.com.zitadel.change.v1.change.Change = _root_.com.zitadel.change.v1.change.Change(
    changeDate,
    eventType,
    sequence,
    editorId,
    editorDisplayName,
    resourceOwnerId,
    editorPreferredLoginName,
    editorAvatarUrl
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.change.v1.Change])
}
