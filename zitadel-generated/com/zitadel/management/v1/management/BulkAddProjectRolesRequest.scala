// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

@SerialVersionUID(0L)
final case class BulkAddProjectRolesRequest(
    projectId: _root_.scala.Predef.String = "",
    roles: _root_.scala.Seq[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BulkAddProjectRolesRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = projectId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      roles.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = projectId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      roles.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withProjectId(__v: _root_.scala.Predef.String): BulkAddProjectRolesRequest = copy(projectId = __v)
    def clearRoles = copy(roles = _root_.scala.Seq.empty)
    def addRoles(__vs: com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role *): BulkAddProjectRolesRequest = addAllRoles(__vs)
    def addAllRoles(__vs: Iterable[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]): BulkAddProjectRolesRequest = copy(roles = roles ++ __vs)
    def withRoles(__v: _root_.scala.Seq[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]): BulkAddProjectRolesRequest = copy(roles = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = projectId
          if (__t != "") __t else null
        }
        case 2 => roles
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(projectId)
        case 2 => _root_.scalapb.descriptors.PRepeated(roles.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.BulkAddProjectRolesRequest.type = com.zitadel.management.v1.management.BulkAddProjectRolesRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.BulkAddProjectRolesRequest])
}

object BulkAddProjectRolesRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.BulkAddProjectRolesRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.BulkAddProjectRolesRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.BulkAddProjectRolesRequest = {
    var __projectId: _root_.scala.Predef.String = ""
    val __roles: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __projectId = _input__.readStringRequireUtf8()
        case 18 =>
          __roles += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.BulkAddProjectRolesRequest(
        projectId = __projectId,
        roles = __roles.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.BulkAddProjectRolesRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.BulkAddProjectRolesRequest(
        projectId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        roles = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(192)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(192)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.management.v1.management.BulkAddProjectRolesRequest(
    projectId = "",
    roles = _root_.scala.Seq.empty
  )
  @SerialVersionUID(0L)
  final case class Role(
      key: _root_.scala.Predef.String = "",
      displayName: _root_.scala.Predef.String = "",
      group: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Role] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = displayName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = group
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = displayName
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = group
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): Role = copy(key = __v)
      def withDisplayName(__v: _root_.scala.Predef.String): Role = copy(displayName = __v)
      def withGroup(__v: _root_.scala.Predef.String): Role = copy(group = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = displayName
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = group
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(displayName)
          case 3 => _root_.scalapb.descriptors.PString(group)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role.type = com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role
      // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.BulkAddProjectRolesRequest.Role])
  }
  
  object Role extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role = {
      var __key: _root_.scala.Predef.String = ""
      var __displayName: _root_.scala.Predef.String = ""
      var __group: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __displayName = _input__.readStringRequireUtf8()
          case 26 =>
            __group = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role(
          key = __key,
          displayName = __displayName,
          group = __group,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          group = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.management.v1.management.BulkAddProjectRolesRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.management.v1.management.BulkAddProjectRolesRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role(
      key = "",
      displayName = "",
      group = ""
    )
    implicit class RoleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
      def group: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.group)((c_, f_) => c_.copy(group = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val DISPLAY_NAME_FIELD_NUMBER = 2
    final val GROUP_FIELD_NUMBER = 3
    def of(
      key: _root_.scala.Predef.String,
      displayName: _root_.scala.Predef.String,
      group: _root_.scala.Predef.String
    ): _root_.com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role = _root_.com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role(
      key,
      displayName,
      group
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.BulkAddProjectRolesRequest.Role])
  }
  
  implicit class BulkAddProjectRolesRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.BulkAddProjectRolesRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.BulkAddProjectRolesRequest](_l) {
    def projectId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectId)((c_, f_) => c_.copy(projectId = f_))
    def roles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]] = field(_.roles)((c_, f_) => c_.copy(roles = f_))
  }
  final val PROJECT_ID_FIELD_NUMBER = 1
  final val ROLES_FIELD_NUMBER = 2
  def of(
    projectId: _root_.scala.Predef.String,
    roles: _root_.scala.Seq[com.zitadel.management.v1.management.BulkAddProjectRolesRequest.Role]
  ): _root_.com.zitadel.management.v1.management.BulkAddProjectRolesRequest = _root_.com.zitadel.management.v1.management.BulkAddProjectRolesRequest(
    projectId,
    roles
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.BulkAddProjectRolesRequest])
}
