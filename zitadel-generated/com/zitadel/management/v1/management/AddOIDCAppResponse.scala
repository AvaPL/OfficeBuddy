// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

@SerialVersionUID(0L)
final case class AddOIDCAppResponse(
    appId: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    clientId: _root_.scala.Predef.String = "",
    clientSecret: _root_.scala.Predef.String = "",
    noneCompliant: _root_.scala.Boolean = false,
    complianceProblems: _root_.scala.Seq[com.zitadel.v1.message.LocalizedMessage] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddOIDCAppResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = appId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = clientSecret
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = noneCompliant
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      complianceProblems.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = appId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = clientSecret
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = noneCompliant
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      complianceProblems.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withAppId(__v: _root_.scala.Predef.String): AddOIDCAppResponse = copy(appId = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: AddOIDCAppResponse = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): AddOIDCAppResponse = copy(details = Option(__v))
    def withClientId(__v: _root_.scala.Predef.String): AddOIDCAppResponse = copy(clientId = __v)
    def withClientSecret(__v: _root_.scala.Predef.String): AddOIDCAppResponse = copy(clientSecret = __v)
    def withNoneCompliant(__v: _root_.scala.Boolean): AddOIDCAppResponse = copy(noneCompliant = __v)
    def clearComplianceProblems = copy(complianceProblems = _root_.scala.Seq.empty)
    def addComplianceProblems(__vs: com.zitadel.v1.message.LocalizedMessage *): AddOIDCAppResponse = addAllComplianceProblems(__vs)
    def addAllComplianceProblems(__vs: Iterable[com.zitadel.v1.message.LocalizedMessage]): AddOIDCAppResponse = copy(complianceProblems = complianceProblems ++ __vs)
    def withComplianceProblems(__v: _root_.scala.Seq[com.zitadel.v1.message.LocalizedMessage]): AddOIDCAppResponse = copy(complianceProblems = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = appId
          if (__t != "") __t else null
        }
        case 2 => details.orNull
        case 3 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = clientSecret
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = noneCompliant
          if (__t != false) __t else null
        }
        case 6 => complianceProblems
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(appId)
        case 2 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(clientId)
        case 4 => _root_.scalapb.descriptors.PString(clientSecret)
        case 5 => _root_.scalapb.descriptors.PBoolean(noneCompliant)
        case 6 => _root_.scalapb.descriptors.PRepeated(complianceProblems.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.AddOIDCAppResponse.type = com.zitadel.management.v1.management.AddOIDCAppResponse
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddOIDCAppResponse])
}

object AddOIDCAppResponse extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddOIDCAppResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddOIDCAppResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddOIDCAppResponse = {
    var __appId: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __clientId: _root_.scala.Predef.String = ""
    var __clientSecret: _root_.scala.Predef.String = ""
    var __noneCompliant: _root_.scala.Boolean = false
    val __complianceProblems: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.message.LocalizedMessage] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.message.LocalizedMessage]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __appId = _input__.readStringRequireUtf8()
        case 18 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __clientId = _input__.readStringRequireUtf8()
        case 34 =>
          __clientSecret = _input__.readStringRequireUtf8()
        case 40 =>
          __noneCompliant = _input__.readBool()
        case 50 =>
          __complianceProblems += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.message.LocalizedMessage](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.AddOIDCAppResponse(
        appId = __appId,
        details = __details,
        clientId = __clientId,
        clientSecret = __clientSecret,
        noneCompliant = __noneCompliant,
        complianceProblems = __complianceProblems.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddOIDCAppResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.AddOIDCAppResponse(
        appId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        clientSecret = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        noneCompliant = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        complianceProblems = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.message.LocalizedMessage]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(217)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(217)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.v1.`object`.ObjectDetails
      case 6 => __out = com.zitadel.v1.message.LocalizedMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.management.v1.management.AddOIDCAppResponse(
    appId = "",
    details = _root_.scala.None,
    clientId = "",
    clientSecret = "",
    noneCompliant = false,
    complianceProblems = _root_.scala.Seq.empty
  )
  implicit class AddOIDCAppResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddOIDCAppResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddOIDCAppResponse](_l) {
    def appId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.appId)((c_, f_) => c_.copy(appId = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def clientSecret: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientSecret)((c_, f_) => c_.copy(clientSecret = f_))
    def noneCompliant: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.noneCompliant)((c_, f_) => c_.copy(noneCompliant = f_))
    def complianceProblems: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.message.LocalizedMessage]] = field(_.complianceProblems)((c_, f_) => c_.copy(complianceProblems = f_))
  }
  final val APP_ID_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  final val CLIENT_ID_FIELD_NUMBER = 3
  final val CLIENT_SECRET_FIELD_NUMBER = 4
  final val NONE_COMPLIANT_FIELD_NUMBER = 5
  final val COMPLIANCE_PROBLEMS_FIELD_NUMBER = 6
  def of(
    appId: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    clientId: _root_.scala.Predef.String,
    clientSecret: _root_.scala.Predef.String,
    noneCompliant: _root_.scala.Boolean,
    complianceProblems: _root_.scala.Seq[com.zitadel.v1.message.LocalizedMessage]
  ): _root_.com.zitadel.management.v1.management.AddOIDCAppResponse = _root_.com.zitadel.management.v1.management.AddOIDCAppResponse(
    appId,
    details,
    clientId,
    clientSecret,
    noneCompliant,
    complianceProblems
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddOIDCAppResponse])
}
