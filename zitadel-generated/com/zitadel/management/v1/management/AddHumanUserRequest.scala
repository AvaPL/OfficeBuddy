// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

@SerialVersionUID(0L)
final case class AddHumanUserRequest(
    userName: _root_.scala.Predef.String = "",
    profile: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Profile] = _root_.scala.None,
    email: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Email] = _root_.scala.None,
    phone: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Phone] = _root_.scala.None,
    initialPassword: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddHumanUserRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = userName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (profile.isDefined) {
        val __value = profile.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (email.isDefined) {
        val __value = email.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (phone.isDefined) {
        val __value = phone.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = initialPassword
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = userName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      profile.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      email.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      phone.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = initialPassword
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withUserName(__v: _root_.scala.Predef.String): AddHumanUserRequest = copy(userName = __v)
    def getProfile: com.zitadel.management.v1.management.AddHumanUserRequest.Profile = profile.getOrElse(com.zitadel.management.v1.management.AddHumanUserRequest.Profile.defaultInstance)
    def clearProfile: AddHumanUserRequest = copy(profile = _root_.scala.None)
    def withProfile(__v: com.zitadel.management.v1.management.AddHumanUserRequest.Profile): AddHumanUserRequest = copy(profile = Option(__v))
    def getEmail: com.zitadel.management.v1.management.AddHumanUserRequest.Email = email.getOrElse(com.zitadel.management.v1.management.AddHumanUserRequest.Email.defaultInstance)
    def clearEmail: AddHumanUserRequest = copy(email = _root_.scala.None)
    def withEmail(__v: com.zitadel.management.v1.management.AddHumanUserRequest.Email): AddHumanUserRequest = copy(email = Option(__v))
    def getPhone: com.zitadel.management.v1.management.AddHumanUserRequest.Phone = phone.getOrElse(com.zitadel.management.v1.management.AddHumanUserRequest.Phone.defaultInstance)
    def clearPhone: AddHumanUserRequest = copy(phone = _root_.scala.None)
    def withPhone(__v: com.zitadel.management.v1.management.AddHumanUserRequest.Phone): AddHumanUserRequest = copy(phone = Option(__v))
    def withInitialPassword(__v: _root_.scala.Predef.String): AddHumanUserRequest = copy(initialPassword = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = userName
          if (__t != "") __t else null
        }
        case 2 => profile.orNull
        case 3 => email.orNull
        case 4 => phone.orNull
        case 5 => {
          val __t = initialPassword
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(userName)
        case 2 => profile.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => email.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => phone.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PString(initialPassword)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.AddHumanUserRequest.type = com.zitadel.management.v1.management.AddHumanUserRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddHumanUserRequest])
}

object AddHumanUserRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddHumanUserRequest = {
    var __userName: _root_.scala.Predef.String = ""
    var __profile: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Profile] = _root_.scala.None
    var __email: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Email] = _root_.scala.None
    var __phone: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Phone] = _root_.scala.None
    var __initialPassword: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __userName = _input__.readStringRequireUtf8()
        case 18 =>
          __profile = Option(__profile.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddHumanUserRequest.Profile](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __email = Option(__email.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddHumanUserRequest.Email](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __phone = Option(__phone.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddHumanUserRequest.Phone](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __initialPassword = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.AddHumanUserRequest(
        userName = __userName,
        profile = __profile,
        email = __email,
        phone = __phone,
        initialPassword = __initialPassword,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddHumanUserRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.AddHumanUserRequest(
        userName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        profile = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Profile]]),
        email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Email]]),
        phone = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Phone]]),
        initialPassword = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.management.v1.management.AddHumanUserRequest.Profile
      case 3 => __out = com.zitadel.management.v1.management.AddHumanUserRequest.Email
      case 4 => __out = com.zitadel.management.v1.management.AddHumanUserRequest.Phone
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Profile,
      _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Email,
      _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Phone
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.management.v1.management.AddHumanUserRequest(
    userName = "",
    profile = _root_.scala.None,
    email = _root_.scala.None,
    phone = _root_.scala.None,
    initialPassword = ""
  )
  @SerialVersionUID(0L)
  final case class Profile(
      firstName: _root_.scala.Predef.String = "",
      lastName: _root_.scala.Predef.String = "",
      nickName: _root_.scala.Predef.String = "",
      displayName: _root_.scala.Predef.String = "",
      preferredLanguage: _root_.scala.Predef.String = "",
      gender: com.zitadel.user.v1.user.Gender = com.zitadel.user.v1.user.Gender.GENDER_UNSPECIFIED,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Profile] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = firstName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = lastName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = nickName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        
        {
          val __value = displayName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        
        {
          val __value = preferredLanguage
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
          }
        };
        
        {
          val __value = gender.value
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = firstName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = lastName
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = nickName
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        {
          val __v = displayName
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = preferredLanguage
          if (!__v.isEmpty) {
            _output__.writeString(5, __v)
          }
        };
        {
          val __v = gender.value
          if (__v != 0) {
            _output__.writeEnum(6, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withFirstName(__v: _root_.scala.Predef.String): Profile = copy(firstName = __v)
      def withLastName(__v: _root_.scala.Predef.String): Profile = copy(lastName = __v)
      def withNickName(__v: _root_.scala.Predef.String): Profile = copy(nickName = __v)
      def withDisplayName(__v: _root_.scala.Predef.String): Profile = copy(displayName = __v)
      def withPreferredLanguage(__v: _root_.scala.Predef.String): Profile = copy(preferredLanguage = __v)
      def withGender(__v: com.zitadel.user.v1.user.Gender): Profile = copy(gender = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = firstName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = lastName
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = nickName
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = displayName
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = preferredLanguage
            if (__t != "") __t else null
          }
          case 6 => {
            val __t = gender.javaValueDescriptor
            if (__t.getNumber() != 0) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(firstName)
          case 2 => _root_.scalapb.descriptors.PString(lastName)
          case 3 => _root_.scalapb.descriptors.PString(nickName)
          case 4 => _root_.scalapb.descriptors.PString(displayName)
          case 5 => _root_.scalapb.descriptors.PString(preferredLanguage)
          case 6 => _root_.scalapb.descriptors.PEnum(gender.scalaValueDescriptor)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.management.v1.management.AddHumanUserRequest.Profile.type = com.zitadel.management.v1.management.AddHumanUserRequest.Profile
      // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddHumanUserRequest.Profile])
  }
  
  object Profile extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Profile] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Profile] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddHumanUserRequest.Profile = {
      var __firstName: _root_.scala.Predef.String = ""
      var __lastName: _root_.scala.Predef.String = ""
      var __nickName: _root_.scala.Predef.String = ""
      var __displayName: _root_.scala.Predef.String = ""
      var __preferredLanguage: _root_.scala.Predef.String = ""
      var __gender: com.zitadel.user.v1.user.Gender = com.zitadel.user.v1.user.Gender.GENDER_UNSPECIFIED
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __firstName = _input__.readStringRequireUtf8()
          case 18 =>
            __lastName = _input__.readStringRequireUtf8()
          case 26 =>
            __nickName = _input__.readStringRequireUtf8()
          case 34 =>
            __displayName = _input__.readStringRequireUtf8()
          case 42 =>
            __preferredLanguage = _input__.readStringRequireUtf8()
          case 48 =>
            __gender = com.zitadel.user.v1.user.Gender.fromValue(_input__.readEnum())
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.management.v1.management.AddHumanUserRequest.Profile(
          firstName = __firstName,
          lastName = __lastName,
          nickName = __nickName,
          displayName = __displayName,
          preferredLanguage = __preferredLanguage,
          gender = __gender,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddHumanUserRequest.Profile] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.management.v1.management.AddHumanUserRequest.Profile(
          firstName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          lastName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          nickName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          preferredLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          gender = com.zitadel.user.v1.user.Gender.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.user.v1.user.Gender.GENDER_UNSPECIFIED.scalaValueDescriptor).number)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => com.zitadel.user.v1.user.Gender
      }
    }
    lazy val defaultInstance = com.zitadel.management.v1.management.AddHumanUserRequest.Profile(
      firstName = "",
      lastName = "",
      nickName = "",
      displayName = "",
      preferredLanguage = "",
      gender = com.zitadel.user.v1.user.Gender.GENDER_UNSPECIFIED
    )
    implicit class ProfileLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Profile]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Profile](_l) {
      def firstName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstName)((c_, f_) => c_.copy(firstName = f_))
      def lastName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastName)((c_, f_) => c_.copy(lastName = f_))
      def nickName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.nickName)((c_, f_) => c_.copy(nickName = f_))
      def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
      def preferredLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.preferredLanguage)((c_, f_) => c_.copy(preferredLanguage = f_))
      def gender: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Gender] = field(_.gender)((c_, f_) => c_.copy(gender = f_))
    }
    final val FIRST_NAME_FIELD_NUMBER = 1
    final val LAST_NAME_FIELD_NUMBER = 2
    final val NICK_NAME_FIELD_NUMBER = 3
    final val DISPLAY_NAME_FIELD_NUMBER = 4
    final val PREFERRED_LANGUAGE_FIELD_NUMBER = 5
    final val GENDER_FIELD_NUMBER = 6
    def of(
      firstName: _root_.scala.Predef.String,
      lastName: _root_.scala.Predef.String,
      nickName: _root_.scala.Predef.String,
      displayName: _root_.scala.Predef.String,
      preferredLanguage: _root_.scala.Predef.String,
      gender: com.zitadel.user.v1.user.Gender
    ): _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Profile = _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Profile(
      firstName,
      lastName,
      nickName,
      displayName,
      preferredLanguage,
      gender
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddHumanUserRequest.Profile])
  }
  
  @SerialVersionUID(0L)
  final case class Email(
      email: _root_.scala.Predef.String = "",
      isEmailVerified: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Email] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = email
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = isEmailVerified
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = email
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = isEmailVerified
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withEmail(__v: _root_.scala.Predef.String): Email = copy(email = __v)
      def withIsEmailVerified(__v: _root_.scala.Boolean): Email = copy(isEmailVerified = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = email
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = isEmailVerified
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(email)
          case 2 => _root_.scalapb.descriptors.PBoolean(isEmailVerified)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.management.v1.management.AddHumanUserRequest.Email.type = com.zitadel.management.v1.management.AddHumanUserRequest.Email
      // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddHumanUserRequest.Email])
  }
  
  object Email extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Email] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Email] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddHumanUserRequest.Email = {
      var __email: _root_.scala.Predef.String = ""
      var __isEmailVerified: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __email = _input__.readStringRequireUtf8()
          case 16 =>
            __isEmailVerified = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.management.v1.management.AddHumanUserRequest.Email(
          email = __email,
          isEmailVerified = __isEmailVerified,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddHumanUserRequest.Email] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.management.v1.management.AddHumanUserRequest.Email(
          email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          isEmailVerified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.management.v1.management.AddHumanUserRequest.Email(
      email = "",
      isEmailVerified = false
    )
    implicit class EmailLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Email]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Email](_l) {
      def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.email)((c_, f_) => c_.copy(email = f_))
      def isEmailVerified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isEmailVerified)((c_, f_) => c_.copy(isEmailVerified = f_))
    }
    final val EMAIL_FIELD_NUMBER = 1
    final val IS_EMAIL_VERIFIED_FIELD_NUMBER = 2
    def of(
      email: _root_.scala.Predef.String,
      isEmailVerified: _root_.scala.Boolean
    ): _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Email = _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Email(
      email,
      isEmailVerified
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddHumanUserRequest.Email])
  }
  
  /** @param phone
    *   has to be a global number
    */
  @SerialVersionUID(0L)
  final case class Phone(
      phone: _root_.scala.Predef.String = "",
      isPhoneVerified: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Phone] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = phone
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = isPhoneVerified
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = phone
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = isPhoneVerified
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPhone(__v: _root_.scala.Predef.String): Phone = copy(phone = __v)
      def withIsPhoneVerified(__v: _root_.scala.Boolean): Phone = copy(isPhoneVerified = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = phone
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = isPhoneVerified
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(phone)
          case 2 => _root_.scalapb.descriptors.PBoolean(isPhoneVerified)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.management.v1.management.AddHumanUserRequest.Phone.type = com.zitadel.management.v1.management.AddHumanUserRequest.Phone
      // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddHumanUserRequest.Phone])
  }
  
  object Phone extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Phone] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddHumanUserRequest.Phone] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddHumanUserRequest.Phone = {
      var __phone: _root_.scala.Predef.String = ""
      var __isPhoneVerified: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __phone = _input__.readStringRequireUtf8()
          case 16 =>
            __isPhoneVerified = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.management.v1.management.AddHumanUserRequest.Phone(
          phone = __phone,
          isPhoneVerified = __isPhoneVerified,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddHumanUserRequest.Phone] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.management.v1.management.AddHumanUserRequest.Phone(
          phone = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          isPhoneVerified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.management.v1.management.AddHumanUserRequest.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.management.v1.management.AddHumanUserRequest.Phone(
      phone = "",
      isPhoneVerified = false
    )
    implicit class PhoneLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Phone]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Phone](_l) {
      def phone: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.phone)((c_, f_) => c_.copy(phone = f_))
      def isPhoneVerified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isPhoneVerified)((c_, f_) => c_.copy(isPhoneVerified = f_))
    }
    final val PHONE_FIELD_NUMBER = 1
    final val IS_PHONE_VERIFIED_FIELD_NUMBER = 2
    def of(
      phone: _root_.scala.Predef.String,
      isPhoneVerified: _root_.scala.Boolean
    ): _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Phone = _root_.com.zitadel.management.v1.management.AddHumanUserRequest.Phone(
      phone,
      isPhoneVerified
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddHumanUserRequest.Phone])
  }
  
  implicit class AddHumanUserRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest](_l) {
    def userName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
    def profile: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Profile] = field(_.getProfile)((c_, f_) => c_.copy(profile = Option(f_)))
    def optionalProfile: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Profile]] = field(_.profile)((c_, f_) => c_.copy(profile = f_))
    def email: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Email] = field(_.getEmail)((c_, f_) => c_.copy(email = Option(f_)))
    def optionalEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Email]] = field(_.email)((c_, f_) => c_.copy(email = f_))
    def phone: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddHumanUserRequest.Phone] = field(_.getPhone)((c_, f_) => c_.copy(phone = Option(f_)))
    def optionalPhone: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Phone]] = field(_.phone)((c_, f_) => c_.copy(phone = f_))
    def initialPassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.initialPassword)((c_, f_) => c_.copy(initialPassword = f_))
  }
  final val USER_NAME_FIELD_NUMBER = 1
  final val PROFILE_FIELD_NUMBER = 2
  final val EMAIL_FIELD_NUMBER = 3
  final val PHONE_FIELD_NUMBER = 4
  final val INITIAL_PASSWORD_FIELD_NUMBER = 5
  def of(
    userName: _root_.scala.Predef.String,
    profile: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Profile],
    email: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Email],
    phone: _root_.scala.Option[com.zitadel.management.v1.management.AddHumanUserRequest.Phone],
    initialPassword: _root_.scala.Predef.String
  ): _root_.com.zitadel.management.v1.management.AddHumanUserRequest = _root_.com.zitadel.management.v1.management.AddHumanUserRequest(
    userName,
    profile,
    email,
    phone,
    initialPassword
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddHumanUserRequest])
}
