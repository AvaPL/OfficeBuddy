// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

/** @param isDefault
  *  deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy
  */
@SerialVersionUID(0L)
final case class GetPreviewLabelPolicyResponse(
    policy: _root_.scala.Option[com.zitadel.policy.v1.policy.LabelPolicy] = _root_.scala.None,
    isDefault: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetPreviewLabelPolicyResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (policy.isDefined) {
        val __value = policy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = isDefault
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      policy.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = isDefault
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getPolicy: com.zitadel.policy.v1.policy.LabelPolicy = policy.getOrElse(com.zitadel.policy.v1.policy.LabelPolicy.defaultInstance)
    def clearPolicy: GetPreviewLabelPolicyResponse = copy(policy = _root_.scala.None)
    def withPolicy(__v: com.zitadel.policy.v1.policy.LabelPolicy): GetPreviewLabelPolicyResponse = copy(policy = Option(__v))
    def withIsDefault(__v: _root_.scala.Boolean): GetPreviewLabelPolicyResponse = copy(isDefault = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => policy.orNull
        case 2 => {
          val __t = isDefault
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => policy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PBoolean(isDefault)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse.type = com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.GetPreviewLabelPolicyResponse])
}

object GetPreviewLabelPolicyResponse extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse = {
    var __policy: _root_.scala.Option[com.zitadel.policy.v1.policy.LabelPolicy] = _root_.scala.None
    var __isDefault: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __policy = Option(__policy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.policy.v1.policy.LabelPolicy](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __isDefault = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse(
        policy = __policy,
        isDefault = __isDefault,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse(
        policy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.policy.v1.policy.LabelPolicy]]),
        isDefault = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(377)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(377)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.policy.v1.policy.LabelPolicy
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse(
    policy = _root_.scala.None,
    isDefault = false
  )
  implicit class GetPreviewLabelPolicyResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse](_l) {
    def policy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.policy.v1.policy.LabelPolicy] = field(_.getPolicy)((c_, f_) => c_.copy(policy = Option(f_)))
    def optionalPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.policy.v1.policy.LabelPolicy]] = field(_.policy)((c_, f_) => c_.copy(policy = f_))
    def isDefault: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isDefault)((c_, f_) => c_.copy(isDefault = f_))
  }
  final val POLICY_FIELD_NUMBER = 1
  final val IS_DEFAULT_FIELD_NUMBER = 2
  def of(
    policy: _root_.scala.Option[com.zitadel.policy.v1.policy.LabelPolicy],
    isDefault: _root_.scala.Boolean
  ): _root_.com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse = _root_.com.zitadel.management.v1.management.GetPreviewLabelPolicyResponse(
    policy,
    isDefault
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.GetPreviewLabelPolicyResponse])
}
