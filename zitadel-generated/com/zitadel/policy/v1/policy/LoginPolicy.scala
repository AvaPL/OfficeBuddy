// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.policy.v1.policy

/** @param allowDomainDiscovery
  *   If set to true, the suffix (&#64;domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
  */
@SerialVersionUID(0L)
final case class LoginPolicy(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    allowUsernamePassword: _root_.scala.Boolean = false,
    allowRegister: _root_.scala.Boolean = false,
    allowExternalIdp: _root_.scala.Boolean = false,
    forceMfa: _root_.scala.Boolean = false,
    passwordlessType: com.zitadel.policy.v1.policy.PasswordlessType = com.zitadel.policy.v1.policy.PasswordlessType.PASSWORDLESS_TYPE_NOT_ALLOWED,
    isDefault: _root_.scala.Boolean = false,
    hidePasswordReset: _root_.scala.Boolean = false,
    ignoreUnknownUsernames: _root_.scala.Boolean = false,
    defaultRedirectUri: _root_.scala.Predef.String = "",
    passwordCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    externalLoginCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    mfaInitSkipLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    secondFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    multiFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    secondFactors: _root_.scala.Seq[com.zitadel.policy.v1.policy.SecondFactorType] = _root_.scala.Seq.empty,
    multiFactors: _root_.scala.Seq[com.zitadel.policy.v1.policy.MultiFactorType] = _root_.scala.Seq.empty,
    idps: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPLoginPolicyLink] = _root_.scala.Seq.empty,
    allowDomainDiscovery: _root_.scala.Boolean = false,
    disableLoginWithEmail: _root_.scala.Boolean = false,
    disableLoginWithPhone: _root_.scala.Boolean = false,
    forceMfaLocalOnly: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[LoginPolicy] {
    private[this] def secondFactorsSerializedSize = {
      if (__secondFactorsSerializedSizeField == 0) __secondFactorsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        secondFactors.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __secondFactorsSerializedSizeField
    }
    @transient private[this] var __secondFactorsSerializedSizeField: _root_.scala.Int = 0
    private[this] def multiFactorsSerializedSize = {
      if (__multiFactorsSerializedSizeField == 0) __multiFactorsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        multiFactors.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __multiFactorsSerializedSizeField
    }
    @transient private[this] var __multiFactorsSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = allowUsernamePassword
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      
      {
        val __value = allowRegister
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = allowExternalIdp
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = forceMfa
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      
      {
        val __value = passwordlessType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      
      {
        val __value = isDefault
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = hidePasswordReset
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(8, __value)
        }
      };
      
      {
        val __value = ignoreUnknownUsernames
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(9, __value)
        }
      };
      
      {
        val __value = defaultRedirectUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      if (passwordCheckLifetime.isDefined) {
        val __value = passwordCheckLifetime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (externalLoginCheckLifetime.isDefined) {
        val __value = externalLoginCheckLifetime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (mfaInitSkipLifetime.isDefined) {
        val __value = mfaInitSkipLifetime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (secondFactorCheckLifetime.isDefined) {
        val __value = secondFactorCheckLifetime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (multiFactorCheckLifetime.isDefined) {
        val __value = multiFactorCheckLifetime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (secondFactors.nonEmpty) {
        val __localsize = secondFactorsSerializedSize
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (multiFactors.nonEmpty) {
        val __localsize = multiFactorsSerializedSize
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      idps.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = allowDomainDiscovery
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(19, __value)
        }
      };
      
      {
        val __value = disableLoginWithEmail
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(20, __value)
        }
      };
      
      {
        val __value = disableLoginWithPhone
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(21, __value)
        }
      };
      
      {
        val __value = forceMfaLocalOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(22, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = allowUsernamePassword
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      {
        val __v = allowRegister
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = allowExternalIdp
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = forceMfa
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = passwordlessType.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      {
        val __v = isDefault
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = hidePasswordReset
        if (__v != false) {
          _output__.writeBool(8, __v)
        }
      };
      {
        val __v = ignoreUnknownUsernames
        if (__v != false) {
          _output__.writeBool(9, __v)
        }
      };
      {
        val __v = defaultRedirectUri
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      passwordCheckLifetime.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      externalLoginCheckLifetime.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      mfaInitSkipLifetime.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      secondFactorCheckLifetime.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      multiFactorCheckLifetime.foreach { __v =>
        val __m = __v
        _output__.writeTag(15, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      if (secondFactors.nonEmpty) {
        _output__.writeTag(16, 2)
        _output__.writeUInt32NoTag(secondFactorsSerializedSize)
        secondFactors.foreach((_output__.writeEnumNoTag _).compose((_: com.zitadel.policy.v1.policy.SecondFactorType).value))
      };
      if (multiFactors.nonEmpty) {
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(multiFactorsSerializedSize)
        multiFactors.foreach((_output__.writeEnumNoTag _).compose((_: com.zitadel.policy.v1.policy.MultiFactorType).value))
      };
      idps.foreach { __v =>
        val __m = __v
        _output__.writeTag(18, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = allowDomainDiscovery
        if (__v != false) {
          _output__.writeBool(19, __v)
        }
      };
      {
        val __v = disableLoginWithEmail
        if (__v != false) {
          _output__.writeBool(20, __v)
        }
      };
      {
        val __v = disableLoginWithPhone
        if (__v != false) {
          _output__.writeBool(21, __v)
        }
      };
      {
        val __v = forceMfaLocalOnly
        if (__v != false) {
          _output__.writeBool(22, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: LoginPolicy = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): LoginPolicy = copy(details = Option(__v))
    def withAllowUsernamePassword(__v: _root_.scala.Boolean): LoginPolicy = copy(allowUsernamePassword = __v)
    def withAllowRegister(__v: _root_.scala.Boolean): LoginPolicy = copy(allowRegister = __v)
    def withAllowExternalIdp(__v: _root_.scala.Boolean): LoginPolicy = copy(allowExternalIdp = __v)
    def withForceMfa(__v: _root_.scala.Boolean): LoginPolicy = copy(forceMfa = __v)
    def withPasswordlessType(__v: com.zitadel.policy.v1.policy.PasswordlessType): LoginPolicy = copy(passwordlessType = __v)
    def withIsDefault(__v: _root_.scala.Boolean): LoginPolicy = copy(isDefault = __v)
    def withHidePasswordReset(__v: _root_.scala.Boolean): LoginPolicy = copy(hidePasswordReset = __v)
    def withIgnoreUnknownUsernames(__v: _root_.scala.Boolean): LoginPolicy = copy(ignoreUnknownUsernames = __v)
    def withDefaultRedirectUri(__v: _root_.scala.Predef.String): LoginPolicy = copy(defaultRedirectUri = __v)
    def getPasswordCheckLifetime: com.google.protobuf.duration.Duration = passwordCheckLifetime.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearPasswordCheckLifetime: LoginPolicy = copy(passwordCheckLifetime = _root_.scala.None)
    def withPasswordCheckLifetime(__v: com.google.protobuf.duration.Duration): LoginPolicy = copy(passwordCheckLifetime = Option(__v))
    def getExternalLoginCheckLifetime: com.google.protobuf.duration.Duration = externalLoginCheckLifetime.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearExternalLoginCheckLifetime: LoginPolicy = copy(externalLoginCheckLifetime = _root_.scala.None)
    def withExternalLoginCheckLifetime(__v: com.google.protobuf.duration.Duration): LoginPolicy = copy(externalLoginCheckLifetime = Option(__v))
    def getMfaInitSkipLifetime: com.google.protobuf.duration.Duration = mfaInitSkipLifetime.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearMfaInitSkipLifetime: LoginPolicy = copy(mfaInitSkipLifetime = _root_.scala.None)
    def withMfaInitSkipLifetime(__v: com.google.protobuf.duration.Duration): LoginPolicy = copy(mfaInitSkipLifetime = Option(__v))
    def getSecondFactorCheckLifetime: com.google.protobuf.duration.Duration = secondFactorCheckLifetime.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearSecondFactorCheckLifetime: LoginPolicy = copy(secondFactorCheckLifetime = _root_.scala.None)
    def withSecondFactorCheckLifetime(__v: com.google.protobuf.duration.Duration): LoginPolicy = copy(secondFactorCheckLifetime = Option(__v))
    def getMultiFactorCheckLifetime: com.google.protobuf.duration.Duration = multiFactorCheckLifetime.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearMultiFactorCheckLifetime: LoginPolicy = copy(multiFactorCheckLifetime = _root_.scala.None)
    def withMultiFactorCheckLifetime(__v: com.google.protobuf.duration.Duration): LoginPolicy = copy(multiFactorCheckLifetime = Option(__v))
    def clearSecondFactors = copy(secondFactors = _root_.scala.Seq.empty)
    def addSecondFactors(__vs: com.zitadel.policy.v1.policy.SecondFactorType *): LoginPolicy = addAllSecondFactors(__vs)
    def addAllSecondFactors(__vs: Iterable[com.zitadel.policy.v1.policy.SecondFactorType]): LoginPolicy = copy(secondFactors = secondFactors ++ __vs)
    def withSecondFactors(__v: _root_.scala.Seq[com.zitadel.policy.v1.policy.SecondFactorType]): LoginPolicy = copy(secondFactors = __v)
    def clearMultiFactors = copy(multiFactors = _root_.scala.Seq.empty)
    def addMultiFactors(__vs: com.zitadel.policy.v1.policy.MultiFactorType *): LoginPolicy = addAllMultiFactors(__vs)
    def addAllMultiFactors(__vs: Iterable[com.zitadel.policy.v1.policy.MultiFactorType]): LoginPolicy = copy(multiFactors = multiFactors ++ __vs)
    def withMultiFactors(__v: _root_.scala.Seq[com.zitadel.policy.v1.policy.MultiFactorType]): LoginPolicy = copy(multiFactors = __v)
    def clearIdps = copy(idps = _root_.scala.Seq.empty)
    def addIdps(__vs: com.zitadel.idp.v1.idp.IDPLoginPolicyLink *): LoginPolicy = addAllIdps(__vs)
    def addAllIdps(__vs: Iterable[com.zitadel.idp.v1.idp.IDPLoginPolicyLink]): LoginPolicy = copy(idps = idps ++ __vs)
    def withIdps(__v: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPLoginPolicyLink]): LoginPolicy = copy(idps = __v)
    def withAllowDomainDiscovery(__v: _root_.scala.Boolean): LoginPolicy = copy(allowDomainDiscovery = __v)
    def withDisableLoginWithEmail(__v: _root_.scala.Boolean): LoginPolicy = copy(disableLoginWithEmail = __v)
    def withDisableLoginWithPhone(__v: _root_.scala.Boolean): LoginPolicy = copy(disableLoginWithPhone = __v)
    def withForceMfaLocalOnly(__v: _root_.scala.Boolean): LoginPolicy = copy(forceMfaLocalOnly = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => details.orNull
        case 2 => {
          val __t = allowUsernamePassword
          if (__t != false) __t else null
        }
        case 3 => {
          val __t = allowRegister
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = allowExternalIdp
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = forceMfa
          if (__t != false) __t else null
        }
        case 6 => {
          val __t = passwordlessType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => {
          val __t = isDefault
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = hidePasswordReset
          if (__t != false) __t else null
        }
        case 9 => {
          val __t = ignoreUnknownUsernames
          if (__t != false) __t else null
        }
        case 10 => {
          val __t = defaultRedirectUri
          if (__t != "") __t else null
        }
        case 11 => passwordCheckLifetime.orNull
        case 12 => externalLoginCheckLifetime.orNull
        case 13 => mfaInitSkipLifetime.orNull
        case 14 => secondFactorCheckLifetime.orNull
        case 15 => multiFactorCheckLifetime.orNull
        case 16 => secondFactors.iterator.map(_.javaValueDescriptor).toSeq
        case 17 => multiFactors.iterator.map(_.javaValueDescriptor).toSeq
        case 18 => idps
        case 19 => {
          val __t = allowDomainDiscovery
          if (__t != false) __t else null
        }
        case 20 => {
          val __t = disableLoginWithEmail
          if (__t != false) __t else null
        }
        case 21 => {
          val __t = disableLoginWithPhone
          if (__t != false) __t else null
        }
        case 22 => {
          val __t = forceMfaLocalOnly
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PBoolean(allowUsernamePassword)
        case 3 => _root_.scalapb.descriptors.PBoolean(allowRegister)
        case 4 => _root_.scalapb.descriptors.PBoolean(allowExternalIdp)
        case 5 => _root_.scalapb.descriptors.PBoolean(forceMfa)
        case 6 => _root_.scalapb.descriptors.PEnum(passwordlessType.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PBoolean(isDefault)
        case 8 => _root_.scalapb.descriptors.PBoolean(hidePasswordReset)
        case 9 => _root_.scalapb.descriptors.PBoolean(ignoreUnknownUsernames)
        case 10 => _root_.scalapb.descriptors.PString(defaultRedirectUri)
        case 11 => passwordCheckLifetime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => externalLoginCheckLifetime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => mfaInitSkipLifetime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => secondFactorCheckLifetime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => multiFactorCheckLifetime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 16 => _root_.scalapb.descriptors.PRepeated(secondFactors.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 17 => _root_.scalapb.descriptors.PRepeated(multiFactors.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 18 => _root_.scalapb.descriptors.PRepeated(idps.iterator.map(_.toPMessage).toVector)
        case 19 => _root_.scalapb.descriptors.PBoolean(allowDomainDiscovery)
        case 20 => _root_.scalapb.descriptors.PBoolean(disableLoginWithEmail)
        case 21 => _root_.scalapb.descriptors.PBoolean(disableLoginWithPhone)
        case 22 => _root_.scalapb.descriptors.PBoolean(forceMfaLocalOnly)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.policy.v1.policy.LoginPolicy.type = com.zitadel.policy.v1.policy.LoginPolicy
    // @@protoc_insertion_point(GeneratedMessage[zitadel.policy.v1.LoginPolicy])
}

object LoginPolicy extends scalapb.GeneratedMessageCompanion[com.zitadel.policy.v1.policy.LoginPolicy] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.policy.v1.policy.LoginPolicy] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.policy.v1.policy.LoginPolicy = {
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __allowUsernamePassword: _root_.scala.Boolean = false
    var __allowRegister: _root_.scala.Boolean = false
    var __allowExternalIdp: _root_.scala.Boolean = false
    var __forceMfa: _root_.scala.Boolean = false
    var __passwordlessType: com.zitadel.policy.v1.policy.PasswordlessType = com.zitadel.policy.v1.policy.PasswordlessType.PASSWORDLESS_TYPE_NOT_ALLOWED
    var __isDefault: _root_.scala.Boolean = false
    var __hidePasswordReset: _root_.scala.Boolean = false
    var __ignoreUnknownUsernames: _root_.scala.Boolean = false
    var __defaultRedirectUri: _root_.scala.Predef.String = ""
    var __passwordCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __externalLoginCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __mfaInitSkipLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __secondFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __multiFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    val __secondFactors: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.policy.v1.policy.SecondFactorType] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.policy.v1.policy.SecondFactorType]
    val __multiFactors: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.policy.v1.policy.MultiFactorType] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.policy.v1.policy.MultiFactorType]
    val __idps: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.idp.v1.idp.IDPLoginPolicyLink] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.idp.v1.idp.IDPLoginPolicyLink]
    var __allowDomainDiscovery: _root_.scala.Boolean = false
    var __disableLoginWithEmail: _root_.scala.Boolean = false
    var __disableLoginWithPhone: _root_.scala.Boolean = false
    var __forceMfaLocalOnly: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __allowUsernamePassword = _input__.readBool()
        case 24 =>
          __allowRegister = _input__.readBool()
        case 32 =>
          __allowExternalIdp = _input__.readBool()
        case 40 =>
          __forceMfa = _input__.readBool()
        case 48 =>
          __passwordlessType = com.zitadel.policy.v1.policy.PasswordlessType.fromValue(_input__.readEnum())
        case 56 =>
          __isDefault = _input__.readBool()
        case 64 =>
          __hidePasswordReset = _input__.readBool()
        case 72 =>
          __ignoreUnknownUsernames = _input__.readBool()
        case 82 =>
          __defaultRedirectUri = _input__.readStringRequireUtf8()
        case 90 =>
          __passwordCheckLifetime = Option(__passwordCheckLifetime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 98 =>
          __externalLoginCheckLifetime = Option(__externalLoginCheckLifetime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 106 =>
          __mfaInitSkipLifetime = Option(__mfaInitSkipLifetime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 114 =>
          __secondFactorCheckLifetime = Option(__secondFactorCheckLifetime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 122 =>
          __multiFactorCheckLifetime = Option(__multiFactorCheckLifetime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 128 =>
          __secondFactors += com.zitadel.policy.v1.policy.SecondFactorType.fromValue(_input__.readEnum())
        case 130 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __secondFactors += com.zitadel.policy.v1.policy.SecondFactorType.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 136 =>
          __multiFactors += com.zitadel.policy.v1.policy.MultiFactorType.fromValue(_input__.readEnum())
        case 138 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __multiFactors += com.zitadel.policy.v1.policy.MultiFactorType.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 146 =>
          __idps += _root_.scalapb.LiteParser.readMessage[com.zitadel.idp.v1.idp.IDPLoginPolicyLink](_input__)
        case 152 =>
          __allowDomainDiscovery = _input__.readBool()
        case 160 =>
          __disableLoginWithEmail = _input__.readBool()
        case 168 =>
          __disableLoginWithPhone = _input__.readBool()
        case 176 =>
          __forceMfaLocalOnly = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.policy.v1.policy.LoginPolicy(
        details = __details,
        allowUsernamePassword = __allowUsernamePassword,
        allowRegister = __allowRegister,
        allowExternalIdp = __allowExternalIdp,
        forceMfa = __forceMfa,
        passwordlessType = __passwordlessType,
        isDefault = __isDefault,
        hidePasswordReset = __hidePasswordReset,
        ignoreUnknownUsernames = __ignoreUnknownUsernames,
        defaultRedirectUri = __defaultRedirectUri,
        passwordCheckLifetime = __passwordCheckLifetime,
        externalLoginCheckLifetime = __externalLoginCheckLifetime,
        mfaInitSkipLifetime = __mfaInitSkipLifetime,
        secondFactorCheckLifetime = __secondFactorCheckLifetime,
        multiFactorCheckLifetime = __multiFactorCheckLifetime,
        secondFactors = __secondFactors.result(),
        multiFactors = __multiFactors.result(),
        idps = __idps.result(),
        allowDomainDiscovery = __allowDomainDiscovery,
        disableLoginWithEmail = __disableLoginWithEmail,
        disableLoginWithPhone = __disableLoginWithPhone,
        forceMfaLocalOnly = __forceMfaLocalOnly,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.policy.v1.policy.LoginPolicy] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.policy.v1.policy.LoginPolicy(
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        allowUsernamePassword = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        allowRegister = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        allowExternalIdp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        forceMfa = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        passwordlessType = com.zitadel.policy.v1.policy.PasswordlessType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.policy.v1.policy.PasswordlessType.PASSWORDLESS_TYPE_NOT_ALLOWED.scalaValueDescriptor).number),
        isDefault = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        hidePasswordReset = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        ignoreUnknownUsernames = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        defaultRedirectUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        passwordCheckLifetime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        externalLoginCheckLifetime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        mfaInitSkipLifetime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        secondFactorCheckLifetime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        multiFactorCheckLifetime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        secondFactors = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => com.zitadel.policy.v1.policy.SecondFactorType.fromValue(__e.number)).toSeq,
        multiFactors = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => com.zitadel.policy.v1.policy.MultiFactorType.fromValue(__e.number)).toSeq,
        idps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Seq[com.zitadel.idp.v1.idp.IDPLoginPolicyLink]]).getOrElse(_root_.scala.Seq.empty),
        allowDomainDiscovery = __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        disableLoginWithEmail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        disableLoginWithPhone = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        forceMfaLocalOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PolicyProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PolicyProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.v1.`object`.ObjectDetails
      case 11 => __out = com.google.protobuf.duration.Duration
      case 12 => __out = com.google.protobuf.duration.Duration
      case 13 => __out = com.google.protobuf.duration.Duration
      case 14 => __out = com.google.protobuf.duration.Duration
      case 15 => __out = com.google.protobuf.duration.Duration
      case 18 => __out = com.zitadel.idp.v1.idp.IDPLoginPolicyLink
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => com.zitadel.policy.v1.policy.PasswordlessType
      case 16 => com.zitadel.policy.v1.policy.SecondFactorType
      case 17 => com.zitadel.policy.v1.policy.MultiFactorType
    }
  }
  lazy val defaultInstance = com.zitadel.policy.v1.policy.LoginPolicy(
    details = _root_.scala.None,
    allowUsernamePassword = false,
    allowRegister = false,
    allowExternalIdp = false,
    forceMfa = false,
    passwordlessType = com.zitadel.policy.v1.policy.PasswordlessType.PASSWORDLESS_TYPE_NOT_ALLOWED,
    isDefault = false,
    hidePasswordReset = false,
    ignoreUnknownUsernames = false,
    defaultRedirectUri = "",
    passwordCheckLifetime = _root_.scala.None,
    externalLoginCheckLifetime = _root_.scala.None,
    mfaInitSkipLifetime = _root_.scala.None,
    secondFactorCheckLifetime = _root_.scala.None,
    multiFactorCheckLifetime = _root_.scala.None,
    secondFactors = _root_.scala.Seq.empty,
    multiFactors = _root_.scala.Seq.empty,
    idps = _root_.scala.Seq.empty,
    allowDomainDiscovery = false,
    disableLoginWithEmail = false,
    disableLoginWithPhone = false,
    forceMfaLocalOnly = false
  )
  implicit class LoginPolicyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.policy.v1.policy.LoginPolicy]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.policy.v1.policy.LoginPolicy](_l) {
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def allowUsernamePassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.allowUsernamePassword)((c_, f_) => c_.copy(allowUsernamePassword = f_))
    def allowRegister: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.allowRegister)((c_, f_) => c_.copy(allowRegister = f_))
    def allowExternalIdp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.allowExternalIdp)((c_, f_) => c_.copy(allowExternalIdp = f_))
    def forceMfa: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.forceMfa)((c_, f_) => c_.copy(forceMfa = f_))
    def passwordlessType: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.policy.v1.policy.PasswordlessType] = field(_.passwordlessType)((c_, f_) => c_.copy(passwordlessType = f_))
    def isDefault: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isDefault)((c_, f_) => c_.copy(isDefault = f_))
    def hidePasswordReset: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.hidePasswordReset)((c_, f_) => c_.copy(hidePasswordReset = f_))
    def ignoreUnknownUsernames: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.ignoreUnknownUsernames)((c_, f_) => c_.copy(ignoreUnknownUsernames = f_))
    def defaultRedirectUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.defaultRedirectUri)((c_, f_) => c_.copy(defaultRedirectUri = f_))
    def passwordCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getPasswordCheckLifetime)((c_, f_) => c_.copy(passwordCheckLifetime = Option(f_)))
    def optionalPasswordCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.passwordCheckLifetime)((c_, f_) => c_.copy(passwordCheckLifetime = f_))
    def externalLoginCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getExternalLoginCheckLifetime)((c_, f_) => c_.copy(externalLoginCheckLifetime = Option(f_)))
    def optionalExternalLoginCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.externalLoginCheckLifetime)((c_, f_) => c_.copy(externalLoginCheckLifetime = f_))
    def mfaInitSkipLifetime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getMfaInitSkipLifetime)((c_, f_) => c_.copy(mfaInitSkipLifetime = Option(f_)))
    def optionalMfaInitSkipLifetime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.mfaInitSkipLifetime)((c_, f_) => c_.copy(mfaInitSkipLifetime = f_))
    def secondFactorCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getSecondFactorCheckLifetime)((c_, f_) => c_.copy(secondFactorCheckLifetime = Option(f_)))
    def optionalSecondFactorCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.secondFactorCheckLifetime)((c_, f_) => c_.copy(secondFactorCheckLifetime = f_))
    def multiFactorCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getMultiFactorCheckLifetime)((c_, f_) => c_.copy(multiFactorCheckLifetime = Option(f_)))
    def optionalMultiFactorCheckLifetime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.multiFactorCheckLifetime)((c_, f_) => c_.copy(multiFactorCheckLifetime = f_))
    def secondFactors: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.policy.v1.policy.SecondFactorType]] = field(_.secondFactors)((c_, f_) => c_.copy(secondFactors = f_))
    def multiFactors: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.policy.v1.policy.MultiFactorType]] = field(_.multiFactors)((c_, f_) => c_.copy(multiFactors = f_))
    def idps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPLoginPolicyLink]] = field(_.idps)((c_, f_) => c_.copy(idps = f_))
    def allowDomainDiscovery: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.allowDomainDiscovery)((c_, f_) => c_.copy(allowDomainDiscovery = f_))
    def disableLoginWithEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.disableLoginWithEmail)((c_, f_) => c_.copy(disableLoginWithEmail = f_))
    def disableLoginWithPhone: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.disableLoginWithPhone)((c_, f_) => c_.copy(disableLoginWithPhone = f_))
    def forceMfaLocalOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.forceMfaLocalOnly)((c_, f_) => c_.copy(forceMfaLocalOnly = f_))
  }
  final val DETAILS_FIELD_NUMBER = 1
  final val ALLOW_USERNAME_PASSWORD_FIELD_NUMBER = 2
  final val ALLOW_REGISTER_FIELD_NUMBER = 3
  final val ALLOW_EXTERNAL_IDP_FIELD_NUMBER = 4
  final val FORCE_MFA_FIELD_NUMBER = 5
  final val PASSWORDLESS_TYPE_FIELD_NUMBER = 6
  final val IS_DEFAULT_FIELD_NUMBER = 7
  final val HIDE_PASSWORD_RESET_FIELD_NUMBER = 8
  final val IGNORE_UNKNOWN_USERNAMES_FIELD_NUMBER = 9
  final val DEFAULT_REDIRECT_URI_FIELD_NUMBER = 10
  final val PASSWORD_CHECK_LIFETIME_FIELD_NUMBER = 11
  final val EXTERNAL_LOGIN_CHECK_LIFETIME_FIELD_NUMBER = 12
  final val MFA_INIT_SKIP_LIFETIME_FIELD_NUMBER = 13
  final val SECOND_FACTOR_CHECK_LIFETIME_FIELD_NUMBER = 14
  final val MULTI_FACTOR_CHECK_LIFETIME_FIELD_NUMBER = 15
  final val SECOND_FACTORS_FIELD_NUMBER = 16
  final val MULTI_FACTORS_FIELD_NUMBER = 17
  final val IDPS_FIELD_NUMBER = 18
  final val ALLOW_DOMAIN_DISCOVERY_FIELD_NUMBER = 19
  final val DISABLE_LOGIN_WITH_EMAIL_FIELD_NUMBER = 20
  final val DISABLE_LOGIN_WITH_PHONE_FIELD_NUMBER = 21
  final val FORCE_MFA_LOCAL_ONLY_FIELD_NUMBER = 22
  def of(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    allowUsernamePassword: _root_.scala.Boolean,
    allowRegister: _root_.scala.Boolean,
    allowExternalIdp: _root_.scala.Boolean,
    forceMfa: _root_.scala.Boolean,
    passwordlessType: com.zitadel.policy.v1.policy.PasswordlessType,
    isDefault: _root_.scala.Boolean,
    hidePasswordReset: _root_.scala.Boolean,
    ignoreUnknownUsernames: _root_.scala.Boolean,
    defaultRedirectUri: _root_.scala.Predef.String,
    passwordCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration],
    externalLoginCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration],
    mfaInitSkipLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration],
    secondFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration],
    multiFactorCheckLifetime: _root_.scala.Option[com.google.protobuf.duration.Duration],
    secondFactors: _root_.scala.Seq[com.zitadel.policy.v1.policy.SecondFactorType],
    multiFactors: _root_.scala.Seq[com.zitadel.policy.v1.policy.MultiFactorType],
    idps: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPLoginPolicyLink],
    allowDomainDiscovery: _root_.scala.Boolean,
    disableLoginWithEmail: _root_.scala.Boolean,
    disableLoginWithPhone: _root_.scala.Boolean,
    forceMfaLocalOnly: _root_.scala.Boolean
  ): _root_.com.zitadel.policy.v1.policy.LoginPolicy = _root_.com.zitadel.policy.v1.policy.LoginPolicy(
    details,
    allowUsernamePassword,
    allowRegister,
    allowExternalIdp,
    forceMfa,
    passwordlessType,
    isDefault,
    hidePasswordReset,
    ignoreUnknownUsernames,
    defaultRedirectUri,
    passwordCheckLifetime,
    externalLoginCheckLifetime,
    mfaInitSkipLifetime,
    secondFactorCheckLifetime,
    multiFactorCheckLifetime,
    secondFactors,
    multiFactors,
    idps,
    allowDomainDiscovery,
    disableLoginWithEmail,
    disableLoginWithPhone,
    forceMfaLocalOnly
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.policy.v1.LoginPolicy])
}
