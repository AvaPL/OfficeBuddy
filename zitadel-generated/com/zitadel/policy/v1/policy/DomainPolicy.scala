// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.policy.v1.policy

@SerialVersionUID(0L)
final case class DomainPolicy(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    userLoginMustBeDomain: _root_.scala.Boolean = false,
    isDefault: _root_.scala.Boolean = false,
    validateOrgDomains: _root_.scala.Boolean = false,
    smtpSenderAddressMatchesInstanceDomain: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DomainPolicy] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = userLoginMustBeDomain
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      
      {
        val __value = isDefault
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = validateOrgDomains
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = smtpSenderAddressMatchesInstanceDomain
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = userLoginMustBeDomain
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      {
        val __v = isDefault
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = validateOrgDomains
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = smtpSenderAddressMatchesInstanceDomain
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: DomainPolicy = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): DomainPolicy = copy(details = Option(__v))
    def withUserLoginMustBeDomain(__v: _root_.scala.Boolean): DomainPolicy = copy(userLoginMustBeDomain = __v)
    def withIsDefault(__v: _root_.scala.Boolean): DomainPolicy = copy(isDefault = __v)
    def withValidateOrgDomains(__v: _root_.scala.Boolean): DomainPolicy = copy(validateOrgDomains = __v)
    def withSmtpSenderAddressMatchesInstanceDomain(__v: _root_.scala.Boolean): DomainPolicy = copy(smtpSenderAddressMatchesInstanceDomain = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => details.orNull
        case 2 => {
          val __t = userLoginMustBeDomain
          if (__t != false) __t else null
        }
        case 3 => {
          val __t = isDefault
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = validateOrgDomains
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = smtpSenderAddressMatchesInstanceDomain
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PBoolean(userLoginMustBeDomain)
        case 3 => _root_.scalapb.descriptors.PBoolean(isDefault)
        case 4 => _root_.scalapb.descriptors.PBoolean(validateOrgDomains)
        case 5 => _root_.scalapb.descriptors.PBoolean(smtpSenderAddressMatchesInstanceDomain)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.policy.v1.policy.DomainPolicy.type = com.zitadel.policy.v1.policy.DomainPolicy
    // @@protoc_insertion_point(GeneratedMessage[zitadel.policy.v1.DomainPolicy])
}

object DomainPolicy extends scalapb.GeneratedMessageCompanion[com.zitadel.policy.v1.policy.DomainPolicy] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.policy.v1.policy.DomainPolicy] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.policy.v1.policy.DomainPolicy = {
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __userLoginMustBeDomain: _root_.scala.Boolean = false
    var __isDefault: _root_.scala.Boolean = false
    var __validateOrgDomains: _root_.scala.Boolean = false
    var __smtpSenderAddressMatchesInstanceDomain: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __userLoginMustBeDomain = _input__.readBool()
        case 24 =>
          __isDefault = _input__.readBool()
        case 32 =>
          __validateOrgDomains = _input__.readBool()
        case 40 =>
          __smtpSenderAddressMatchesInstanceDomain = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.policy.v1.policy.DomainPolicy(
        details = __details,
        userLoginMustBeDomain = __userLoginMustBeDomain,
        isDefault = __isDefault,
        validateOrgDomains = __validateOrgDomains,
        smtpSenderAddressMatchesInstanceDomain = __smtpSenderAddressMatchesInstanceDomain,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.policy.v1.policy.DomainPolicy] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.policy.v1.policy.DomainPolicy(
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        userLoginMustBeDomain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        isDefault = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        validateOrgDomains = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        smtpSenderAddressMatchesInstanceDomain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PolicyProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PolicyProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.policy.v1.policy.DomainPolicy(
    details = _root_.scala.None,
    userLoginMustBeDomain = false,
    isDefault = false,
    validateOrgDomains = false,
    smtpSenderAddressMatchesInstanceDomain = false
  )
  implicit class DomainPolicyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.policy.v1.policy.DomainPolicy]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.policy.v1.policy.DomainPolicy](_l) {
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def userLoginMustBeDomain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.userLoginMustBeDomain)((c_, f_) => c_.copy(userLoginMustBeDomain = f_))
    def isDefault: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isDefault)((c_, f_) => c_.copy(isDefault = f_))
    def validateOrgDomains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.validateOrgDomains)((c_, f_) => c_.copy(validateOrgDomains = f_))
    def smtpSenderAddressMatchesInstanceDomain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.smtpSenderAddressMatchesInstanceDomain)((c_, f_) => c_.copy(smtpSenderAddressMatchesInstanceDomain = f_))
  }
  final val DETAILS_FIELD_NUMBER = 1
  final val USER_LOGIN_MUST_BE_DOMAIN_FIELD_NUMBER = 2
  final val IS_DEFAULT_FIELD_NUMBER = 3
  final val VALIDATE_ORG_DOMAINS_FIELD_NUMBER = 4
  final val SMTP_SENDER_ADDRESS_MATCHES_INSTANCE_DOMAIN_FIELD_NUMBER = 5
  def of(
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    userLoginMustBeDomain: _root_.scala.Boolean,
    isDefault: _root_.scala.Boolean,
    validateOrgDomains: _root_.scala.Boolean,
    smtpSenderAddressMatchesInstanceDomain: _root_.scala.Boolean
  ): _root_.com.zitadel.policy.v1.policy.DomainPolicy = _root_.com.zitadel.policy.v1.policy.DomainPolicy(
    details,
    userLoginMustBeDomain,
    isDefault,
    validateOrgDomains,
    smtpSenderAddressMatchesInstanceDomain
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.policy.v1.DomainPolicy])
}
