// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.idp.v1.idp

@SerialVersionUID(0L)
final case class AzureADTenant(
    `type`: com.zitadel.idp.v1.idp.AzureADTenant.Type = com.zitadel.idp.v1.idp.AzureADTenant.Type.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AzureADTenant] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (`type`.tenantType.isDefined) {
        val __value = `type`.tenantType.get.value
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
      };
      if (`type`.tenantId.isDefined) {
        val __value = `type`.tenantId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      `type`.tenantType.foreach { __v =>
        val __m = __v.value
        _output__.writeEnum(1, __m)
      };
      `type`.tenantId.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getTenantType: com.zitadel.idp.v1.idp.AzureADTenantType = `type`.tenantType.getOrElse(com.zitadel.idp.v1.idp.AzureADTenantType.AZURE_AD_TENANT_TYPE_COMMON)
    def withTenantType(__v: com.zitadel.idp.v1.idp.AzureADTenantType): AzureADTenant = copy(`type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantType(__v))
    def getTenantId: _root_.scala.Predef.String = `type`.tenantId.getOrElse("")
    def withTenantId(__v: _root_.scala.Predef.String): AzureADTenant = copy(`type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantId(__v))
    def clearType: AzureADTenant = copy(`type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.Empty)
    def withType(__v: com.zitadel.idp.v1.idp.AzureADTenant.Type): AzureADTenant = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => `type`.tenantType.map(_.javaValueDescriptor).orNull
        case 2 => `type`.tenantId.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => `type`.tenantType.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => `type`.tenantId.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.idp.v1.idp.AzureADTenant.type = com.zitadel.idp.v1.idp.AzureADTenant
    // @@protoc_insertion_point(GeneratedMessage[zitadel.idp.v1.AzureADTenant])
}

object AzureADTenant extends scalapb.GeneratedMessageCompanion[com.zitadel.idp.v1.idp.AzureADTenant] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.idp.v1.idp.AzureADTenant] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.idp.v1.idp.AzureADTenant = {
    var __type: com.zitadel.idp.v1.idp.AzureADTenant.Type = com.zitadel.idp.v1.idp.AzureADTenant.Type.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __type = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantType(com.zitadel.idp.v1.idp.AzureADTenantType.fromValue(_input__.readEnum()))
        case 18 =>
          __type = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantId(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.idp.v1.idp.AzureADTenant(
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.idp.v1.idp.AzureADTenant] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.idp.v1.idp.AzureADTenant(
        `type` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantType(com.zitadel.idp.v1.idp.AzureADTenantType.fromValue(__e.number)))
            .orElse[com.zitadel.idp.v1.idp.AzureADTenant.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantId(_)))
            .getOrElse(com.zitadel.idp.v1.idp.AzureADTenant.Type.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = IdpProto.javaDescriptor.getMessageTypes().get(21)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = IdpProto.scalaDescriptor.messages(21)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.zitadel.idp.v1.idp.AzureADTenantType
    }
  }
  lazy val defaultInstance = com.zitadel.idp.v1.idp.AzureADTenant(
    `type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.Empty
  )
  sealed trait Type extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isTenantType: _root_.scala.Boolean = false
    def isTenantId: _root_.scala.Boolean = false
    def tenantType: _root_.scala.Option[com.zitadel.idp.v1.idp.AzureADTenantType] = _root_.scala.None
    def tenantId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Type {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.idp.v1.idp.AzureADTenant.Type {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class TenantType(value: com.zitadel.idp.v1.idp.AzureADTenantType) extends com.zitadel.idp.v1.idp.AzureADTenant.Type {
      type ValueType = com.zitadel.idp.v1.idp.AzureADTenantType
      override def isTenantType: _root_.scala.Boolean = true
      override def tenantType: _root_.scala.Option[com.zitadel.idp.v1.idp.AzureADTenantType] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class TenantId(value: _root_.scala.Predef.String) extends com.zitadel.idp.v1.idp.AzureADTenant.Type {
      type ValueType = _root_.scala.Predef.String
      override def isTenantId: _root_.scala.Boolean = true
      override def tenantId: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  implicit class AzureADTenantLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.idp.v1.idp.AzureADTenant]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.idp.v1.idp.AzureADTenant](_l) {
    def tenantType: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.idp.v1.idp.AzureADTenantType] = field(_.getTenantType)((c_, f_) => c_.copy(`type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantType(f_)))
    def tenantId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getTenantId)((c_, f_) => c_.copy(`type` = com.zitadel.idp.v1.idp.AzureADTenant.Type.TenantId(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.idp.v1.idp.AzureADTenant.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val TENANT_TYPE_FIELD_NUMBER = 1
  final val TENANT_ID_FIELD_NUMBER = 2
  def of(
    `type`: com.zitadel.idp.v1.idp.AzureADTenant.Type
  ): _root_.com.zitadel.idp.v1.idp.AzureADTenant = _root_.com.zitadel.idp.v1.idp.AzureADTenant(
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.idp.v1.AzureADTenant])
}
