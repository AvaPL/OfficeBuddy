// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.idp.v1.idp

@SerialVersionUID(0L)
final case class OAuthConfig(
    clientId: _root_.scala.Predef.String = "",
    authorizationEndpoint: _root_.scala.Predef.String = "",
    tokenEndpoint: _root_.scala.Predef.String = "",
    userEndpoint: _root_.scala.Predef.String = "",
    scopes: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    idAttribute: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[OAuthConfig] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = authorizationEndpoint
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = tokenEndpoint
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = userEndpoint
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      scopes.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      }
      
      {
        val __value = idAttribute
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = authorizationEndpoint
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = tokenEndpoint
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = userEndpoint
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      scopes.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      {
        val __v = idAttribute
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withClientId(__v: _root_.scala.Predef.String): OAuthConfig = copy(clientId = __v)
    def withAuthorizationEndpoint(__v: _root_.scala.Predef.String): OAuthConfig = copy(authorizationEndpoint = __v)
    def withTokenEndpoint(__v: _root_.scala.Predef.String): OAuthConfig = copy(tokenEndpoint = __v)
    def withUserEndpoint(__v: _root_.scala.Predef.String): OAuthConfig = copy(userEndpoint = __v)
    def clearScopes = copy(scopes = _root_.scala.Seq.empty)
    def addScopes(__vs: _root_.scala.Predef.String *): OAuthConfig = addAllScopes(__vs)
    def addAllScopes(__vs: Iterable[_root_.scala.Predef.String]): OAuthConfig = copy(scopes = scopes ++ __vs)
    def withScopes(__v: _root_.scala.Seq[_root_.scala.Predef.String]): OAuthConfig = copy(scopes = __v)
    def withIdAttribute(__v: _root_.scala.Predef.String): OAuthConfig = copy(idAttribute = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = authorizationEndpoint
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = tokenEndpoint
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = userEndpoint
          if (__t != "") __t else null
        }
        case 5 => scopes
        case 6 => {
          val __t = idAttribute
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(clientId)
        case 2 => _root_.scalapb.descriptors.PString(authorizationEndpoint)
        case 3 => _root_.scalapb.descriptors.PString(tokenEndpoint)
        case 4 => _root_.scalapb.descriptors.PString(userEndpoint)
        case 5 => _root_.scalapb.descriptors.PRepeated(scopes.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 6 => _root_.scalapb.descriptors.PString(idAttribute)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.idp.v1.idp.OAuthConfig.type = com.zitadel.idp.v1.idp.OAuthConfig
    // @@protoc_insertion_point(GeneratedMessage[zitadel.idp.v1.OAuthConfig])
}

object OAuthConfig extends scalapb.GeneratedMessageCompanion[com.zitadel.idp.v1.idp.OAuthConfig] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.idp.v1.idp.OAuthConfig] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.idp.v1.idp.OAuthConfig = {
    var __clientId: _root_.scala.Predef.String = ""
    var __authorizationEndpoint: _root_.scala.Predef.String = ""
    var __tokenEndpoint: _root_.scala.Predef.String = ""
    var __userEndpoint: _root_.scala.Predef.String = ""
    val __scopes: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __idAttribute: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __clientId = _input__.readStringRequireUtf8()
        case 18 =>
          __authorizationEndpoint = _input__.readStringRequireUtf8()
        case 26 =>
          __tokenEndpoint = _input__.readStringRequireUtf8()
        case 34 =>
          __userEndpoint = _input__.readStringRequireUtf8()
        case 42 =>
          __scopes += _input__.readStringRequireUtf8()
        case 50 =>
          __idAttribute = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.idp.v1.idp.OAuthConfig(
        clientId = __clientId,
        authorizationEndpoint = __authorizationEndpoint,
        tokenEndpoint = __tokenEndpoint,
        userEndpoint = __userEndpoint,
        scopes = __scopes.result(),
        idAttribute = __idAttribute,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.idp.v1.idp.OAuthConfig] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.idp.v1.idp.OAuthConfig(
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        authorizationEndpoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tokenEndpoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userEndpoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        scopes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        idAttribute = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = IdpProto.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = IdpProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.idp.v1.idp.OAuthConfig(
    clientId = "",
    authorizationEndpoint = "",
    tokenEndpoint = "",
    userEndpoint = "",
    scopes = _root_.scala.Seq.empty,
    idAttribute = ""
  )
  implicit class OAuthConfigLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.idp.v1.idp.OAuthConfig]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.idp.v1.idp.OAuthConfig](_l) {
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def authorizationEndpoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.authorizationEndpoint)((c_, f_) => c_.copy(authorizationEndpoint = f_))
    def tokenEndpoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tokenEndpoint)((c_, f_) => c_.copy(tokenEndpoint = f_))
    def userEndpoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userEndpoint)((c_, f_) => c_.copy(userEndpoint = f_))
    def scopes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.scopes)((c_, f_) => c_.copy(scopes = f_))
    def idAttribute: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.idAttribute)((c_, f_) => c_.copy(idAttribute = f_))
  }
  final val CLIENT_ID_FIELD_NUMBER = 1
  final val AUTHORIZATION_ENDPOINT_FIELD_NUMBER = 2
  final val TOKEN_ENDPOINT_FIELD_NUMBER = 3
  final val USER_ENDPOINT_FIELD_NUMBER = 4
  final val SCOPES_FIELD_NUMBER = 5
  final val ID_ATTRIBUTE_FIELD_NUMBER = 6
  def of(
    clientId: _root_.scala.Predef.String,
    authorizationEndpoint: _root_.scala.Predef.String,
    tokenEndpoint: _root_.scala.Predef.String,
    userEndpoint: _root_.scala.Predef.String,
    scopes: _root_.scala.Seq[_root_.scala.Predef.String],
    idAttribute: _root_.scala.Predef.String
  ): _root_.com.zitadel.idp.v1.idp.OAuthConfig = _root_.com.zitadel.idp.v1.idp.OAuthConfig(
    clientId,
    authorizationEndpoint,
    tokenEndpoint,
    userEndpoint,
    scopes,
    idAttribute
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.idp.v1.OAuthConfig])
}
