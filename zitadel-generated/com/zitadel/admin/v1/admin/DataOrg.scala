// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.admin.v1.admin

@SerialVersionUID(0L)
final case class DataOrg(
    orgId: _root_.scala.Predef.String = "",
    org: _root_.scala.Option[com.zitadel.management.v1.management.AddOrgRequest] = _root_.scala.None,
    domainPolicy: _root_.scala.Option[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest] = _root_.scala.None,
    labelPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest] = _root_.scala.None,
    lockoutPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest] = _root_.scala.None,
    loginPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest] = _root_.scala.None,
    passwordComplexityPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest] = _root_.scala.None,
    privacyPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest] = _root_.scala.None,
    projects: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProject] = _root_.scala.Seq.empty,
    projectRoles: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectRoleRequest] = _root_.scala.Seq.empty,
    apiApps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAPIApplication] = _root_.scala.Seq.empty,
    oidcApps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCApplication] = _root_.scala.Seq.empty,
    humanUsers: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataHumanUser] = _root_.scala.Seq.empty,
    machineUsers: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineUser] = _root_.scala.Seq.empty,
    triggerActions: _root_.scala.Seq[com.zitadel.management.v1.management.SetTriggerActionsRequest] = _root_.scala.Seq.empty,
    actions: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAction] = _root_.scala.Seq.empty,
    projectGrants: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProjectGrant] = _root_.scala.Seq.empty,
    userGrants: _root_.scala.Seq[com.zitadel.management.v1.management.AddUserGrantRequest] = _root_.scala.Seq.empty,
    orgMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddOrgMemberRequest] = _root_.scala.Seq.empty,
    projectMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectMemberRequest] = _root_.scala.Seq.empty,
    projectGrantMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectGrantMemberRequest] = _root_.scala.Seq.empty,
    userMetadata: _root_.scala.Seq[com.zitadel.management.v1.management.SetUserMetadataRequest] = _root_.scala.Seq.empty,
    loginTexts: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomLoginTextsRequest] = _root_.scala.Seq.empty,
    initMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest] = _root_.scala.Seq.empty,
    passwordResetMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest] = _root_.scala.Seq.empty,
    verifyEmailMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest] = _root_.scala.Seq.empty,
    verifyPhoneMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest] = _root_.scala.Seq.empty,
    domainClaimedMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest] = _root_.scala.Seq.empty,
    passwordlessRegistrationMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest] = _root_.scala.Seq.empty,
    oidcIdps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCIDP] = _root_.scala.Seq.empty,
    jwtIdps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataJWTIDP] = _root_.scala.Seq.empty,
    userLinks: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPUserLink] = _root_.scala.Seq.empty,
    domains: _root_.scala.Seq[com.zitadel.org.v1.org.Domain] = _root_.scala.Seq.empty,
    appKeys: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAppKey] = _root_.scala.Seq.empty,
    machineKeys: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineKey] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DataOrg] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = orgId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (org.isDefined) {
        val __value = org.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (domainPolicy.isDefined) {
        val __value = domainPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (labelPolicy.isDefined) {
        val __value = labelPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (lockoutPolicy.isDefined) {
        val __value = lockoutPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (loginPolicy.isDefined) {
        val __value = loginPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (passwordComplexityPolicy.isDefined) {
        val __value = passwordComplexityPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (privacyPolicy.isDefined) {
        val __value = privacyPolicy.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      projects.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      projectRoles.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      apiApps.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      oidcApps.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      humanUsers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      machineUsers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      triggerActions.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      actions.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      projectGrants.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      userGrants.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      orgMembers.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      projectMembers.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      projectGrantMembers.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      userMetadata.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      loginTexts.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      initMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      passwordResetMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      verifyEmailMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      verifyPhoneMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      domainClaimedMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      passwordlessRegistrationMessages.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      oidcIdps.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      jwtIdps.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      userLinks.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      domains.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      appKeys.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      machineKeys.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = orgId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      org.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      domainPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      labelPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      lockoutPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      loginPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      passwordComplexityPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      privacyPolicy.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      projects.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      projectRoles.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      apiApps.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      oidcApps.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      humanUsers.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      machineUsers.foreach { __v =>
        val __m = __v
        _output__.writeTag(15, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      triggerActions.foreach { __v =>
        val __m = __v
        _output__.writeTag(16, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      actions.foreach { __v =>
        val __m = __v
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      projectGrants.foreach { __v =>
        val __m = __v
        _output__.writeTag(18, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      userGrants.foreach { __v =>
        val __m = __v
        _output__.writeTag(19, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      orgMembers.foreach { __v =>
        val __m = __v
        _output__.writeTag(20, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      projectMembers.foreach { __v =>
        val __m = __v
        _output__.writeTag(21, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      projectGrantMembers.foreach { __v =>
        val __m = __v
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      userMetadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(23, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      loginTexts.foreach { __v =>
        val __m = __v
        _output__.writeTag(24, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      initMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(25, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      passwordResetMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(26, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      verifyEmailMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(27, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      verifyPhoneMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(28, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      domainClaimedMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(29, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      passwordlessRegistrationMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(30, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      oidcIdps.foreach { __v =>
        val __m = __v
        _output__.writeTag(31, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      jwtIdps.foreach { __v =>
        val __m = __v
        _output__.writeTag(32, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      userLinks.foreach { __v =>
        val __m = __v
        _output__.writeTag(33, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      domains.foreach { __v =>
        val __m = __v
        _output__.writeTag(34, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      appKeys.foreach { __v =>
        val __m = __v
        _output__.writeTag(35, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      machineKeys.foreach { __v =>
        val __m = __v
        _output__.writeTag(36, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withOrgId(__v: _root_.scala.Predef.String): DataOrg = copy(orgId = __v)
    def getOrg: com.zitadel.management.v1.management.AddOrgRequest = org.getOrElse(com.zitadel.management.v1.management.AddOrgRequest.defaultInstance)
    def clearOrg: DataOrg = copy(org = _root_.scala.None)
    def withOrg(__v: com.zitadel.management.v1.management.AddOrgRequest): DataOrg = copy(org = Option(__v))
    def getDomainPolicy: com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest = domainPolicy.getOrElse(com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest.defaultInstance)
    def clearDomainPolicy: DataOrg = copy(domainPolicy = _root_.scala.None)
    def withDomainPolicy(__v: com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest): DataOrg = copy(domainPolicy = Option(__v))
    def getLabelPolicy: com.zitadel.management.v1.management.AddCustomLabelPolicyRequest = labelPolicy.getOrElse(com.zitadel.management.v1.management.AddCustomLabelPolicyRequest.defaultInstance)
    def clearLabelPolicy: DataOrg = copy(labelPolicy = _root_.scala.None)
    def withLabelPolicy(__v: com.zitadel.management.v1.management.AddCustomLabelPolicyRequest): DataOrg = copy(labelPolicy = Option(__v))
    def getLockoutPolicy: com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest = lockoutPolicy.getOrElse(com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest.defaultInstance)
    def clearLockoutPolicy: DataOrg = copy(lockoutPolicy = _root_.scala.None)
    def withLockoutPolicy(__v: com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest): DataOrg = copy(lockoutPolicy = Option(__v))
    def getLoginPolicy: com.zitadel.management.v1.management.AddCustomLoginPolicyRequest = loginPolicy.getOrElse(com.zitadel.management.v1.management.AddCustomLoginPolicyRequest.defaultInstance)
    def clearLoginPolicy: DataOrg = copy(loginPolicy = _root_.scala.None)
    def withLoginPolicy(__v: com.zitadel.management.v1.management.AddCustomLoginPolicyRequest): DataOrg = copy(loginPolicy = Option(__v))
    def getPasswordComplexityPolicy: com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest = passwordComplexityPolicy.getOrElse(com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest.defaultInstance)
    def clearPasswordComplexityPolicy: DataOrg = copy(passwordComplexityPolicy = _root_.scala.None)
    def withPasswordComplexityPolicy(__v: com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest): DataOrg = copy(passwordComplexityPolicy = Option(__v))
    def getPrivacyPolicy: com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest = privacyPolicy.getOrElse(com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest.defaultInstance)
    def clearPrivacyPolicy: DataOrg = copy(privacyPolicy = _root_.scala.None)
    def withPrivacyPolicy(__v: com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest): DataOrg = copy(privacyPolicy = Option(__v))
    def clearProjects = copy(projects = _root_.scala.Seq.empty)
    def addProjects(__vs: com.zitadel.v1.v1.v1.DataProject *): DataOrg = addAllProjects(__vs)
    def addAllProjects(__vs: Iterable[com.zitadel.v1.v1.v1.DataProject]): DataOrg = copy(projects = projects ++ __vs)
    def withProjects(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProject]): DataOrg = copy(projects = __v)
    def clearProjectRoles = copy(projectRoles = _root_.scala.Seq.empty)
    def addProjectRoles(__vs: com.zitadel.management.v1.management.AddProjectRoleRequest *): DataOrg = addAllProjectRoles(__vs)
    def addAllProjectRoles(__vs: Iterable[com.zitadel.management.v1.management.AddProjectRoleRequest]): DataOrg = copy(projectRoles = projectRoles ++ __vs)
    def withProjectRoles(__v: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectRoleRequest]): DataOrg = copy(projectRoles = __v)
    def clearApiApps = copy(apiApps = _root_.scala.Seq.empty)
    def addApiApps(__vs: com.zitadel.v1.v1.v1.DataAPIApplication *): DataOrg = addAllApiApps(__vs)
    def addAllApiApps(__vs: Iterable[com.zitadel.v1.v1.v1.DataAPIApplication]): DataOrg = copy(apiApps = apiApps ++ __vs)
    def withApiApps(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAPIApplication]): DataOrg = copy(apiApps = __v)
    def clearOidcApps = copy(oidcApps = _root_.scala.Seq.empty)
    def addOidcApps(__vs: com.zitadel.v1.v1.v1.DataOIDCApplication *): DataOrg = addAllOidcApps(__vs)
    def addAllOidcApps(__vs: Iterable[com.zitadel.v1.v1.v1.DataOIDCApplication]): DataOrg = copy(oidcApps = oidcApps ++ __vs)
    def withOidcApps(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCApplication]): DataOrg = copy(oidcApps = __v)
    def clearHumanUsers = copy(humanUsers = _root_.scala.Seq.empty)
    def addHumanUsers(__vs: com.zitadel.v1.v1.v1.DataHumanUser *): DataOrg = addAllHumanUsers(__vs)
    def addAllHumanUsers(__vs: Iterable[com.zitadel.v1.v1.v1.DataHumanUser]): DataOrg = copy(humanUsers = humanUsers ++ __vs)
    def withHumanUsers(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataHumanUser]): DataOrg = copy(humanUsers = __v)
    def clearMachineUsers = copy(machineUsers = _root_.scala.Seq.empty)
    def addMachineUsers(__vs: com.zitadel.v1.v1.v1.DataMachineUser *): DataOrg = addAllMachineUsers(__vs)
    def addAllMachineUsers(__vs: Iterable[com.zitadel.v1.v1.v1.DataMachineUser]): DataOrg = copy(machineUsers = machineUsers ++ __vs)
    def withMachineUsers(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineUser]): DataOrg = copy(machineUsers = __v)
    def clearTriggerActions = copy(triggerActions = _root_.scala.Seq.empty)
    def addTriggerActions(__vs: com.zitadel.management.v1.management.SetTriggerActionsRequest *): DataOrg = addAllTriggerActions(__vs)
    def addAllTriggerActions(__vs: Iterable[com.zitadel.management.v1.management.SetTriggerActionsRequest]): DataOrg = copy(triggerActions = triggerActions ++ __vs)
    def withTriggerActions(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetTriggerActionsRequest]): DataOrg = copy(triggerActions = __v)
    def clearActions = copy(actions = _root_.scala.Seq.empty)
    def addActions(__vs: com.zitadel.v1.v1.v1.DataAction *): DataOrg = addAllActions(__vs)
    def addAllActions(__vs: Iterable[com.zitadel.v1.v1.v1.DataAction]): DataOrg = copy(actions = actions ++ __vs)
    def withActions(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAction]): DataOrg = copy(actions = __v)
    def clearProjectGrants = copy(projectGrants = _root_.scala.Seq.empty)
    def addProjectGrants(__vs: com.zitadel.v1.v1.v1.DataProjectGrant *): DataOrg = addAllProjectGrants(__vs)
    def addAllProjectGrants(__vs: Iterable[com.zitadel.v1.v1.v1.DataProjectGrant]): DataOrg = copy(projectGrants = projectGrants ++ __vs)
    def withProjectGrants(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProjectGrant]): DataOrg = copy(projectGrants = __v)
    def clearUserGrants = copy(userGrants = _root_.scala.Seq.empty)
    def addUserGrants(__vs: com.zitadel.management.v1.management.AddUserGrantRequest *): DataOrg = addAllUserGrants(__vs)
    def addAllUserGrants(__vs: Iterable[com.zitadel.management.v1.management.AddUserGrantRequest]): DataOrg = copy(userGrants = userGrants ++ __vs)
    def withUserGrants(__v: _root_.scala.Seq[com.zitadel.management.v1.management.AddUserGrantRequest]): DataOrg = copy(userGrants = __v)
    def clearOrgMembers = copy(orgMembers = _root_.scala.Seq.empty)
    def addOrgMembers(__vs: com.zitadel.management.v1.management.AddOrgMemberRequest *): DataOrg = addAllOrgMembers(__vs)
    def addAllOrgMembers(__vs: Iterable[com.zitadel.management.v1.management.AddOrgMemberRequest]): DataOrg = copy(orgMembers = orgMembers ++ __vs)
    def withOrgMembers(__v: _root_.scala.Seq[com.zitadel.management.v1.management.AddOrgMemberRequest]): DataOrg = copy(orgMembers = __v)
    def clearProjectMembers = copy(projectMembers = _root_.scala.Seq.empty)
    def addProjectMembers(__vs: com.zitadel.management.v1.management.AddProjectMemberRequest *): DataOrg = addAllProjectMembers(__vs)
    def addAllProjectMembers(__vs: Iterable[com.zitadel.management.v1.management.AddProjectMemberRequest]): DataOrg = copy(projectMembers = projectMembers ++ __vs)
    def withProjectMembers(__v: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectMemberRequest]): DataOrg = copy(projectMembers = __v)
    def clearProjectGrantMembers = copy(projectGrantMembers = _root_.scala.Seq.empty)
    def addProjectGrantMembers(__vs: com.zitadel.management.v1.management.AddProjectGrantMemberRequest *): DataOrg = addAllProjectGrantMembers(__vs)
    def addAllProjectGrantMembers(__vs: Iterable[com.zitadel.management.v1.management.AddProjectGrantMemberRequest]): DataOrg = copy(projectGrantMembers = projectGrantMembers ++ __vs)
    def withProjectGrantMembers(__v: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectGrantMemberRequest]): DataOrg = copy(projectGrantMembers = __v)
    def clearUserMetadata = copy(userMetadata = _root_.scala.Seq.empty)
    def addUserMetadata(__vs: com.zitadel.management.v1.management.SetUserMetadataRequest *): DataOrg = addAllUserMetadata(__vs)
    def addAllUserMetadata(__vs: Iterable[com.zitadel.management.v1.management.SetUserMetadataRequest]): DataOrg = copy(userMetadata = userMetadata ++ __vs)
    def withUserMetadata(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetUserMetadataRequest]): DataOrg = copy(userMetadata = __v)
    def clearLoginTexts = copy(loginTexts = _root_.scala.Seq.empty)
    def addLoginTexts(__vs: com.zitadel.management.v1.management.SetCustomLoginTextsRequest *): DataOrg = addAllLoginTexts(__vs)
    def addAllLoginTexts(__vs: Iterable[com.zitadel.management.v1.management.SetCustomLoginTextsRequest]): DataOrg = copy(loginTexts = loginTexts ++ __vs)
    def withLoginTexts(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomLoginTextsRequest]): DataOrg = copy(loginTexts = __v)
    def clearInitMessages = copy(initMessages = _root_.scala.Seq.empty)
    def addInitMessages(__vs: com.zitadel.management.v1.management.SetCustomInitMessageTextRequest *): DataOrg = addAllInitMessages(__vs)
    def addAllInitMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest]): DataOrg = copy(initMessages = initMessages ++ __vs)
    def withInitMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest]): DataOrg = copy(initMessages = __v)
    def clearPasswordResetMessages = copy(passwordResetMessages = _root_.scala.Seq.empty)
    def addPasswordResetMessages(__vs: com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest *): DataOrg = addAllPasswordResetMessages(__vs)
    def addAllPasswordResetMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest]): DataOrg = copy(passwordResetMessages = passwordResetMessages ++ __vs)
    def withPasswordResetMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest]): DataOrg = copy(passwordResetMessages = __v)
    def clearVerifyEmailMessages = copy(verifyEmailMessages = _root_.scala.Seq.empty)
    def addVerifyEmailMessages(__vs: com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest *): DataOrg = addAllVerifyEmailMessages(__vs)
    def addAllVerifyEmailMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest]): DataOrg = copy(verifyEmailMessages = verifyEmailMessages ++ __vs)
    def withVerifyEmailMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest]): DataOrg = copy(verifyEmailMessages = __v)
    def clearVerifyPhoneMessages = copy(verifyPhoneMessages = _root_.scala.Seq.empty)
    def addVerifyPhoneMessages(__vs: com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest *): DataOrg = addAllVerifyPhoneMessages(__vs)
    def addAllVerifyPhoneMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest]): DataOrg = copy(verifyPhoneMessages = verifyPhoneMessages ++ __vs)
    def withVerifyPhoneMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest]): DataOrg = copy(verifyPhoneMessages = __v)
    def clearDomainClaimedMessages = copy(domainClaimedMessages = _root_.scala.Seq.empty)
    def addDomainClaimedMessages(__vs: com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest *): DataOrg = addAllDomainClaimedMessages(__vs)
    def addAllDomainClaimedMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest]): DataOrg = copy(domainClaimedMessages = domainClaimedMessages ++ __vs)
    def withDomainClaimedMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest]): DataOrg = copy(domainClaimedMessages = __v)
    def clearPasswordlessRegistrationMessages = copy(passwordlessRegistrationMessages = _root_.scala.Seq.empty)
    def addPasswordlessRegistrationMessages(__vs: com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest *): DataOrg = addAllPasswordlessRegistrationMessages(__vs)
    def addAllPasswordlessRegistrationMessages(__vs: Iterable[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest]): DataOrg = copy(passwordlessRegistrationMessages = passwordlessRegistrationMessages ++ __vs)
    def withPasswordlessRegistrationMessages(__v: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest]): DataOrg = copy(passwordlessRegistrationMessages = __v)
    def clearOidcIdps = copy(oidcIdps = _root_.scala.Seq.empty)
    def addOidcIdps(__vs: com.zitadel.v1.v1.v1.DataOIDCIDP *): DataOrg = addAllOidcIdps(__vs)
    def addAllOidcIdps(__vs: Iterable[com.zitadel.v1.v1.v1.DataOIDCIDP]): DataOrg = copy(oidcIdps = oidcIdps ++ __vs)
    def withOidcIdps(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCIDP]): DataOrg = copy(oidcIdps = __v)
    def clearJwtIdps = copy(jwtIdps = _root_.scala.Seq.empty)
    def addJwtIdps(__vs: com.zitadel.v1.v1.v1.DataJWTIDP *): DataOrg = addAllJwtIdps(__vs)
    def addAllJwtIdps(__vs: Iterable[com.zitadel.v1.v1.v1.DataJWTIDP]): DataOrg = copy(jwtIdps = jwtIdps ++ __vs)
    def withJwtIdps(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataJWTIDP]): DataOrg = copy(jwtIdps = __v)
    def clearUserLinks = copy(userLinks = _root_.scala.Seq.empty)
    def addUserLinks(__vs: com.zitadel.idp.v1.idp.IDPUserLink *): DataOrg = addAllUserLinks(__vs)
    def addAllUserLinks(__vs: Iterable[com.zitadel.idp.v1.idp.IDPUserLink]): DataOrg = copy(userLinks = userLinks ++ __vs)
    def withUserLinks(__v: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPUserLink]): DataOrg = copy(userLinks = __v)
    def clearDomains = copy(domains = _root_.scala.Seq.empty)
    def addDomains(__vs: com.zitadel.org.v1.org.Domain *): DataOrg = addAllDomains(__vs)
    def addAllDomains(__vs: Iterable[com.zitadel.org.v1.org.Domain]): DataOrg = copy(domains = domains ++ __vs)
    def withDomains(__v: _root_.scala.Seq[com.zitadel.org.v1.org.Domain]): DataOrg = copy(domains = __v)
    def clearAppKeys = copy(appKeys = _root_.scala.Seq.empty)
    def addAppKeys(__vs: com.zitadel.v1.v1.v1.DataAppKey *): DataOrg = addAllAppKeys(__vs)
    def addAllAppKeys(__vs: Iterable[com.zitadel.v1.v1.v1.DataAppKey]): DataOrg = copy(appKeys = appKeys ++ __vs)
    def withAppKeys(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAppKey]): DataOrg = copy(appKeys = __v)
    def clearMachineKeys = copy(machineKeys = _root_.scala.Seq.empty)
    def addMachineKeys(__vs: com.zitadel.v1.v1.v1.DataMachineKey *): DataOrg = addAllMachineKeys(__vs)
    def addAllMachineKeys(__vs: Iterable[com.zitadel.v1.v1.v1.DataMachineKey]): DataOrg = copy(machineKeys = machineKeys ++ __vs)
    def withMachineKeys(__v: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineKey]): DataOrg = copy(machineKeys = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = orgId
          if (__t != "") __t else null
        }
        case 3 => org.orNull
        case 4 => domainPolicy.orNull
        case 5 => labelPolicy.orNull
        case 6 => lockoutPolicy.orNull
        case 7 => loginPolicy.orNull
        case 8 => passwordComplexityPolicy.orNull
        case 9 => privacyPolicy.orNull
        case 10 => projects
        case 11 => projectRoles
        case 12 => apiApps
        case 13 => oidcApps
        case 14 => humanUsers
        case 15 => machineUsers
        case 16 => triggerActions
        case 17 => actions
        case 18 => projectGrants
        case 19 => userGrants
        case 20 => orgMembers
        case 21 => projectMembers
        case 22 => projectGrantMembers
        case 23 => userMetadata
        case 24 => loginTexts
        case 25 => initMessages
        case 26 => passwordResetMessages
        case 27 => verifyEmailMessages
        case 28 => verifyPhoneMessages
        case 29 => domainClaimedMessages
        case 30 => passwordlessRegistrationMessages
        case 31 => oidcIdps
        case 32 => jwtIdps
        case 33 => userLinks
        case 34 => domains
        case 35 => appKeys
        case 36 => machineKeys
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(orgId)
        case 3 => org.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => domainPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => labelPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => lockoutPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => loginPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => passwordComplexityPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => privacyPolicy.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => _root_.scalapb.descriptors.PRepeated(projects.iterator.map(_.toPMessage).toVector)
        case 11 => _root_.scalapb.descriptors.PRepeated(projectRoles.iterator.map(_.toPMessage).toVector)
        case 12 => _root_.scalapb.descriptors.PRepeated(apiApps.iterator.map(_.toPMessage).toVector)
        case 13 => _root_.scalapb.descriptors.PRepeated(oidcApps.iterator.map(_.toPMessage).toVector)
        case 14 => _root_.scalapb.descriptors.PRepeated(humanUsers.iterator.map(_.toPMessage).toVector)
        case 15 => _root_.scalapb.descriptors.PRepeated(machineUsers.iterator.map(_.toPMessage).toVector)
        case 16 => _root_.scalapb.descriptors.PRepeated(triggerActions.iterator.map(_.toPMessage).toVector)
        case 17 => _root_.scalapb.descriptors.PRepeated(actions.iterator.map(_.toPMessage).toVector)
        case 18 => _root_.scalapb.descriptors.PRepeated(projectGrants.iterator.map(_.toPMessage).toVector)
        case 19 => _root_.scalapb.descriptors.PRepeated(userGrants.iterator.map(_.toPMessage).toVector)
        case 20 => _root_.scalapb.descriptors.PRepeated(orgMembers.iterator.map(_.toPMessage).toVector)
        case 21 => _root_.scalapb.descriptors.PRepeated(projectMembers.iterator.map(_.toPMessage).toVector)
        case 22 => _root_.scalapb.descriptors.PRepeated(projectGrantMembers.iterator.map(_.toPMessage).toVector)
        case 23 => _root_.scalapb.descriptors.PRepeated(userMetadata.iterator.map(_.toPMessage).toVector)
        case 24 => _root_.scalapb.descriptors.PRepeated(loginTexts.iterator.map(_.toPMessage).toVector)
        case 25 => _root_.scalapb.descriptors.PRepeated(initMessages.iterator.map(_.toPMessage).toVector)
        case 26 => _root_.scalapb.descriptors.PRepeated(passwordResetMessages.iterator.map(_.toPMessage).toVector)
        case 27 => _root_.scalapb.descriptors.PRepeated(verifyEmailMessages.iterator.map(_.toPMessage).toVector)
        case 28 => _root_.scalapb.descriptors.PRepeated(verifyPhoneMessages.iterator.map(_.toPMessage).toVector)
        case 29 => _root_.scalapb.descriptors.PRepeated(domainClaimedMessages.iterator.map(_.toPMessage).toVector)
        case 30 => _root_.scalapb.descriptors.PRepeated(passwordlessRegistrationMessages.iterator.map(_.toPMessage).toVector)
        case 31 => _root_.scalapb.descriptors.PRepeated(oidcIdps.iterator.map(_.toPMessage).toVector)
        case 32 => _root_.scalapb.descriptors.PRepeated(jwtIdps.iterator.map(_.toPMessage).toVector)
        case 33 => _root_.scalapb.descriptors.PRepeated(userLinks.iterator.map(_.toPMessage).toVector)
        case 34 => _root_.scalapb.descriptors.PRepeated(domains.iterator.map(_.toPMessage).toVector)
        case 35 => _root_.scalapb.descriptors.PRepeated(appKeys.iterator.map(_.toPMessage).toVector)
        case 36 => _root_.scalapb.descriptors.PRepeated(machineKeys.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.admin.v1.admin.DataOrg.type = com.zitadel.admin.v1.admin.DataOrg
    // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.DataOrg])
}

object DataOrg extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.DataOrg] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.DataOrg] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.DataOrg = {
    var __orgId: _root_.scala.Predef.String = ""
    var __org: _root_.scala.Option[com.zitadel.management.v1.management.AddOrgRequest] = _root_.scala.None
    var __domainPolicy: _root_.scala.Option[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest] = _root_.scala.None
    var __labelPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest] = _root_.scala.None
    var __lockoutPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest] = _root_.scala.None
    var __loginPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest] = _root_.scala.None
    var __passwordComplexityPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest] = _root_.scala.None
    var __privacyPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest] = _root_.scala.None
    val __projects: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataProject] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataProject]
    val __projectRoles: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectRoleRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectRoleRequest]
    val __apiApps: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAPIApplication] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAPIApplication]
    val __oidcApps: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataOIDCApplication] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataOIDCApplication]
    val __humanUsers: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataHumanUser] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataHumanUser]
    val __machineUsers: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataMachineUser] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataMachineUser]
    val __triggerActions: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetTriggerActionsRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetTriggerActionsRequest]
    val __actions: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAction] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAction]
    val __projectGrants: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataProjectGrant] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataProjectGrant]
    val __userGrants: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddUserGrantRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddUserGrantRequest]
    val __orgMembers: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddOrgMemberRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddOrgMemberRequest]
    val __projectMembers: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectMemberRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectMemberRequest]
    val __projectGrantMembers: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectGrantMemberRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.AddProjectGrantMemberRequest]
    val __userMetadata: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetUserMetadataRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetUserMetadataRequest]
    val __loginTexts: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomLoginTextsRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomLoginTextsRequest]
    val __initMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest]
    val __passwordResetMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest]
    val __verifyEmailMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest]
    val __verifyPhoneMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest]
    val __domainClaimedMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest]
    val __passwordlessRegistrationMessages: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest]
    val __oidcIdps: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataOIDCIDP] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataOIDCIDP]
    val __jwtIdps: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataJWTIDP] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataJWTIDP]
    val __userLinks: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.idp.v1.idp.IDPUserLink] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.idp.v1.idp.IDPUserLink]
    val __domains: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.org.v1.org.Domain] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.org.v1.org.Domain]
    val __appKeys: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAppKey] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataAppKey]
    val __machineKeys: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataMachineKey] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.v1.v1.v1.DataMachineKey]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __orgId = _input__.readStringRequireUtf8()
        case 26 =>
          __org = Option(__org.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddOrgRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __domainPolicy = Option(__domainPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __labelPolicy = Option(__labelPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __lockoutPolicy = Option(__lockoutPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __loginPolicy = Option(__loginPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __passwordComplexityPolicy = Option(__passwordComplexityPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __privacyPolicy = Option(__privacyPolicy.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __projects += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataProject](_input__)
        case 90 =>
          __projectRoles += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddProjectRoleRequest](_input__)
        case 98 =>
          __apiApps += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataAPIApplication](_input__)
        case 106 =>
          __oidcApps += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataOIDCApplication](_input__)
        case 114 =>
          __humanUsers += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataHumanUser](_input__)
        case 122 =>
          __machineUsers += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataMachineUser](_input__)
        case 130 =>
          __triggerActions += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetTriggerActionsRequest](_input__)
        case 138 =>
          __actions += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataAction](_input__)
        case 146 =>
          __projectGrants += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataProjectGrant](_input__)
        case 154 =>
          __userGrants += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddUserGrantRequest](_input__)
        case 162 =>
          __orgMembers += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddOrgMemberRequest](_input__)
        case 170 =>
          __projectMembers += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddProjectMemberRequest](_input__)
        case 178 =>
          __projectGrantMembers += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.AddProjectGrantMemberRequest](_input__)
        case 186 =>
          __userMetadata += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetUserMetadataRequest](_input__)
        case 194 =>
          __loginTexts += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomLoginTextsRequest](_input__)
        case 202 =>
          __initMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest](_input__)
        case 210 =>
          __passwordResetMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest](_input__)
        case 218 =>
          __verifyEmailMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest](_input__)
        case 226 =>
          __verifyPhoneMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest](_input__)
        case 234 =>
          __domainClaimedMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest](_input__)
        case 242 =>
          __passwordlessRegistrationMessages += _root_.scalapb.LiteParser.readMessage[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest](_input__)
        case 250 =>
          __oidcIdps += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataOIDCIDP](_input__)
        case 258 =>
          __jwtIdps += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataJWTIDP](_input__)
        case 266 =>
          __userLinks += _root_.scalapb.LiteParser.readMessage[com.zitadel.idp.v1.idp.IDPUserLink](_input__)
        case 274 =>
          __domains += _root_.scalapb.LiteParser.readMessage[com.zitadel.org.v1.org.Domain](_input__)
        case 282 =>
          __appKeys += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataAppKey](_input__)
        case 290 =>
          __machineKeys += _root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.DataMachineKey](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.admin.v1.admin.DataOrg(
        orgId = __orgId,
        org = __org,
        domainPolicy = __domainPolicy,
        labelPolicy = __labelPolicy,
        lockoutPolicy = __lockoutPolicy,
        loginPolicy = __loginPolicy,
        passwordComplexityPolicy = __passwordComplexityPolicy,
        privacyPolicy = __privacyPolicy,
        projects = __projects.result(),
        projectRoles = __projectRoles.result(),
        apiApps = __apiApps.result(),
        oidcApps = __oidcApps.result(),
        humanUsers = __humanUsers.result(),
        machineUsers = __machineUsers.result(),
        triggerActions = __triggerActions.result(),
        actions = __actions.result(),
        projectGrants = __projectGrants.result(),
        userGrants = __userGrants.result(),
        orgMembers = __orgMembers.result(),
        projectMembers = __projectMembers.result(),
        projectGrantMembers = __projectGrantMembers.result(),
        userMetadata = __userMetadata.result(),
        loginTexts = __loginTexts.result(),
        initMessages = __initMessages.result(),
        passwordResetMessages = __passwordResetMessages.result(),
        verifyEmailMessages = __verifyEmailMessages.result(),
        verifyPhoneMessages = __verifyPhoneMessages.result(),
        domainClaimedMessages = __domainClaimedMessages.result(),
        passwordlessRegistrationMessages = __passwordlessRegistrationMessages.result(),
        oidcIdps = __oidcIdps.result(),
        jwtIdps = __jwtIdps.result(),
        userLinks = __userLinks.result(),
        domains = __domains.result(),
        appKeys = __appKeys.result(),
        machineKeys = __machineKeys.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.DataOrg] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.admin.v1.admin.DataOrg(
        orgId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        org = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddOrgRequest]]),
        domainPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest]]),
        labelPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest]]),
        lockoutPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest]]),
        loginPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest]]),
        passwordComplexityPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest]]),
        privacyPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest]]),
        projects = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataProject]]).getOrElse(_root_.scala.Seq.empty),
        projectRoles = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.AddProjectRoleRequest]]).getOrElse(_root_.scala.Seq.empty),
        apiApps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataAPIApplication]]).getOrElse(_root_.scala.Seq.empty),
        oidcApps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCApplication]]).getOrElse(_root_.scala.Seq.empty),
        humanUsers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataHumanUser]]).getOrElse(_root_.scala.Seq.empty),
        machineUsers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineUser]]).getOrElse(_root_.scala.Seq.empty),
        triggerActions = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetTriggerActionsRequest]]).getOrElse(_root_.scala.Seq.empty),
        actions = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataAction]]).getOrElse(_root_.scala.Seq.empty),
        projectGrants = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataProjectGrant]]).getOrElse(_root_.scala.Seq.empty),
        userGrants = __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.AddUserGrantRequest]]).getOrElse(_root_.scala.Seq.empty),
        orgMembers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.AddOrgMemberRequest]]).getOrElse(_root_.scala.Seq.empty),
        projectMembers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.AddProjectMemberRequest]]).getOrElse(_root_.scala.Seq.empty),
        projectGrantMembers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.AddProjectGrantMemberRequest]]).getOrElse(_root_.scala.Seq.empty),
        userMetadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetUserMetadataRequest]]).getOrElse(_root_.scala.Seq.empty),
        loginTexts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomLoginTextsRequest]]).getOrElse(_root_.scala.Seq.empty),
        initMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        passwordResetMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        verifyEmailMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        verifyPhoneMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        domainClaimedMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        passwordlessRegistrationMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).map(_.as[_root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest]]).getOrElse(_root_.scala.Seq.empty),
        oidcIdps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCIDP]]).getOrElse(_root_.scala.Seq.empty),
        jwtIdps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataJWTIDP]]).getOrElse(_root_.scala.Seq.empty),
        userLinks = __fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).map(_.as[_root_.scala.Seq[com.zitadel.idp.v1.idp.IDPUserLink]]).getOrElse(_root_.scala.Seq.empty),
        domains = __fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).map(_.as[_root_.scala.Seq[com.zitadel.org.v1.org.Domain]]).getOrElse(_root_.scala.Seq.empty),
        appKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(35).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataAppKey]]).getOrElse(_root_.scala.Seq.empty),
        machineKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(36).get).map(_.as[_root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineKey]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(312)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(312)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.zitadel.management.v1.management.AddOrgRequest
      case 4 => __out = com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest
      case 5 => __out = com.zitadel.management.v1.management.AddCustomLabelPolicyRequest
      case 6 => __out = com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest
      case 7 => __out = com.zitadel.management.v1.management.AddCustomLoginPolicyRequest
      case 8 => __out = com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest
      case 9 => __out = com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest
      case 10 => __out = com.zitadel.v1.v1.v1.DataProject
      case 11 => __out = com.zitadel.management.v1.management.AddProjectRoleRequest
      case 12 => __out = com.zitadel.v1.v1.v1.DataAPIApplication
      case 13 => __out = com.zitadel.v1.v1.v1.DataOIDCApplication
      case 14 => __out = com.zitadel.v1.v1.v1.DataHumanUser
      case 15 => __out = com.zitadel.v1.v1.v1.DataMachineUser
      case 16 => __out = com.zitadel.management.v1.management.SetTriggerActionsRequest
      case 17 => __out = com.zitadel.v1.v1.v1.DataAction
      case 18 => __out = com.zitadel.v1.v1.v1.DataProjectGrant
      case 19 => __out = com.zitadel.management.v1.management.AddUserGrantRequest
      case 20 => __out = com.zitadel.management.v1.management.AddOrgMemberRequest
      case 21 => __out = com.zitadel.management.v1.management.AddProjectMemberRequest
      case 22 => __out = com.zitadel.management.v1.management.AddProjectGrantMemberRequest
      case 23 => __out = com.zitadel.management.v1.management.SetUserMetadataRequest
      case 24 => __out = com.zitadel.management.v1.management.SetCustomLoginTextsRequest
      case 25 => __out = com.zitadel.management.v1.management.SetCustomInitMessageTextRequest
      case 26 => __out = com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest
      case 27 => __out = com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest
      case 28 => __out = com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest
      case 29 => __out = com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest
      case 30 => __out = com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest
      case 31 => __out = com.zitadel.v1.v1.v1.DataOIDCIDP
      case 32 => __out = com.zitadel.v1.v1.v1.DataJWTIDP
      case 33 => __out = com.zitadel.idp.v1.idp.IDPUserLink
      case 34 => __out = com.zitadel.org.v1.org.Domain
      case 35 => __out = com.zitadel.v1.v1.v1.DataAppKey
      case 36 => __out = com.zitadel.v1.v1.v1.DataMachineKey
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.admin.v1.admin.DataOrg(
    orgId = "",
    org = _root_.scala.None,
    domainPolicy = _root_.scala.None,
    labelPolicy = _root_.scala.None,
    lockoutPolicy = _root_.scala.None,
    loginPolicy = _root_.scala.None,
    passwordComplexityPolicy = _root_.scala.None,
    privacyPolicy = _root_.scala.None,
    projects = _root_.scala.Seq.empty,
    projectRoles = _root_.scala.Seq.empty,
    apiApps = _root_.scala.Seq.empty,
    oidcApps = _root_.scala.Seq.empty,
    humanUsers = _root_.scala.Seq.empty,
    machineUsers = _root_.scala.Seq.empty,
    triggerActions = _root_.scala.Seq.empty,
    actions = _root_.scala.Seq.empty,
    projectGrants = _root_.scala.Seq.empty,
    userGrants = _root_.scala.Seq.empty,
    orgMembers = _root_.scala.Seq.empty,
    projectMembers = _root_.scala.Seq.empty,
    projectGrantMembers = _root_.scala.Seq.empty,
    userMetadata = _root_.scala.Seq.empty,
    loginTexts = _root_.scala.Seq.empty,
    initMessages = _root_.scala.Seq.empty,
    passwordResetMessages = _root_.scala.Seq.empty,
    verifyEmailMessages = _root_.scala.Seq.empty,
    verifyPhoneMessages = _root_.scala.Seq.empty,
    domainClaimedMessages = _root_.scala.Seq.empty,
    passwordlessRegistrationMessages = _root_.scala.Seq.empty,
    oidcIdps = _root_.scala.Seq.empty,
    jwtIdps = _root_.scala.Seq.empty,
    userLinks = _root_.scala.Seq.empty,
    domains = _root_.scala.Seq.empty,
    appKeys = _root_.scala.Seq.empty,
    machineKeys = _root_.scala.Seq.empty
  )
  implicit class DataOrgLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.DataOrg]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.DataOrg](_l) {
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgId)((c_, f_) => c_.copy(orgId = f_))
    def org: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddOrgRequest] = field(_.getOrg)((c_, f_) => c_.copy(org = Option(f_)))
    def optionalOrg: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddOrgRequest]] = field(_.org)((c_, f_) => c_.copy(org = f_))
    def domainPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest] = field(_.getDomainPolicy)((c_, f_) => c_.copy(domainPolicy = Option(f_)))
    def optionalDomainPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest]] = field(_.domainPolicy)((c_, f_) => c_.copy(domainPolicy = f_))
    def labelPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddCustomLabelPolicyRequest] = field(_.getLabelPolicy)((c_, f_) => c_.copy(labelPolicy = Option(f_)))
    def optionalLabelPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest]] = field(_.labelPolicy)((c_, f_) => c_.copy(labelPolicy = f_))
    def lockoutPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest] = field(_.getLockoutPolicy)((c_, f_) => c_.copy(lockoutPolicy = Option(f_)))
    def optionalLockoutPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest]] = field(_.lockoutPolicy)((c_, f_) => c_.copy(lockoutPolicy = f_))
    def loginPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddCustomLoginPolicyRequest] = field(_.getLoginPolicy)((c_, f_) => c_.copy(loginPolicy = Option(f_)))
    def optionalLoginPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest]] = field(_.loginPolicy)((c_, f_) => c_.copy(loginPolicy = f_))
    def passwordComplexityPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest] = field(_.getPasswordComplexityPolicy)((c_, f_) => c_.copy(passwordComplexityPolicy = Option(f_)))
    def optionalPasswordComplexityPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest]] = field(_.passwordComplexityPolicy)((c_, f_) => c_.copy(passwordComplexityPolicy = f_))
    def privacyPolicy: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest] = field(_.getPrivacyPolicy)((c_, f_) => c_.copy(privacyPolicy = Option(f_)))
    def optionalPrivacyPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest]] = field(_.privacyPolicy)((c_, f_) => c_.copy(privacyPolicy = f_))
    def projects: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProject]] = field(_.projects)((c_, f_) => c_.copy(projects = f_))
    def projectRoles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectRoleRequest]] = field(_.projectRoles)((c_, f_) => c_.copy(projectRoles = f_))
    def apiApps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAPIApplication]] = field(_.apiApps)((c_, f_) => c_.copy(apiApps = f_))
    def oidcApps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCApplication]] = field(_.oidcApps)((c_, f_) => c_.copy(oidcApps = f_))
    def humanUsers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataHumanUser]] = field(_.humanUsers)((c_, f_) => c_.copy(humanUsers = f_))
    def machineUsers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineUser]] = field(_.machineUsers)((c_, f_) => c_.copy(machineUsers = f_))
    def triggerActions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetTriggerActionsRequest]] = field(_.triggerActions)((c_, f_) => c_.copy(triggerActions = f_))
    def actions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAction]] = field(_.actions)((c_, f_) => c_.copy(actions = f_))
    def projectGrants: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProjectGrant]] = field(_.projectGrants)((c_, f_) => c_.copy(projectGrants = f_))
    def userGrants: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.AddUserGrantRequest]] = field(_.userGrants)((c_, f_) => c_.copy(userGrants = f_))
    def orgMembers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.AddOrgMemberRequest]] = field(_.orgMembers)((c_, f_) => c_.copy(orgMembers = f_))
    def projectMembers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectMemberRequest]] = field(_.projectMembers)((c_, f_) => c_.copy(projectMembers = f_))
    def projectGrantMembers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectGrantMemberRequest]] = field(_.projectGrantMembers)((c_, f_) => c_.copy(projectGrantMembers = f_))
    def userMetadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetUserMetadataRequest]] = field(_.userMetadata)((c_, f_) => c_.copy(userMetadata = f_))
    def loginTexts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomLoginTextsRequest]] = field(_.loginTexts)((c_, f_) => c_.copy(loginTexts = f_))
    def initMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest]] = field(_.initMessages)((c_, f_) => c_.copy(initMessages = f_))
    def passwordResetMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest]] = field(_.passwordResetMessages)((c_, f_) => c_.copy(passwordResetMessages = f_))
    def verifyEmailMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest]] = field(_.verifyEmailMessages)((c_, f_) => c_.copy(verifyEmailMessages = f_))
    def verifyPhoneMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest]] = field(_.verifyPhoneMessages)((c_, f_) => c_.copy(verifyPhoneMessages = f_))
    def domainClaimedMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest]] = field(_.domainClaimedMessages)((c_, f_) => c_.copy(domainClaimedMessages = f_))
    def passwordlessRegistrationMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest]] = field(_.passwordlessRegistrationMessages)((c_, f_) => c_.copy(passwordlessRegistrationMessages = f_))
    def oidcIdps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCIDP]] = field(_.oidcIdps)((c_, f_) => c_.copy(oidcIdps = f_))
    def jwtIdps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataJWTIDP]] = field(_.jwtIdps)((c_, f_) => c_.copy(jwtIdps = f_))
    def userLinks: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPUserLink]] = field(_.userLinks)((c_, f_) => c_.copy(userLinks = f_))
    def domains: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.org.v1.org.Domain]] = field(_.domains)((c_, f_) => c_.copy(domains = f_))
    def appKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAppKey]] = field(_.appKeys)((c_, f_) => c_.copy(appKeys = f_))
    def machineKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineKey]] = field(_.machineKeys)((c_, f_) => c_.copy(machineKeys = f_))
  }
  final val ORG_ID_FIELD_NUMBER = 1
  final val ORG_FIELD_NUMBER = 3
  final val DOMAIN_POLICY_FIELD_NUMBER = 4
  final val LABEL_POLICY_FIELD_NUMBER = 5
  final val LOCKOUT_POLICY_FIELD_NUMBER = 6
  final val LOGIN_POLICY_FIELD_NUMBER = 7
  final val PASSWORD_COMPLEXITY_POLICY_FIELD_NUMBER = 8
  final val PRIVACY_POLICY_FIELD_NUMBER = 9
  final val PROJECTS_FIELD_NUMBER = 10
  final val PROJECT_ROLES_FIELD_NUMBER = 11
  final val API_APPS_FIELD_NUMBER = 12
  final val OIDC_APPS_FIELD_NUMBER = 13
  final val HUMAN_USERS_FIELD_NUMBER = 14
  final val MACHINE_USERS_FIELD_NUMBER = 15
  final val TRIGGER_ACTIONS_FIELD_NUMBER = 16
  final val ACTIONS_FIELD_NUMBER = 17
  final val PROJECT_GRANTS_FIELD_NUMBER = 18
  final val USER_GRANTS_FIELD_NUMBER = 19
  final val ORG_MEMBERS_FIELD_NUMBER = 20
  final val PROJECT_MEMBERS_FIELD_NUMBER = 21
  final val PROJECT_GRANT_MEMBERS_FIELD_NUMBER = 22
  final val USER_METADATA_FIELD_NUMBER = 23
  final val LOGIN_TEXTS_FIELD_NUMBER = 24
  final val INIT_MESSAGES_FIELD_NUMBER = 25
  final val PASSWORD_RESET_MESSAGES_FIELD_NUMBER = 26
  final val VERIFY_EMAIL_MESSAGES_FIELD_NUMBER = 27
  final val VERIFY_PHONE_MESSAGES_FIELD_NUMBER = 28
  final val DOMAIN_CLAIMED_MESSAGES_FIELD_NUMBER = 29
  final val PASSWORDLESS_REGISTRATION_MESSAGES_FIELD_NUMBER = 30
  final val OIDC_IDPS_FIELD_NUMBER = 31
  final val JWT_IDPS_FIELD_NUMBER = 32
  final val USER_LINKS_FIELD_NUMBER = 33
  final val DOMAINS_FIELD_NUMBER = 34
  final val APP_KEYS_FIELD_NUMBER = 35
  final val MACHINE_KEYS_FIELD_NUMBER = 36
  def of(
    orgId: _root_.scala.Predef.String,
    org: _root_.scala.Option[com.zitadel.management.v1.management.AddOrgRequest],
    domainPolicy: _root_.scala.Option[com.zitadel.admin.v1.admin.AddCustomDomainPolicyRequest],
    labelPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLabelPolicyRequest],
    lockoutPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLockoutPolicyRequest],
    loginPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomLoginPolicyRequest],
    passwordComplexityPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPasswordComplexityPolicyRequest],
    privacyPolicy: _root_.scala.Option[com.zitadel.management.v1.management.AddCustomPrivacyPolicyRequest],
    projects: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProject],
    projectRoles: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectRoleRequest],
    apiApps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAPIApplication],
    oidcApps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCApplication],
    humanUsers: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataHumanUser],
    machineUsers: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineUser],
    triggerActions: _root_.scala.Seq[com.zitadel.management.v1.management.SetTriggerActionsRequest],
    actions: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAction],
    projectGrants: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataProjectGrant],
    userGrants: _root_.scala.Seq[com.zitadel.management.v1.management.AddUserGrantRequest],
    orgMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddOrgMemberRequest],
    projectMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectMemberRequest],
    projectGrantMembers: _root_.scala.Seq[com.zitadel.management.v1.management.AddProjectGrantMemberRequest],
    userMetadata: _root_.scala.Seq[com.zitadel.management.v1.management.SetUserMetadataRequest],
    loginTexts: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomLoginTextsRequest],
    initMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomInitMessageTextRequest],
    passwordResetMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordResetMessageTextRequest],
    verifyEmailMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyEmailMessageTextRequest],
    verifyPhoneMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomVerifyPhoneMessageTextRequest],
    domainClaimedMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomDomainClaimedMessageTextRequest],
    passwordlessRegistrationMessages: _root_.scala.Seq[com.zitadel.management.v1.management.SetCustomPasswordlessRegistrationMessageTextRequest],
    oidcIdps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataOIDCIDP],
    jwtIdps: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataJWTIDP],
    userLinks: _root_.scala.Seq[com.zitadel.idp.v1.idp.IDPUserLink],
    domains: _root_.scala.Seq[com.zitadel.org.v1.org.Domain],
    appKeys: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataAppKey],
    machineKeys: _root_.scala.Seq[com.zitadel.v1.v1.v1.DataMachineKey]
  ): _root_.com.zitadel.admin.v1.admin.DataOrg = _root_.com.zitadel.admin.v1.admin.DataOrg(
    orgId,
    org,
    domainPolicy,
    labelPolicy,
    lockoutPolicy,
    loginPolicy,
    passwordComplexityPolicy,
    privacyPolicy,
    projects,
    projectRoles,
    apiApps,
    oidcApps,
    humanUsers,
    machineUsers,
    triggerActions,
    actions,
    projectGrants,
    userGrants,
    orgMembers,
    projectMembers,
    projectGrantMembers,
    userMetadata,
    loginTexts,
    initMessages,
    passwordResetMessages,
    verifyEmailMessages,
    verifyPhoneMessages,
    domainClaimedMessages,
    passwordlessRegistrationMessages,
    oidcIdps,
    jwtIdps,
    userLinks,
    domains,
    appKeys,
    machineKeys
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.DataOrg])
}
