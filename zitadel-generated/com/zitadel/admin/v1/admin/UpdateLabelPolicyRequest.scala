// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.admin.v1.admin

@SerialVersionUID(0L)
final case class UpdateLabelPolicyRequest(
    primaryColor: _root_.scala.Predef.String = "",
    hideLoginNameSuffix: _root_.scala.Boolean = false,
    warnColor: _root_.scala.Predef.String = "",
    backgroundColor: _root_.scala.Predef.String = "",
    fontColor: _root_.scala.Predef.String = "",
    primaryColorDark: _root_.scala.Predef.String = "",
    backgroundColorDark: _root_.scala.Predef.String = "",
    warnColorDark: _root_.scala.Predef.String = "",
    fontColorDark: _root_.scala.Predef.String = "",
    disableWatermark: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[UpdateLabelPolicyRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = primaryColor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = hideLoginNameSuffix
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = warnColor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = backgroundColor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = fontColor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = primaryColorDark
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = backgroundColorDark
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      
      {
        val __value = warnColorDark
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      
      {
        val __value = fontColorDark
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = disableWatermark
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = primaryColor
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = hideLoginNameSuffix
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = warnColor
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = backgroundColor
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = fontColor
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = primaryColorDark
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = backgroundColorDark
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = warnColorDark
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = fontColorDark
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = disableWatermark
        if (__v != false) {
          _output__.writeBool(11, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withPrimaryColor(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(primaryColor = __v)
    def withHideLoginNameSuffix(__v: _root_.scala.Boolean): UpdateLabelPolicyRequest = copy(hideLoginNameSuffix = __v)
    def withWarnColor(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(warnColor = __v)
    def withBackgroundColor(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(backgroundColor = __v)
    def withFontColor(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(fontColor = __v)
    def withPrimaryColorDark(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(primaryColorDark = __v)
    def withBackgroundColorDark(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(backgroundColorDark = __v)
    def withWarnColorDark(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(warnColorDark = __v)
    def withFontColorDark(__v: _root_.scala.Predef.String): UpdateLabelPolicyRequest = copy(fontColorDark = __v)
    def withDisableWatermark(__v: _root_.scala.Boolean): UpdateLabelPolicyRequest = copy(disableWatermark = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = primaryColor
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = hideLoginNameSuffix
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = warnColor
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = backgroundColor
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = fontColor
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = primaryColorDark
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = backgroundColorDark
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = warnColorDark
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = fontColorDark
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = disableWatermark
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(primaryColor)
        case 3 => _root_.scalapb.descriptors.PBoolean(hideLoginNameSuffix)
        case 4 => _root_.scalapb.descriptors.PString(warnColor)
        case 5 => _root_.scalapb.descriptors.PString(backgroundColor)
        case 6 => _root_.scalapb.descriptors.PString(fontColor)
        case 7 => _root_.scalapb.descriptors.PString(primaryColorDark)
        case 8 => _root_.scalapb.descriptors.PString(backgroundColorDark)
        case 9 => _root_.scalapb.descriptors.PString(warnColorDark)
        case 10 => _root_.scalapb.descriptors.PString(fontColorDark)
        case 11 => _root_.scalapb.descriptors.PBoolean(disableWatermark)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest.type = com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.UpdateLabelPolicyRequest])
}

object UpdateLabelPolicyRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest = {
    var __primaryColor: _root_.scala.Predef.String = ""
    var __hideLoginNameSuffix: _root_.scala.Boolean = false
    var __warnColor: _root_.scala.Predef.String = ""
    var __backgroundColor: _root_.scala.Predef.String = ""
    var __fontColor: _root_.scala.Predef.String = ""
    var __primaryColorDark: _root_.scala.Predef.String = ""
    var __backgroundColorDark: _root_.scala.Predef.String = ""
    var __warnColorDark: _root_.scala.Predef.String = ""
    var __fontColorDark: _root_.scala.Predef.String = ""
    var __disableWatermark: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __primaryColor = _input__.readStringRequireUtf8()
        case 24 =>
          __hideLoginNameSuffix = _input__.readBool()
        case 34 =>
          __warnColor = _input__.readStringRequireUtf8()
        case 42 =>
          __backgroundColor = _input__.readStringRequireUtf8()
        case 50 =>
          __fontColor = _input__.readStringRequireUtf8()
        case 58 =>
          __primaryColorDark = _input__.readStringRequireUtf8()
        case 66 =>
          __backgroundColorDark = _input__.readStringRequireUtf8()
        case 74 =>
          __warnColorDark = _input__.readStringRequireUtf8()
        case 82 =>
          __fontColorDark = _input__.readStringRequireUtf8()
        case 88 =>
          __disableWatermark = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest(
        primaryColor = __primaryColor,
        hideLoginNameSuffix = __hideLoginNameSuffix,
        warnColor = __warnColor,
        backgroundColor = __backgroundColor,
        fontColor = __fontColor,
        primaryColorDark = __primaryColorDark,
        backgroundColorDark = __backgroundColorDark,
        warnColorDark = __warnColorDark,
        fontColorDark = __fontColorDark,
        disableWatermark = __disableWatermark,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest(
        primaryColor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        hideLoginNameSuffix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        warnColor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        backgroundColor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        fontColor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        primaryColorDark = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        backgroundColorDark = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        warnColorDark = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        fontColorDark = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        disableWatermark = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(170)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(170)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest(
    primaryColor = "",
    hideLoginNameSuffix = false,
    warnColor = "",
    backgroundColor = "",
    fontColor = "",
    primaryColorDark = "",
    backgroundColorDark = "",
    warnColorDark = "",
    fontColorDark = "",
    disableWatermark = false
  )
  implicit class UpdateLabelPolicyRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest](_l) {
    def primaryColor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.primaryColor)((c_, f_) => c_.copy(primaryColor = f_))
    def hideLoginNameSuffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.hideLoginNameSuffix)((c_, f_) => c_.copy(hideLoginNameSuffix = f_))
    def warnColor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.warnColor)((c_, f_) => c_.copy(warnColor = f_))
    def backgroundColor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.backgroundColor)((c_, f_) => c_.copy(backgroundColor = f_))
    def fontColor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fontColor)((c_, f_) => c_.copy(fontColor = f_))
    def primaryColorDark: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.primaryColorDark)((c_, f_) => c_.copy(primaryColorDark = f_))
    def backgroundColorDark: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.backgroundColorDark)((c_, f_) => c_.copy(backgroundColorDark = f_))
    def warnColorDark: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.warnColorDark)((c_, f_) => c_.copy(warnColorDark = f_))
    def fontColorDark: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fontColorDark)((c_, f_) => c_.copy(fontColorDark = f_))
    def disableWatermark: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.disableWatermark)((c_, f_) => c_.copy(disableWatermark = f_))
  }
  final val PRIMARY_COLOR_FIELD_NUMBER = 1
  final val HIDE_LOGIN_NAME_SUFFIX_FIELD_NUMBER = 3
  final val WARN_COLOR_FIELD_NUMBER = 4
  final val BACKGROUND_COLOR_FIELD_NUMBER = 5
  final val FONT_COLOR_FIELD_NUMBER = 6
  final val PRIMARY_COLOR_DARK_FIELD_NUMBER = 7
  final val BACKGROUND_COLOR_DARK_FIELD_NUMBER = 8
  final val WARN_COLOR_DARK_FIELD_NUMBER = 9
  final val FONT_COLOR_DARK_FIELD_NUMBER = 10
  final val DISABLE_WATERMARK_FIELD_NUMBER = 11
  def of(
    primaryColor: _root_.scala.Predef.String,
    hideLoginNameSuffix: _root_.scala.Boolean,
    warnColor: _root_.scala.Predef.String,
    backgroundColor: _root_.scala.Predef.String,
    fontColor: _root_.scala.Predef.String,
    primaryColorDark: _root_.scala.Predef.String,
    backgroundColorDark: _root_.scala.Predef.String,
    warnColorDark: _root_.scala.Predef.String,
    fontColorDark: _root_.scala.Predef.String,
    disableWatermark: _root_.scala.Boolean
  ): _root_.com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest = _root_.com.zitadel.admin.v1.admin.UpdateLabelPolicyRequest(
    primaryColor,
    hideLoginNameSuffix,
    warnColor,
    backgroundColor,
    fontColor,
    primaryColorDark,
    backgroundColorDark,
    warnColorDark,
    fontColorDark,
    disableWatermark
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.UpdateLabelPolicyRequest])
}
