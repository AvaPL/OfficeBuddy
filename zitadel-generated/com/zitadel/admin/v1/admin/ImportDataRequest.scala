// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.admin.v1.admin

@SerialVersionUID(0L)
final case class ImportDataRequest(
    data: com.zitadel.admin.v1.admin.ImportDataRequest.Data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.Empty,
    timeout: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ImportDataRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (data.dataOrgs.isDefined) {
        val __value = data.dataOrgs.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsv1.isDefined) {
        val __value = data.dataOrgsv1.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsLocal.isDefined) {
        val __value = data.dataOrgsLocal.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsv1Local.isDefined) {
        val __value = data.dataOrgsv1Local.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsS3.isDefined) {
        val __value = data.dataOrgsS3.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsv1S3.isDefined) {
        val __value = data.dataOrgsv1S3.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsGcs.isDefined) {
        val __value = data.dataOrgsGcs.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.dataOrgsv1Gcs.isDefined) {
        val __value = data.dataOrgsv1Gcs.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = timeout
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      data.dataOrgs.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsv1.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsLocal.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsv1Local.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsS3.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsv1S3.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsGcs.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.dataOrgsv1Gcs.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = timeout
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getDataOrgs: com.zitadel.admin.v1.admin.ImportDataOrg = data.dataOrgs.getOrElse(com.zitadel.admin.v1.admin.ImportDataOrg.defaultInstance)
    def withDataOrgs(__v: com.zitadel.admin.v1.admin.ImportDataOrg): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgs(__v))
    def getDataOrgsv1: com.zitadel.v1.v1.v1.ImportDataOrg = data.dataOrgsv1.getOrElse(com.zitadel.v1.v1.v1.ImportDataOrg.defaultInstance)
    def withDataOrgsv1(__v: com.zitadel.v1.v1.v1.ImportDataOrg): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1(__v))
    def getDataOrgsLocal: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput = data.dataOrgsLocal.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput.defaultInstance)
    def withDataOrgsLocal(__v: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsLocal(__v))
    def getDataOrgsv1Local: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput = data.dataOrgsv1Local.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput.defaultInstance)
    def withDataOrgsv1Local(__v: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Local(__v))
    def getDataOrgsS3: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input = data.dataOrgsS3.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.S3Input.defaultInstance)
    def withDataOrgsS3(__v: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsS3(__v))
    def getDataOrgsv1S3: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input = data.dataOrgsv1S3.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.S3Input.defaultInstance)
    def withDataOrgsv1S3(__v: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1S3(__v))
    def getDataOrgsGcs: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput = data.dataOrgsGcs.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput.defaultInstance)
    def withDataOrgsGcs(__v: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsGcs(__v))
    def getDataOrgsv1Gcs: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput = data.dataOrgsv1Gcs.getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput.defaultInstance)
    def withDataOrgsv1Gcs(__v: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput): ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Gcs(__v))
    def withTimeout(__v: _root_.scala.Predef.String): ImportDataRequest = copy(timeout = __v)
    def clearData: ImportDataRequest = copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.Empty)
    def withData(__v: com.zitadel.admin.v1.admin.ImportDataRequest.Data): ImportDataRequest = copy(data = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => data.dataOrgs.orNull
        case 2 => data.dataOrgsv1.orNull
        case 3 => data.dataOrgsLocal.orNull
        case 4 => data.dataOrgsv1Local.orNull
        case 5 => data.dataOrgsS3.orNull
        case 6 => data.dataOrgsv1S3.orNull
        case 7 => data.dataOrgsGcs.orNull
        case 8 => data.dataOrgsv1Gcs.orNull
        case 9 => {
          val __t = timeout
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => data.dataOrgs.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => data.dataOrgsv1.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => data.dataOrgsLocal.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => data.dataOrgsv1Local.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => data.dataOrgsS3.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => data.dataOrgsv1S3.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => data.dataOrgsGcs.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => data.dataOrgsv1Gcs.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => _root_.scalapb.descriptors.PString(timeout)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.admin.v1.admin.ImportDataRequest.type = com.zitadel.admin.v1.admin.ImportDataRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.ImportDataRequest])
}

object ImportDataRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.ImportDataRequest = {
    var __timeout: _root_.scala.Predef.String = ""
    var __data: com.zitadel.admin.v1.admin.ImportDataRequest.Data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgs(__data.dataOrgs.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataOrg](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1(__data.dataOrgsv1.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.v1.v1.ImportDataOrg](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsLocal(__data.dataOrgsLocal.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Local(__data.dataOrgsv1Local.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsS3(__data.dataOrgsS3.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1S3(__data.dataOrgsv1S3.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsGcs(__data.dataOrgsGcs.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Gcs(__data.dataOrgsv1Gcs.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __timeout = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.admin.v1.admin.ImportDataRequest(
        timeout = __timeout,
        data = __data,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.ImportDataRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.admin.v1.admin.ImportDataRequest(
        timeout = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataOrg]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgs(_))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.v1.v1.ImportDataOrg]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsLocal(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Local(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsS3(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1S3(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsGcs(_)))
            .orElse[com.zitadel.admin.v1.admin.ImportDataRequest.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput]]).map(com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Gcs(_)))
            .getOrElse(com.zitadel.admin.v1.admin.ImportDataRequest.Data.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(310)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(310)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.admin.v1.admin.ImportDataOrg
      case 2 => __out = com.zitadel.v1.v1.v1.ImportDataOrg
      case 3 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput
      case 4 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput
      case 5 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input
      case 6 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input
      case 7 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
      case 8 => __out = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput,
      _root_.com.zitadel.admin.v1.admin.ImportDataRequest.S3Input,
      _root_.com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.admin.v1.admin.ImportDataRequest(
    timeout = "",
    data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.Empty
  )
  sealed trait Data extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isDataOrgs: _root_.scala.Boolean = false
    def isDataOrgsv1: _root_.scala.Boolean = false
    def isDataOrgsLocal: _root_.scala.Boolean = false
    def isDataOrgsv1Local: _root_.scala.Boolean = false
    def isDataOrgsS3: _root_.scala.Boolean = false
    def isDataOrgsv1S3: _root_.scala.Boolean = false
    def isDataOrgsGcs: _root_.scala.Boolean = false
    def isDataOrgsv1Gcs: _root_.scala.Boolean = false
    def dataOrgs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataOrg] = _root_.scala.None
    def dataOrgsv1: _root_.scala.Option[com.zitadel.v1.v1.v1.ImportDataOrg] = _root_.scala.None
    def dataOrgsLocal: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = _root_.scala.None
    def dataOrgsv1Local: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = _root_.scala.None
    def dataOrgsS3: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = _root_.scala.None
    def dataOrgsv1S3: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = _root_.scala.None
    def dataOrgsGcs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = _root_.scala.None
    def dataOrgsv1Gcs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = _root_.scala.None
  }
  object Data {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class DataOrgs(value: com.zitadel.admin.v1.admin.ImportDataOrg) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataOrg
      override def isDataOrgs: _root_.scala.Boolean = true
      override def dataOrgs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataOrg] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class DataOrgsv1(value: com.zitadel.v1.v1.v1.ImportDataOrg) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.v1.v1.v1.ImportDataOrg
      override def isDataOrgsv1: _root_.scala.Boolean = true
      override def dataOrgsv1: _root_.scala.Option[com.zitadel.v1.v1.v1.ImportDataOrg] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class DataOrgsLocal(value: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput
      override def isDataOrgsLocal: _root_.scala.Boolean = true
      override def dataOrgsLocal: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class DataOrgsv1Local(value: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput
      override def isDataOrgsv1Local: _root_.scala.Boolean = true
      override def dataOrgsv1Local: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class DataOrgsS3(value: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input
      override def isDataOrgsS3: _root_.scala.Boolean = true
      override def dataOrgsS3: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class DataOrgsv1S3(value: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input
      override def isDataOrgsv1S3: _root_.scala.Boolean = true
      override def dataOrgsv1S3: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class DataOrgsGcs(value: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
      override def isDataOrgsGcs: _root_.scala.Boolean = true
      override def dataOrgsGcs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class DataOrgsv1Gcs(value: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput) extends com.zitadel.admin.v1.admin.ImportDataRequest.Data {
      type ValueType = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
      override def isDataOrgsv1Gcs: _root_.scala.Boolean = true
      override def dataOrgsv1Gcs: _root_.scala.Option[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = Some(value)
      override def number: _root_.scala.Int = 8
    }
  }
  @SerialVersionUID(0L)
  final case class LocalInput(
      path: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[LocalInput] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = path
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = path
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPath(__v: _root_.scala.Predef.String): LocalInput = copy(path = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = path
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(path)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput.type = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput
      // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.ImportDataRequest.LocalInput])
  }
  
  object LocalInput extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput = {
      var __path: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __path = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput(
          path = __path,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput(
          path = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput(
      path = ""
    )
    implicit class LocalInputLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput](_l) {
      def path: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.path)((c_, f_) => c_.copy(path = f_))
    }
    final val PATH_FIELD_NUMBER = 1
    def of(
      path: _root_.scala.Predef.String
    ): _root_.com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput = _root_.com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput(
      path
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.ImportDataRequest.LocalInput])
  }
  
  @SerialVersionUID(0L)
  final case class S3Input(
      path: _root_.scala.Predef.String = "",
      endpoint: _root_.scala.Predef.String = "",
      accessKeyId: _root_.scala.Predef.String = "",
      secretAccessKey: _root_.scala.Predef.String = "",
      ssl: _root_.scala.Boolean = false,
      bucket: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[S3Input] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = path
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = endpoint
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = accessKeyId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        
        {
          val __value = secretAccessKey
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        
        {
          val __value = ssl
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
          }
        };
        
        {
          val __value = bucket
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = path
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = endpoint
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = accessKeyId
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        {
          val __v = secretAccessKey
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = ssl
          if (__v != false) {
            _output__.writeBool(5, __v)
          }
        };
        {
          val __v = bucket
          if (!__v.isEmpty) {
            _output__.writeString(6, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPath(__v: _root_.scala.Predef.String): S3Input = copy(path = __v)
      def withEndpoint(__v: _root_.scala.Predef.String): S3Input = copy(endpoint = __v)
      def withAccessKeyId(__v: _root_.scala.Predef.String): S3Input = copy(accessKeyId = __v)
      def withSecretAccessKey(__v: _root_.scala.Predef.String): S3Input = copy(secretAccessKey = __v)
      def withSsl(__v: _root_.scala.Boolean): S3Input = copy(ssl = __v)
      def withBucket(__v: _root_.scala.Predef.String): S3Input = copy(bucket = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = path
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = endpoint
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = accessKeyId
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = secretAccessKey
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = ssl
            if (__t != false) __t else null
          }
          case 6 => {
            val __t = bucket
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(path)
          case 2 => _root_.scalapb.descriptors.PString(endpoint)
          case 3 => _root_.scalapb.descriptors.PString(accessKeyId)
          case 4 => _root_.scalapb.descriptors.PString(secretAccessKey)
          case 5 => _root_.scalapb.descriptors.PBoolean(ssl)
          case 6 => _root_.scalapb.descriptors.PString(bucket)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.admin.v1.admin.ImportDataRequest.S3Input.type = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input
      // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.ImportDataRequest.S3Input])
  }
  
  object S3Input extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.ImportDataRequest.S3Input = {
      var __path: _root_.scala.Predef.String = ""
      var __endpoint: _root_.scala.Predef.String = ""
      var __accessKeyId: _root_.scala.Predef.String = ""
      var __secretAccessKey: _root_.scala.Predef.String = ""
      var __ssl: _root_.scala.Boolean = false
      var __bucket: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __path = _input__.readStringRequireUtf8()
          case 18 =>
            __endpoint = _input__.readStringRequireUtf8()
          case 26 =>
            __accessKeyId = _input__.readStringRequireUtf8()
          case 34 =>
            __secretAccessKey = _input__.readStringRequireUtf8()
          case 40 =>
            __ssl = _input__.readBool()
          case 50 =>
            __bucket = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.admin.v1.admin.ImportDataRequest.S3Input(
          path = __path,
          endpoint = __endpoint,
          accessKeyId = __accessKeyId,
          secretAccessKey = __secretAccessKey,
          ssl = __ssl,
          bucket = __bucket,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.admin.v1.admin.ImportDataRequest.S3Input(
          path = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          endpoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          accessKeyId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          secretAccessKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          ssl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
          bucket = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.admin.v1.admin.ImportDataRequest.S3Input(
      path = "",
      endpoint = "",
      accessKeyId = "",
      secretAccessKey = "",
      ssl = false,
      bucket = ""
    )
    implicit class S3InputLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.S3Input]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.S3Input](_l) {
      def path: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.path)((c_, f_) => c_.copy(path = f_))
      def endpoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.endpoint)((c_, f_) => c_.copy(endpoint = f_))
      def accessKeyId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.accessKeyId)((c_, f_) => c_.copy(accessKeyId = f_))
      def secretAccessKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.secretAccessKey)((c_, f_) => c_.copy(secretAccessKey = f_))
      def ssl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.ssl)((c_, f_) => c_.copy(ssl = f_))
      def bucket: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.bucket)((c_, f_) => c_.copy(bucket = f_))
    }
    final val PATH_FIELD_NUMBER = 1
    final val ENDPOINT_FIELD_NUMBER = 2
    final val ACCESS_KEY_ID_FIELD_NUMBER = 3
    final val SECRET_ACCESS_KEY_FIELD_NUMBER = 4
    final val SSL_FIELD_NUMBER = 5
    final val BUCKET_FIELD_NUMBER = 6
    def of(
      path: _root_.scala.Predef.String,
      endpoint: _root_.scala.Predef.String,
      accessKeyId: _root_.scala.Predef.String,
      secretAccessKey: _root_.scala.Predef.String,
      ssl: _root_.scala.Boolean,
      bucket: _root_.scala.Predef.String
    ): _root_.com.zitadel.admin.v1.admin.ImportDataRequest.S3Input = _root_.com.zitadel.admin.v1.admin.ImportDataRequest.S3Input(
      path,
      endpoint,
      accessKeyId,
      secretAccessKey,
      ssl,
      bucket
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.ImportDataRequest.S3Input])
  }
  
  @SerialVersionUID(0L)
  final case class GCSInput(
      bucket: _root_.scala.Predef.String = "",
      serviceaccountJson: _root_.scala.Predef.String = "",
      path: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GCSInput] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = bucket
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = serviceaccountJson
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = path
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = bucket
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = serviceaccountJson
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = path
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withBucket(__v: _root_.scala.Predef.String): GCSInput = copy(bucket = __v)
      def withServiceaccountJson(__v: _root_.scala.Predef.String): GCSInput = copy(serviceaccountJson = __v)
      def withPath(__v: _root_.scala.Predef.String): GCSInput = copy(path = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = bucket
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = serviceaccountJson
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = path
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(bucket)
          case 2 => _root_.scalapb.descriptors.PString(serviceaccountJson)
          case 3 => _root_.scalapb.descriptors.PString(path)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput.type = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput
      // @@protoc_insertion_point(GeneratedMessage[zitadel.admin.v1.ImportDataRequest.GCSInput])
  }
  
  object GCSInput extends scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput = {
      var __bucket: _root_.scala.Predef.String = ""
      var __serviceaccountJson: _root_.scala.Predef.String = ""
      var __path: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __bucket = _input__.readStringRequireUtf8()
          case 18 =>
            __serviceaccountJson = _input__.readStringRequireUtf8()
          case 26 =>
            __path = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput(
          bucket = __bucket,
          serviceaccountJson = __serviceaccountJson,
          path = __path,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput(
          bucket = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          serviceaccountJson = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          path = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.admin.v1.admin.ImportDataRequest.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput(
      bucket = "",
      serviceaccountJson = "",
      path = ""
    )
    implicit class GCSInputLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput](_l) {
      def bucket: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.bucket)((c_, f_) => c_.copy(bucket = f_))
      def serviceaccountJson: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.serviceaccountJson)((c_, f_) => c_.copy(serviceaccountJson = f_))
      def path: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.path)((c_, f_) => c_.copy(path = f_))
    }
    final val BUCKET_FIELD_NUMBER = 1
    final val SERVICEACCOUNT_JSON_FIELD_NUMBER = 2
    final val PATH_FIELD_NUMBER = 3
    def of(
      bucket: _root_.scala.Predef.String,
      serviceaccountJson: _root_.scala.Predef.String,
      path: _root_.scala.Predef.String
    ): _root_.com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput = _root_.com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput(
      bucket,
      serviceaccountJson,
      path
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.ImportDataRequest.GCSInput])
  }
  
  implicit class ImportDataRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest](_l) {
    def dataOrgs: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataOrg] = field(_.getDataOrgs)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgs(f_)))
    def dataOrgsv1: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.v1.v1.ImportDataOrg] = field(_.getDataOrgsv1)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1(f_)))
    def dataOrgsLocal: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = field(_.getDataOrgsLocal)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsLocal(f_)))
    def dataOrgsv1Local: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.LocalInput] = field(_.getDataOrgsv1Local)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Local(f_)))
    def dataOrgsS3: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = field(_.getDataOrgsS3)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsS3(f_)))
    def dataOrgsv1S3: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.S3Input] = field(_.getDataOrgsv1S3)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1S3(f_)))
    def dataOrgsGcs: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = field(_.getDataOrgsGcs)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsGcs(f_)))
    def dataOrgsv1Gcs: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.GCSInput] = field(_.getDataOrgsv1Gcs)((c_, f_) => c_.copy(data = com.zitadel.admin.v1.admin.ImportDataRequest.Data.DataOrgsv1Gcs(f_)))
    def timeout: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.timeout)((c_, f_) => c_.copy(timeout = f_))
    def data: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.admin.v1.admin.ImportDataRequest.Data] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val DATA_ORGS_FIELD_NUMBER = 1
  final val DATA_ORGSV1_FIELD_NUMBER = 2
  final val DATA_ORGS_LOCAL_FIELD_NUMBER = 3
  final val DATA_ORGSV1_LOCAL_FIELD_NUMBER = 4
  final val DATA_ORGS_S3_FIELD_NUMBER = 5
  final val DATA_ORGSV1_S3_FIELD_NUMBER = 6
  final val DATA_ORGS_GCS_FIELD_NUMBER = 7
  final val DATA_ORGSV1_GCS_FIELD_NUMBER = 8
  final val TIMEOUT_FIELD_NUMBER = 9
  def of(
    data: com.zitadel.admin.v1.admin.ImportDataRequest.Data,
    timeout: _root_.scala.Predef.String
  ): _root_.com.zitadel.admin.v1.admin.ImportDataRequest = _root_.com.zitadel.admin.v1.admin.ImportDataRequest(
    data,
    timeout
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.admin.v1.ImportDataRequest])
}
