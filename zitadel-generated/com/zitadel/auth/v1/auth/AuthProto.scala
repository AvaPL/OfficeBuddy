// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.auth.v1.auth

object AuthProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.zitadel.user.v1.user.UserProto,
    com.zitadel.org.v1.org.OrgProto,
    com.zitadel.change.v1.change.ChangeProto,
    com.zitadel.v1.`object`.ObjectProto,
    com.zitadel.v1.options.OptionsProto,
    com.zitadel.policy.v1.policy.PolicyProto,
    com.zitadel.idp.v1.idp.IdpProto,
    com.zitadel.metadata.v1.metadata.MetadataProto,
    com.validate.validate.ValidateProto,
    com.google.api.annotations.AnnotationsProto,
    com.google.api.field_behavior.FieldBehaviorProto,
    com.google.protobuf.duration.DurationProto,
    com.google.protobuf.timestamp.TimestampProto,
    com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      com.zitadel.auth.v1.auth.HealthzRequest,
      com.zitadel.auth.v1.auth.HealthzResponse,
      com.zitadel.auth.v1.auth.GetSupportedLanguagesRequest,
      com.zitadel.auth.v1.auth.GetSupportedLanguagesResponse,
      com.zitadel.auth.v1.auth.GetMyUserRequest,
      com.zitadel.auth.v1.auth.GetMyUserResponse,
      com.zitadel.auth.v1.auth.RemoveMyUserRequest,
      com.zitadel.auth.v1.auth.RemoveMyUserResponse,
      com.zitadel.auth.v1.auth.ListMyUserChangesRequest,
      com.zitadel.auth.v1.auth.ListMyUserChangesResponse,
      com.zitadel.auth.v1.auth.ListMyUserSessionsRequest,
      com.zitadel.auth.v1.auth.ListMyUserSessionsResponse,
      com.zitadel.auth.v1.auth.ListMyMetadataRequest,
      com.zitadel.auth.v1.auth.ListMyMetadataResponse,
      com.zitadel.auth.v1.auth.GetMyMetadataRequest,
      com.zitadel.auth.v1.auth.GetMyMetadataResponse,
      com.zitadel.auth.v1.auth.SetMyMetadataRequest,
      com.zitadel.auth.v1.auth.SetMyMetadataResponse,
      com.zitadel.auth.v1.auth.BulkSetMyMetadataRequest,
      com.zitadel.auth.v1.auth.BulkSetMyMetadataResponse,
      com.zitadel.auth.v1.auth.RemoveMyMetadataRequest,
      com.zitadel.auth.v1.auth.RemoveMyMetadataResponse,
      com.zitadel.auth.v1.auth.BulkRemoveMyMetadataRequest,
      com.zitadel.auth.v1.auth.BulkRemoveMyMetadataResponse,
      com.zitadel.auth.v1.auth.ListMyRefreshTokensRequest,
      com.zitadel.auth.v1.auth.ListMyRefreshTokensResponse,
      com.zitadel.auth.v1.auth.RevokeMyRefreshTokenRequest,
      com.zitadel.auth.v1.auth.RevokeMyRefreshTokenResponse,
      com.zitadel.auth.v1.auth.RevokeAllMyRefreshTokensRequest,
      com.zitadel.auth.v1.auth.RevokeAllMyRefreshTokensResponse,
      com.zitadel.auth.v1.auth.UpdateMyUserNameRequest,
      com.zitadel.auth.v1.auth.UpdateMyUserNameResponse,
      com.zitadel.auth.v1.auth.GetMyPasswordComplexityPolicyRequest,
      com.zitadel.auth.v1.auth.GetMyPasswordComplexityPolicyResponse,
      com.zitadel.auth.v1.auth.UpdateMyPasswordRequest,
      com.zitadel.auth.v1.auth.UpdateMyPasswordResponse,
      com.zitadel.auth.v1.auth.GetMyProfileRequest,
      com.zitadel.auth.v1.auth.GetMyProfileResponse,
      com.zitadel.auth.v1.auth.UpdateMyProfileRequest,
      com.zitadel.auth.v1.auth.UpdateMyProfileResponse,
      com.zitadel.auth.v1.auth.GetMyEmailRequest,
      com.zitadel.auth.v1.auth.GetMyEmailResponse,
      com.zitadel.auth.v1.auth.SetMyEmailRequest,
      com.zitadel.auth.v1.auth.SetMyEmailResponse,
      com.zitadel.auth.v1.auth.VerifyMyEmailRequest,
      com.zitadel.auth.v1.auth.VerifyMyEmailResponse,
      com.zitadel.auth.v1.auth.ResendMyEmailVerificationRequest,
      com.zitadel.auth.v1.auth.ResendMyEmailVerificationResponse,
      com.zitadel.auth.v1.auth.GetMyPhoneRequest,
      com.zitadel.auth.v1.auth.GetMyPhoneResponse,
      com.zitadel.auth.v1.auth.SetMyPhoneRequest,
      com.zitadel.auth.v1.auth.SetMyPhoneResponse,
      com.zitadel.auth.v1.auth.VerifyMyPhoneRequest,
      com.zitadel.auth.v1.auth.VerifyMyPhoneResponse,
      com.zitadel.auth.v1.auth.ResendMyPhoneVerificationRequest,
      com.zitadel.auth.v1.auth.ResendMyPhoneVerificationResponse,
      com.zitadel.auth.v1.auth.RemoveMyPhoneRequest,
      com.zitadel.auth.v1.auth.RemoveMyPhoneResponse,
      com.zitadel.auth.v1.auth.RemoveMyAvatarRequest,
      com.zitadel.auth.v1.auth.RemoveMyAvatarResponse,
      com.zitadel.auth.v1.auth.ListMyLinkedIDPsRequest,
      com.zitadel.auth.v1.auth.ListMyLinkedIDPsResponse,
      com.zitadel.auth.v1.auth.RemoveMyLinkedIDPRequest,
      com.zitadel.auth.v1.auth.RemoveMyLinkedIDPResponse,
      com.zitadel.auth.v1.auth.ListMyAuthFactorsRequest,
      com.zitadel.auth.v1.auth.ListMyAuthFactorsResponse,
      com.zitadel.auth.v1.auth.AddMyAuthFactorU2FRequest,
      com.zitadel.auth.v1.auth.AddMyAuthFactorU2FResponse,
      com.zitadel.auth.v1.auth.AddMyAuthFactorOTPRequest,
      com.zitadel.auth.v1.auth.AddMyAuthFactorOTPResponse,
      com.zitadel.auth.v1.auth.VerifyMyAuthFactorOTPRequest,
      com.zitadel.auth.v1.auth.VerifyMyAuthFactorOTPResponse,
      com.zitadel.auth.v1.auth.VerifyMyAuthFactorU2FRequest,
      com.zitadel.auth.v1.auth.VerifyMyAuthFactorU2FResponse,
      com.zitadel.auth.v1.auth.RemoveMyAuthFactorOTPRequest,
      com.zitadel.auth.v1.auth.RemoveMyAuthFactorOTPResponse,
      com.zitadel.auth.v1.auth.RemoveMyAuthFactorU2FRequest,
      com.zitadel.auth.v1.auth.RemoveMyAuthFactorU2FResponse,
      com.zitadel.auth.v1.auth.ListMyPasswordlessRequest,
      com.zitadel.auth.v1.auth.ListMyPasswordlessResponse,
      com.zitadel.auth.v1.auth.AddMyPasswordlessRequest,
      com.zitadel.auth.v1.auth.AddMyPasswordlessResponse,
      com.zitadel.auth.v1.auth.AddMyPasswordlessLinkRequest,
      com.zitadel.auth.v1.auth.AddMyPasswordlessLinkResponse,
      com.zitadel.auth.v1.auth.SendMyPasswordlessLinkRequest,
      com.zitadel.auth.v1.auth.SendMyPasswordlessLinkResponse,
      com.zitadel.auth.v1.auth.VerifyMyPasswordlessRequest,
      com.zitadel.auth.v1.auth.VerifyMyPasswordlessResponse,
      com.zitadel.auth.v1.auth.RemoveMyPasswordlessRequest,
      com.zitadel.auth.v1.auth.RemoveMyPasswordlessResponse,
      com.zitadel.auth.v1.auth.ListMyUserGrantsRequest,
      com.zitadel.auth.v1.auth.ListMyUserGrantsResponse,
      com.zitadel.auth.v1.auth.UserGrant,
      com.zitadel.auth.v1.auth.ListMyProjectOrgsRequest,
      com.zitadel.auth.v1.auth.ListMyProjectOrgsResponse,
      com.zitadel.auth.v1.auth.ListMyZitadelPermissionsRequest,
      com.zitadel.auth.v1.auth.ListMyZitadelPermissionsResponse,
      com.zitadel.auth.v1.auth.ListMyProjectPermissionsRequest,
      com.zitadel.auth.v1.auth.ListMyProjectPermissionsResponse,
      com.zitadel.auth.v1.auth.ListMyMembershipsRequest,
      com.zitadel.auth.v1.auth.ListMyMembershipsResponse,
      com.zitadel.auth.v1.auth.GetMyLabelPolicyRequest,
      com.zitadel.auth.v1.auth.GetMyLabelPolicyResponse,
      com.zitadel.auth.v1.auth.GetMyPrivacyPolicyRequest,
      com.zitadel.auth.v1.auth.GetMyPrivacyPolicyResponse,
      com.zitadel.auth.v1.auth.GetMyLoginPolicyRequest,
      com.zitadel.auth.v1.auth.GetMyLoginPolicyResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChJ6aXRhZGVsL2F1dGgucHJvdG8SD3ppdGFkZWwuYXV0aC52MRoSeml0YWRlbC91c2VyLnByb3RvGhF6aXRhZGVsL29yZy5wc
  m90bxoUeml0YWRlbC9jaGFuZ2UucHJvdG8aFHppdGFkZWwvb2JqZWN0LnByb3RvGhV6aXRhZGVsL29wdGlvbnMucHJvdG8aFHppd
  GFkZWwvcG9saWN5LnByb3RvGhF6aXRhZGVsL2lkcC5wcm90bxoWeml0YWRlbC9tZXRhZGF0YS5wcm90bxoXdmFsaWRhdGUvdmFsa
  WRhdGUucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aH
  mdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoucHJvdG9jLWdlb
  i1vcGVuYXBpdjIvb3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90byIQCg5IZWFsdGh6UmVxdWVzdCIRCg9IZWFsdGh6UmVzcG9uc2UiH
  gocR2V0U3VwcG9ydGVkTGFuZ3VhZ2VzUmVxdWVzdCJkCh1HZXRTdXBwb3J0ZWRMYW5ndWFnZXNSZXNwb25zZRJDCglsYW5ndWFnZ
  XMYASADKAlCJeI/CxIJbGFuZ3VhZ2VzkkEUShJbImVuIiwgImRlIiwgIml0Il1SCWxhbmd1YWdlcyISChBHZXRNeVVzZXJSZXF1Z
  XN0IsMBChFHZXRNeVVzZXJSZXNwb25zZRI0CgR1c2VyGAEgASgLMhUueml0YWRlbC51c2VyLnYxLlVzZXJCCeI/BhIEdXNlclIEd
  XNlchJ4CgpsYXN0X2xvZ2luGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEI94j8LEglsYXN0TG9naW6SQSwyKlRoZ
  SB0aW1lc3RhbXAgb2YgdGhlIGxhc3Qgc3VjY2Vzc2Z1bCBsb2dpblIJbGFzdExvZ2luIhUKE1JlbW92ZU15VXNlclJlcXVlc3QiW
  QoUUmVtb3ZlTXlVc2VyUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZ
  XRhaWxzUgdkZXRhaWxzIlwKGExpc3RNeVVzZXJDaGFuZ2VzUmVxdWVzdBJACgVxdWVyeRgBIAEoCzIeLnppdGFkZWwuY2hhbmdlL
  nYxLkNoYW5nZVF1ZXJ5QgriPwcSBXF1ZXJ5UgVxdWVyeSJqChlMaXN0TXlVc2VyQ2hhbmdlc1Jlc3BvbnNlEj4KBnJlc3VsdBgCI
  AMoCzIZLnppdGFkZWwuY2hhbmdlLnYxLkNoYW5nZUIL4j8IEgZyZXN1bHRSBnJlc3VsdEoECAEQAlIHZGV0YWlscyIbChlMaXN0T
  XlVc2VyU2Vzc2lvbnNSZXF1ZXN0IlsKGkxpc3RNeVVzZXJTZXNzaW9uc1Jlc3BvbnNlEj0KBnJlc3VsdBgBIAMoCzIYLnppdGFkZ
  WwudXNlci52MS5TZXNzaW9uQgviPwgSBnJlc3VsdFIGcmVzdWx0IpwBChVMaXN0TXlNZXRhZGF0YVJlcXVlc3QSNwoFcXVlcnkYA
  SABKAsyFS56aXRhZGVsLnYxLkxpc3RRdWVyeUIK4j8HEgVxdWVyeVIFcXVlcnkSSgoHcXVlcmllcxgCIAMoCzIiLnppdGFkZWwub
  WV0YWRhdGEudjEuTWV0YWRhdGFRdWVyeUIM4j8JEgdxdWVyaWVzUgdxdWVyaWVzIp0BChZMaXN0TXlNZXRhZGF0YVJlc3BvbnNlE
  j8KB2RldGFpbHMYASABKAsyFy56aXRhZGVsLnYxLkxpc3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMSQgoGcmVzdWx0G
  AIgAygLMh0ueml0YWRlbC5tZXRhZGF0YS52MS5NZXRhZGF0YUIL4j8IEgZyZXN1bHRSBnJlc3VsdCI8ChRHZXRNeU1ldGFkYXRhU
  mVxdWVzdBIkCgNrZXkYASABKAlCEuI/BRIDa2V5+kIHcgUQARjIAVIDa2V5ImEKFUdldE15TWV0YWRhdGFSZXNwb25zZRJICghtZ
  XRhZGF0YRgBIAEoCzIdLnppdGFkZWwubWV0YWRhdGEudjEuTWV0YWRhdGFCDeI/ChIIbWV0YWRhdGFSCG1ldGFkYXRhImkKFFNld
  E15TWV0YWRhdGFSZXF1ZXN0EiQKA2tleRgBIAEoCUIS4j8FEgNrZXn6QgdyBRABGMgBUgNrZXkSKwoFdmFsdWUYAiABKAxCFeI/B
  xIFdmFsdWX6Qgh6BhABGKDCHlIFdmFsdWUiWgoVU2V0TXlNZXRhZGF0YVJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZ
  GVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscyLYAQoYQnVsa1NldE15TWV0YWRhdGFSZXF1ZXN0El0KC
  G1ldGFkYXRhGAEgAygLMjIueml0YWRlbC5hdXRoLnYxLkJ1bGtTZXRNeU1ldGFkYXRhUmVxdWVzdC5NZXRhZGF0YUIN4j8KEghtZ
  XRhZGF0YVIIbWV0YWRhdGEaXQoITWV0YWRhdGESJAoDa2V5GAEgASgJQhLiPwUSA2tlefpCB3IFEAEYyAFSA2tleRIrCgV2YWx1Z
  RgCIAEoDEIV4j8HEgV2YWx1ZfpCCHoGEAEYoMIeUgV2YWx1ZSJeChlCdWxrU2V0TXlNZXRhZGF0YVJlc3BvbnNlEkEKB2RldGFpb
  HMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscyI/ChdSZW1vdmVNeU1ldGFkY
  XRhUmVxdWVzdBIkCgNrZXkYASABKAlCEuI/BRIDa2V5+kIHcgUQARjIAVIDa2V5Il0KGFJlbW92ZU15TWV0YWRhdGFSZXNwb25zZ
  RJBCgdkZXRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiSwobQnVsa
  1JlbW92ZU15TWV0YWRhdGFSZXF1ZXN0EiwKBGtleXMYASADKAlCGOI/BhIEa2V5c/pCDJIBCSIHcgUQARjIAVIEa2V5cyJhChxCd
  WxrUmVtb3ZlTXlNZXRhZGF0YVJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/C
  RIHZGV0YWlsc1IHZGV0YWlscyIcChpMaXN0TXlSZWZyZXNoVG9rZW5zUmVxdWVzdCKiAQobTGlzdE15UmVmcmVzaFRva2Vuc1Jlc
  3BvbnNlEj8KB2RldGFpbHMYASABKAsyFy56aXRhZGVsLnYxLkxpc3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMSQgoGc
  mVzdWx0GAIgAygLMh0ueml0YWRlbC51c2VyLnYxLlJlZnJlc2hUb2tlbkIL4j8IEgZyZXN1bHRSBnJlc3VsdCJAChtSZXZva2VNe
  VJlZnJlc2hUb2tlblJlcXVlc3QSIQoCaWQYASABKAlCEeI/BBICaWT6QgdyBRABGMgBUgJpZCJhChxSZXZva2VNeVJlZnJlc2hUb
  2tlblJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0Y
  WlscyIhCh9SZXZva2VBbGxNeVJlZnJlc2hUb2tlbnNSZXF1ZXN0IiIKIFJldm9rZUFsbE15UmVmcmVzaFRva2Vuc1Jlc3BvbnNlI
  k8KF1VwZGF0ZU15VXNlck5hbWVSZXF1ZXN0EjQKCXVzZXJfbmFtZRgBIAEoCUIX4j8KEgh1c2VyTmFtZfpCB3IFEAEYyAFSCHVzZ
  XJOYW1lIl0KGFVwZGF0ZU15VXNlck5hbWVSZXNwb25zZRJBCgdkZXRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRha
  WxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiJgokR2V0TXlQYXNzd29yZENvbXBsZXhpdHlQb2xpY3lSZXF1ZXN0InkKJUdldE15U
  GFzc3dvcmRDb21wbGV4aXR5UG9saWN5UmVzcG9uc2USUAoGcG9saWN5GAEgASgLMisueml0YWRlbC5wb2xpY3kudjEuUGFzc3dvc
  mRDb21wbGV4aXR5UG9saWN5QgviPwgSBnBvbGljeVIGcG9saWN5Is8BChdVcGRhdGVNeVBhc3N3b3JkUmVxdWVzdBJZCgxvbGRfc
  GFzc3dvcmQYASABKAlCNuI/DRILb2xkUGFzc3dvcmSSQRdKEiJNeU9sZFBhc3N3b3JkMTIhIoABAeBBAvpCBnIEEAEoRlILb2xkU
  GFzc3dvcmQSWQoMbmV3X3Bhc3N3b3JkGAIgASgJQjbiPw0SC25ld1Bhc3N3b3JkkkEXShIiTXlOZXdQYXNzd29yZDEyISKAAQHgQ
  QL6QgZyBBABKEZSC25ld1Bhc3N3b3JkIl0KGFVwZGF0ZU15UGFzc3dvcmRSZXNwb25zZRJBCgdkZXRhaWxzGAEgASgLMhkueml0Y
  WRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiFQoTR2V0TXlQcm9maWxlUmVxdWVzdCKbAQoUR2V0T
  XlQcm9maWxlUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzU
  gdkZXRhaWxzEkAKB3Byb2ZpbGUYAiABKAsyGC56aXRhZGVsLnVzZXIudjEuUHJvZmlsZUIM4j8JEgdwcm9maWxlUgdwcm9maWxlI
  usDChZVcGRhdGVNeVByb2ZpbGVSZXF1ZXN0Ek0KCmZpcnN0X25hbWUYASABKAlCLuI/CxIJZmlyc3ROYW1lkkEQSggiTWlubmllI
  njIAYABAeBBAvpCB3IFEAEYyAFSCWZpcnN0TmFtZRJJCglsYXN0X25hbWUYAiABKAlCLOI/ChIIbGFzdE5hbWWSQQ9KByJNb3VzZ
  SJ4yAGAAQHgQQL6QgdyBRABGMgBUghsYXN0TmFtZRJFCgluaWNrX25hbWUYAyABKAlCKOI/ChIIbmlja05hbWWSQRBKCCJNaW5ua
  WUieMgBgAEB+kIFcgMYyAFSCG5pY2tOYW1lElkKDGRpc3BsYXlfbmFtZRgEIAEoCUI24j8NEgtkaXNwbGF5TmFtZZJBFkoOIk1pb
  m5pZSBNb3VzZSJ4yAGAAQHgQQL6QgdyBRABGMgBUgtkaXNwbGF5TmFtZRJXChJwcmVmZXJyZWRfbGFuZ3VhZ2UYBSABKAlCKOI/E
  xIRcHJlZmVycmVkTGFuZ3VhZ2WSQQhKBCJlbiJ4CvpCBHICGApSEXByZWZlcnJlZExhbmd1YWdlEjwKBmdlbmRlchgGIAEoDjIXL
  nppdGFkZWwudXNlci52MS5HZW5kZXJCC+I/CBIGZ2VuZGVyUgZnZW5kZXIiXAoXVXBkYXRlTXlQcm9maWxlUmVzcG9uc2USQQoHZ
  GV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIhMKEUdldE15RW1ha
  WxSZXF1ZXN0IpEBChJHZXRNeUVtYWlsUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc
  0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzEjgKBWVtYWlsGAIgASgLMhYueml0YWRlbC51c2VyLnYxLkVtYWlsQgriPwcSBWVtYWlsU
  gVlbWFpbCJWChFTZXRNeUVtYWlsUmVxdWVzdBJBCgVlbWFpbBgBIAEoCUIr4j8HEgVlbWFpbJJBFEoSImdpZ2lAeml0YWRlbC5jb
  20i4EEC+kIEcgJgAVIFZW1haWwiVwoSU2V0TXlFbWFpbFJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9ia
  mVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscyJUChRWZXJpZnlNeUVtYWlsUmVxdWVzdBI8CgRjb2RlGAEgASgJQijiP
  wYSBGNvZGWSQQ9KByJIODNKMyJ4yAGAAQHgQQL6QgdyBRABGMgBUgRjb2RlIloKFVZlcmlmeU15RW1haWxSZXNwb25zZRJBCgdkZ
  XRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiIgogUmVzZW5kTXlFb
  WFpbFZlcmlmaWNhdGlvblJlcXVlc3QiZgohUmVzZW5kTXlFbWFpbFZlcmlmaWNhdGlvblJlc3BvbnNlEkEKB2RldGFpbHMYASABK
  AsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscyITChFHZXRNeVBob25lUmVxdWVzdCKRA
  QoSR2V0TXlQaG9uZVJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0Y
  Wlsc1IHZGV0YWlscxI4CgVwaG9uZRgCIAEoCzIWLnppdGFkZWwudXNlci52MS5QaG9uZUIK4j8HEgVwaG9uZVIFcGhvbmUiYAoRU
  2V0TXlQaG9uZVJlcXVlc3QSSwoFcGhvbmUYASABKAlCNeI/BxIFcGhvbmWSQRlKEiIrNDEgNzEgMDAwIDAwIDAwIngygAEB4EEC+
  kIJcgcQARgyOgErUgVwaG9uZSJXChJTZXRNeVBob25lUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZ
  WN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIlQKFFZlcmlmeU15UGhvbmVSZXF1ZXN0EjwKBGNvZGUYASABKAlCKOI/B
  hIEY29kZZJBD0oHIkg4M0ozInjIAYABAeBBAvpCB3IFEAEYyAFSBGNvZGUiWgoVVmVyaWZ5TXlQaG9uZVJlc3BvbnNlEkEKB2Rld
  GFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscyIiCiBSZXNlbmRNeVBob
  25lVmVyaWZpY2F0aW9uUmVxdWVzdCJmCiFSZXNlbmRNeVBob25lVmVyaWZpY2F0aW9uUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoC
  zIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIhYKFFJlbW92ZU15UGhvbmVSZXF1ZXN0I
  loKFVJlbW92ZU15UGhvbmVSZXNwb25zZRJBCgdkZXRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB
  2RldGFpbHNSB2RldGFpbHMiFwoVUmVtb3ZlTXlBdmF0YXJSZXF1ZXN0IlsKFlJlbW92ZU15QXZhdGFyUmVzcG9uc2USQQoHZGV0Y
  WlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIlIKF0xpc3RNeUxpbmtlZ
  ElEUHNSZXF1ZXN0EjcKBXF1ZXJ5GAEgASgLMhUueml0YWRlbC52MS5MaXN0UXVlcnlCCuI/BxIFcXVlcnlSBXF1ZXJ5Ip0BChhMa
  XN0TXlMaW5rZWRJRFBzUmVzcG9uc2USPwoHZGV0YWlscxgBIAEoCzIXLnppdGFkZWwudjEuTGlzdERldGFpbHNCDOI/CRIHZGV0Y
  Wlsc1IHZGV0YWlscxJACgZyZXN1bHQYAiADKAsyGy56aXRhZGVsLmlkcC52MS5JRFBVc2VyTGlua0IL4j8IEgZyZXN1bHRSBnJlc
  3VsdCKKAQoYUmVtb3ZlTXlMaW5rZWRJRFBSZXF1ZXN0EisKBmlkcF9pZBgBIAEoCUIU4j8HEgVpZHBJZPpCB3IFEAEYyAFSBWlkc
  ElkEkEKDmxpbmtlZF91c2VyX2lkGAIgASgJQhviPw4SDGxpbmtlZFVzZXJJZPpCB3IFEAEYyAFSDGxpbmtlZFVzZXJJZCJeChlSZ
  W1vdmVNeUxpbmtlZElEUFJlc3BvbnNlEkEKB2RldGFpbHMYASABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZ
  GV0YWlsc1IHZGV0YWlscyIaChhMaXN0TXlBdXRoRmFjdG9yc1JlcXVlc3QiXQoZTGlzdE15QXV0aEZhY3RvcnNSZXNwb25zZRJAC
  gZyZXN1bHQYASADKAsyGy56aXRhZGVsLnVzZXIudjEuQXV0aEZhY3RvckIL4j8IEgZyZXN1bHRSBnJlc3VsdCIbChlBZGRNeUF1d
  GhGYWN0b3JVMkZSZXF1ZXN0IpkBChpBZGRNeUF1dGhGYWN0b3JVMkZSZXNwb25zZRI4CgNrZXkYASABKAsyHC56aXRhZGVsLnVzZ
  XIudjEuV2ViQXV0aE5LZXlCCOI/BRIDa2V5UgNrZXkSQQoHZGV0YWlscxgCIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc
  0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIhsKGUFkZE15QXV0aEZhY3Rvck9UUFJlcXVlc3Qi2QIKGkFkZE15QXV0aEZhY3Rvck9UU
  FJlc3BvbnNlEqsBCgN1cmwYASABKAlCmAHiPwUSA3VybJJBjAFKiQEib3RwYXV0aDovL3RvdHAvWklUQURFTDpnaWdpQGFjbWUue
  ml0YWRlbC5jbG91ZD9hbGdvcml0aG09U0hBMSZkaWdpdHM9NiZpc3N1ZXI9WklUQURFTCZwZXJpb2Q9MzAmc2VjcmV0PVRKT1BXU
  0RZSUxMSFhGVjRNTEtOTkpPV0ZHN1ZTRENLIlIDdXJsEkoKBnNlY3JldBgCIAEoCUIy4j8IEgZzZWNyZXSSQSRKIiJUSk9QV1NEW
  UlMTEhYRlY0TUxLTk5KT1dGRzdWU0RDSyJSBnNlY3JldBJBCgdkZXRhaWxzGAMgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRha
  WxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiVwocVmVyaWZ5TXlBdXRoRmFjdG9yT1RQUmVxdWVzdBI3CgRjb2RlGAEgASgJQiPiP
  wYSBGNvZGWSQQpKCCIxMjM0NTYi4EEC+kIHcgUQARjIAVIEY29kZSJiCh1WZXJpZnlNeUF1dGhGYWN0b3JPVFBSZXNwb25zZRJBC
  gdkZXRhaWxzGAEgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMihAEKHFZlcmlme
  U15QXV0aEZhY3RvclUyRlJlcXVlc3QSZAoMdmVyaWZpY2F0aW9uGAEgASgLMiUueml0YWRlbC51c2VyLnYxLldlYkF1dGhOVmVya
  WZpY2F0aW9uQhniPw4SDHZlcmlmaWNhdGlvbvpCBYoBAhABUgx2ZXJpZmljYXRpb24iYgodVmVyaWZ5TXlBdXRoRmFjdG9yVTJGU
  mVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzI
  h4KHFJlbW92ZU15QXV0aEZhY3Rvck9UUFJlcXVlc3QiYgodUmVtb3ZlTXlBdXRoRmFjdG9yT1RQUmVzcG9uc2USQQoHZGV0YWlsc
  xgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIlEKHFJlbW92ZU15QXV0aEZhY
  3RvclUyRlJlcXVlc3QSMQoIdG9rZW5faWQYASABKAlCFuI/CRIHdG9rZW5JZPpCB3IFEAEYyAFSB3Rva2VuSWQiYgodUmVtb3ZlT
  XlBdXRoRmFjdG9yVTJGUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZ
  XRhaWxzUgdkZXRhaWxzIhsKGUxpc3RNeVBhc3N3b3JkbGVzc1JlcXVlc3QiYQoaTGlzdE15UGFzc3dvcmRsZXNzUmVzcG9uc2USQ
  woGcmVzdWx0GAEgAygLMh4ueml0YWRlbC51c2VyLnYxLldlYkF1dGhOVG9rZW5CC+I/CBIGcmVzdWx0UgZyZXN1bHQiGgoYQWRkT
  XlQYXNzd29yZGxlc3NSZXF1ZXN0IpgBChlBZGRNeVBhc3N3b3JkbGVzc1Jlc3BvbnNlEjgKA2tleRgBIAEoCzIcLnppdGFkZWwud
  XNlci52MS5XZWJBdXRoTktleUII4j8FEgNrZXlSA2tleRJBCgdkZXRhaWxzGAIgASgLMhkueml0YWRlbC52MS5PYmplY3REZXRha
  WxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiHgocQWRkTXlQYXNzd29yZGxlc3NMaW5rUmVxdWVzdCL0AgodQWRkTXlQYXNzd29yZ
  Gxlc3NMaW5rUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzU
  gdkZXRhaWxzErcBCgRsaW5rGAIgASgJQqIB4j8GEgRsaW5rkkGVAUqSASJodHRwczovL2FjbWUuY29tL3VpL2xvZ2luL2xvZ2luL
  3Bhc3N3b3JkbGVzcy9pbml0P3VzZXJJRD0xODIxNTYyNjQyMjkzMDY2MjUmb3JnSUQ9MTY1OTQ3NjUwNzQyOTk3MjQ5JmNvZGVJR
  D0yMDA5NDk1MDQxODkzODg5NDcmY29kZT1rRmZzTzhPaXpaUFMiUgRsaW5rElYKCmV4cGlyYXRpb24YAyABKAsyGS5nb29nbGUuc
  HJvdG9idWYuRHVyYXRpb25CG+I/DBIKZXhwaXJhdGlvbpJBCUoHIjM2MDBzIlIKZXhwaXJhdGlvbiIfCh1TZW5kTXlQYXNzd29yZ
  Gxlc3NMaW5rUmVxdWVzdCJjCh5TZW5kTXlQYXNzd29yZGxlc3NMaW5rUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZ
  WwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIoMBChtWZXJpZnlNeVBhc3N3b3JkbGVzc1JlcXVlc3QSZ
  AoMdmVyaWZpY2F0aW9uGAEgASgLMiUueml0YWRlbC51c2VyLnYxLldlYkF1dGhOVmVyaWZpY2F0aW9uQhniPw4SDHZlcmlmaWNhd
  GlvbvpCBYoBAhABUgx2ZXJpZmljYXRpb24iYQocVmVyaWZ5TXlQYXNzd29yZGxlc3NSZXNwb25zZRJBCgdkZXRhaWxzGAEgASgLM
  hkueml0YWRlbC52MS5PYmplY3REZXRhaWxzQgziPwkSB2RldGFpbHNSB2RldGFpbHMiUAobUmVtb3ZlTXlQYXNzd29yZGxlc3NSZ
  XF1ZXN0EjEKCHRva2VuX2lkGAEgASgJQhbiPwkSB3Rva2VuSWT6QgdyBRABGMgBUgd0b2tlbklkImEKHFJlbW92ZU15UGFzc3dvc
  mRsZXNzUmVzcG9uc2USQQoHZGV0YWlscxgBIAEoCzIZLnppdGFkZWwudjEuT2JqZWN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZ
  XRhaWxzIlIKF0xpc3RNeVVzZXJHcmFudHNSZXF1ZXN0EjcKBXF1ZXJ5GAEgASgLMhUueml0YWRlbC52MS5MaXN0UXVlcnlCCuI/B
  xIFcXVlcnlSBXF1ZXJ5IpwBChhMaXN0TXlVc2VyR3JhbnRzUmVzcG9uc2USPwoHZGV0YWlscxgBIAEoCzIXLnppdGFkZWwudjEuT
  GlzdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscxI/CgZyZXN1bHQYAiADKAsyGi56aXRhZGVsLmF1dGgudjEuVXNlckdyY
  W50QgviPwgSBnJlc3VsdFIGcmVzdWx0IsQGCglVc2VyR3JhbnQSOQoGb3JnX2lkGAEgASgJQiLiPwcSBW9yZ0lkkkEVShMiNjk2M
  jkwMjY4MDY0ODk0NTUiUgVvcmdJZBJFCgpwcm9qZWN0X2lkGAIgASgJQibiPwsSCXByb2plY3RJZJJBFUoTIjk4NzI5MDI4OTMyM
  zg0NTI4IlIJcHJvamVjdElkEjwKB3VzZXJfaWQYAyABKAlCI+I/CBIGdXNlcklkkkEVShMiMjg3NDYwMjg5MDk1OTM5ODciUgZ1c
  2VySWQSPQoFcm9sZXMYBCADKAlCJ+I/BxIFcm9sZXOSQRpKGFsiUm9sZUtleTEiLCAiUm9sZUtleTIiXVIFcm9sZXMSNQoIb3JnX
  25hbWUYBSABKAlCGuI/CRIHb3JnTmFtZZJBC0oJIlpJVEFERUwiUgdvcmdOYW1lEi4KCGdyYW50X2lkGAYgASgJQhPiPwkSB2dyY
  W50SWSSQQRKAiIiUgdncmFudElkEkEKB2RldGFpbHMYByABKAsyGS56aXRhZGVsLnYxLk9iamVjdERldGFpbHNCDOI/CRIHZGV0Y
  Wlsc1IHZGV0YWlscxJBCgpvcmdfZG9tYWluGAggASgJQiLiPwsSCW9yZ0RvbWFpbpJBEUoPInppdGFkZWwuY2xvdWQiUglvcmdEb
  21haW4SQQoMcHJvamVjdF9uYW1lGAkgASgJQh7iPw0SC3Byb2plY3ROYW1lkkELSgkiWklUQURFTCJSC3Byb2plY3ROYW1lElUKE
  HByb2plY3RfZ3JhbnRfaWQYCiABKAlCK+I/EBIOcHJvamVjdEdyYW50SWSSQRVKEyIyODc0NjAyODkwOTU4NjI0NiJSDnByb2plY
  3RHcmFudElkEkcKCXJvbGVfa2V5cxgLIAMoCUIq4j8KEghyb2xlS2V5c5JBGkoYWyJSb2xlS2V5MSIsICJSb2xlS2V5MiJdUghyb
  2xlS2V5cxJoCgl1c2VyX3R5cGUYDCABKA4yFS56aXRhZGVsLnVzZXIudjEuVHlwZUI04j8KEgh1c2VyVHlwZZJBJDIidHlwZSBvZ
  iB0aGUgdXNlciAoaHVtYW4gLyBtYWNoaW5lKVIIdXNlclR5cGUilQEKGExpc3RNeVByb2plY3RPcmdzUmVxdWVzdBI3CgVxdWVye
  RgBIAEoCzIVLnppdGFkZWwudjEuTGlzdFF1ZXJ5QgriPwcSBXF1ZXJ5UgVxdWVyeRJACgdxdWVyaWVzGAIgAygLMhgueml0YWRlb
  C5vcmcudjEuT3JnUXVlcnlCDOI/CRIHcXVlcmllc1IHcXVlcmllcyKWAQoZTGlzdE15UHJvamVjdE9yZ3NSZXNwb25zZRI/CgdkZ
  XRhaWxzGAEgASgLMhcueml0YWRlbC52MS5MaXN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzEjgKBnJlc3VsdBgCIAMoC
  zITLnppdGFkZWwub3JnLnYxLk9yZ0IL4j8IEgZyZXN1bHRSBnJlc3VsdCIhCh9MaXN0TXlaaXRhZGVsUGVybWlzc2lvbnNSZXF1Z
  XN0ImUKIExpc3RNeVppdGFkZWxQZXJtaXNzaW9uc1Jlc3BvbnNlEkEKBnJlc3VsdBgBIAMoCUIp4j8IEgZyZXN1bHSSQRtKGVsib
  3JnLnJlYWQiLCAib3JnLndyaXRlIl1SBnJlc3VsdCIhCh9MaXN0TXlQcm9qZWN0UGVybWlzc2lvbnNSZXF1ZXN0ImQKIExpc3RNe
  VByb2plY3RQZXJtaXNzaW9uc1Jlc3BvbnNlEkAKBnJlc3VsdBgBIAMoCUIo4j8IEgZyZXN1bHSSQRpKGFsiUm9sZUtleTEiLCAiU
  m9sZUtleTIiXVIGcmVzdWx0Ip0BChhMaXN0TXlNZW1iZXJzaGlwc1JlcXVlc3QSNwoFcXVlcnkYASABKAsyFS56aXRhZGVsLnYxL
  kxpc3RRdWVyeUIK4j8HEgVxdWVyeVIFcXVlcnkSSAoHcXVlcmllcxgCIAMoCzIgLnppdGFkZWwudXNlci52MS5NZW1iZXJzaGlwU
  XVlcnlCDOI/CRIHcXVlcmllc1IHcXVlcmllcyKeAQoZTGlzdE15TWVtYmVyc2hpcHNSZXNwb25zZRI/CgdkZXRhaWxzGAEgASgLM
  hcueml0YWRlbC52MS5MaXN0RGV0YWlsc0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzEkAKBnJlc3VsdBgCIAMoCzIbLnppdGFkZWwud
  XNlci52MS5NZW1iZXJzaGlwQgviPwgSBnJlc3VsdFIGcmVzdWx0IhkKF0dldE15TGFiZWxQb2xpY3lSZXF1ZXN0Il8KGEdldE15T
  GFiZWxQb2xpY3lSZXNwb25zZRJDCgZwb2xpY3kYASABKAsyHi56aXRhZGVsLnBvbGljeS52MS5MYWJlbFBvbGljeUIL4j8IEgZwb
  2xpY3lSBnBvbGljeSIbChlHZXRNeVByaXZhY3lQb2xpY3lSZXF1ZXN0ImMKGkdldE15UHJpdmFjeVBvbGljeVJlc3BvbnNlEkUKB
  nBvbGljeRgBIAEoCzIgLnppdGFkZWwucG9saWN5LnYxLlByaXZhY3lQb2xpY3lCC+I/CBIGcG9saWN5UgZwb2xpY3kiGQoXR2V0T
  XlMb2dpblBvbGljeVJlcXVlc3QiXwoYR2V0TXlMb2dpblBvbGljeVJlc3BvbnNlEkMKBnBvbGljeRgBIAEoCzIeLnppdGFkZWwuc
  G9saWN5LnYxLkxvZ2luUG9saWN5QgviPwgSBnBvbGljeVIGcG9saWN5MpGHAQoLQXV0aFNlcnZpY2US0wEKB0hlYWx0aHoSHy56a
  XRhZGVsLmF1dGgudjEuSGVhbHRoelJlcXVlc3QaIC56aXRhZGVsLmF1dGgudjEuSGVhbHRoelJlc3BvbnNlIoQBkkFxCgdHZW5lc
  mFsEgdIZWFsdGh6Gl1UaGUgaGVhbHRoIGVuZHBvaW50IGFsbG93cyBhbiBleHRlcm5hbCBzeXN0ZW0gdG8gcHJvYmUgaWYgWklUQ
  URFTCBhdXRoZW50aWNhdGlvbiBBUEkgaXMgYWxpdmWC0+STAgoSCC9oZWFsdGh6Ep0CChVHZXRTdXBwb3J0ZWRMYW5ndWFnZXMSL
  S56aXRhZGVsLmF1dGgudjEuR2V0U3VwcG9ydGVkTGFuZ3VhZ2VzUmVxdWVzdBouLnppdGFkZWwuYXV0aC52MS5HZXRTdXBwb3J0Z
  WRMYW5ndWFnZXNSZXNwb25zZSKkAZJBfAoHR2VuZXJhbBITU3VwcG9ydGVkIExhbmd1YWdlcxpcVGhlIHN1cHBvcnRlZC9kZWZhd
  Wx0IGxhbmd1YWdlcyBvZiB0aGUgc3lzdGVtIHdpbGwgYmUgcmV0dXJuZWQgYnkgdGhlIGxhbmd1YWdlIGFiYnJldmlhdGlvbi6Ct
  RgPCg1hdXRoZW50aWNhdGVkgtPkkwIMEgovbGFuZ3VhZ2VzEvEBCglHZXRNeVVzZXISIS56aXRhZGVsLmF1dGgudjEuR2V0TXlVc
  2VyUmVxdWVzdBoiLnppdGFkZWwuYXV0aC52MS5HZXRNeVVzZXJSZXNwb25zZSKcAZJBdQoEVXNlchILR2V0IG15IHVzZXIaYFJld
  HVybnMgdGhlIGZ1bGwgdXNlciBvYmplY3Qgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlciBpbmNsdWRpbmcgdGhlIHByb2ZpbGUsI
  GVtYWlsLCBwaG9uZSwgZXRjIIK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAgsSCS91c2Vycy9tZRKoAgoMUmVtb3ZlTXlVc2VyEiQue
  ml0YWRlbC5hdXRoLnYxLlJlbW92ZU15VXNlclJlcXVlc3QaJS56aXRhZGVsLmF1dGgudjEuUmVtb3ZlTXlVc2VyUmVzcG9uc2Uiy
  gGSQZ8BCgRVc2VyEg5EZWxldGUgbXkgdXNlchqGAURlbGV0ZXMgdGhlIGN1cnJlbnRseSBhdXRoZW50aWNhdGVkIHVzZXIuIEFsb
  CBhdXRoZW50aWNhdGlvbiB0b2tlbnMgd2lsbCBiZSByZW1vdmVkIGFuZCB0aGUgdXNlciB3aWxsIG5vdCBiZSBhYmxlIHRvIG1ha
  2UgYW55IHJlcXVlc3QugrUYEgoQdXNlci5zZWxmLmRlbGV0ZYLT5JMCCyoJL3VzZXJzL21lEs0CChFMaXN0TXlVc2VyQ2hhbmdlc
  xIpLnppdGFkZWwuYXV0aC52MS5MaXN0TXlVc2VyQ2hhbmdlc1JlcXVlc3QaKi56aXRhZGVsLmF1dGgudjEuTGlzdE15VXNlckNoY
  W5nZXNSZXNwb25zZSLgAZJBpQEKBFVzZXISE0dldCBNeSBVc2VyIEhpc3RvcnkahwFSZXR1cm5zIGEgbGlzdCBvZiBjaGFuZ2VzL
  2V2ZW50cyB0aGF0IGhhdmUgaGFwcGVuZWQgb24gdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gSXQncyB0aGUgaGlzdG9yeSBvZiB0a
  GUgdXNlci4gTWFrZSBzdXJlIHRvIHNlbmQgYSBsaW1pdC6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIeOgEqIhkvdXNlcnMvbWUvY
  2hhbmdlcy9fc2VhcmNoEtkCChJMaXN0TXlVc2VyU2Vzc2lvbnMSKi56aXRhZGVsLmF1dGgudjEuTGlzdE15VXNlclNlc3Npb25zU
  mVxdWVzdBorLnppdGFkZWwuYXV0aC52MS5MaXN0TXlVc2VyU2Vzc2lvbnNSZXNwb25zZSLpAZJBrQEKBFVzZXISFEdldCBNeSBVc
  2VyIFNlc3Npb25zGo4BUmV0dXJucyBhIGxpc3Qgb2YgYSB1c2VyIHNlc3Npb24gZm9yIHRoZSB1c2VyIGFnZW50IG9mIHRoZSBhd
  XRoZW50aWNhdGVkIHVzZXIuIFRoaXMgY2FuIGJlIHVzZWQgdG8gc3dpdGNoIGFjY291bnRzIGluIHRoZSBjdXJyZW50IGFwcGxpY
  2F0aW9uLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAh86ASoiGi91c2Vycy9tZS9zZXNzaW9ucy9fc2VhcmNoEsoCCg5MaXN0TXlNZ
  XRhZGF0YRImLnppdGFkZWwuYXV0aC52MS5MaXN0TXlNZXRhZGF0YVJlcXVlc3QaJy56aXRhZGVsLmF1dGgudjEuTGlzdE15TWV0Y
  WRhdGFSZXNwb25zZSLmAZJBqgEKDVVzZXIgTWV0YWRhdGESFEdldCBNeSBVc2VyIE1ldGFkYXRhGoIBUmV0dXJucyBhIGxpc3Qgb
  2YgbWV0YWRhdGEgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gTWV0YWRhdGEgaXMgYSBrZXkgdmFsdWUgbGlzdCB3aXRoIGFkZ
  Gl0aW9uYWwgaW5mb3JtYXRpb24gbmVlZGVkIG9uIHRoZSB1c2VyLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAh86ASoiGi91c2Vyc
  y9tZS9tZXRhZGF0YS9fc2VhcmNoEtkCCg1HZXRNeU1ldGFkYXRhEiUueml0YWRlbC5hdXRoLnYxLkdldE15TWV0YWRhdGFSZXF1Z
  XN0GiYueml0YWRlbC5hdXRoLnYxLkdldE15TWV0YWRhdGFSZXNwb25zZSL4AZJBwQEKDVVzZXIgTWV0YWRhdGESG0dldCBNeSBVc
  2VyIE1ldGFkYXRhIEJ5IEtleRqSAVJldHVybnMgYSBtZXRhZGF0YSB2YWx1ZSBieSBhIHNwZWNpZmljIGtleSBvZiB0aGUgYXV0a
  GVudGljYXRlZCB1c2VyLiBNZXRhZGF0YSBpcyBhIGtleSB2YWx1ZSBsaXN0IHdpdGggYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBuZ
  WVkZWQgb24gdGhlIHVzZXIugrUYDwoNYXV0aGVudGljYXRlZILT5JMCGhIYL3VzZXJzL21lL21ldGFkYXRhL3trZXl9EpQCChNMa
  XN0TXlSZWZyZXNoVG9rZW5zEisueml0YWRlbC5hdXRoLnYxLkxpc3RNeVJlZnJlc2hUb2tlbnNSZXF1ZXN0Giwueml0YWRlbC5hd
  XRoLnYxLkxpc3RNeVJlZnJlc2hUb2tlbnNSZXNwb25zZSKhAZJBYAoLVXNlciBUb2tlbnMSEkdldCBSZWZyZXNoIFRva2Vucxo9U
  mV0dXJucyB0aGUgbGlzdCBvZiByZWZyZXNoIHRva2VucyBvZiB0aGUgYXV0aGVudGljYXRlZCB1c2VyLoK1GA8KDWF1dGhlbnRpY
  2F0ZWSC0+STAiU6ASoiIC91c2Vycy9tZS90b2tlbnMvcmVmcmVzaC9fc2VhcmNoEp8CChRSZXZva2VNeVJlZnJlc2hUb2tlbhIsL
  nppdGFkZWwuYXV0aC52MS5SZXZva2VNeVJlZnJlc2hUb2tlblJlcXVlc3QaLS56aXRhZGVsLmF1dGgudjEuUmV2b2tlTXlSZWZyZ
  XNoVG9rZW5SZXNwb25zZSKpAZJBbgoLVXNlciBUb2tlbnMSFVJldm9rZSBSZWZyZXNoIFRva2VucxpIUmV2b2tlcyBhIHNpbmdsZ
  SByZWZyZXNoIHRva2VuIG9mIHRoZSBhdXRob3JpemVkIHVzZXIgYnkgaXRzICh0b2tlbikgaWQugrUYDwoNYXV0aGVudGljYXRlZ
  ILT5JMCHyodL3VzZXJzL21lL3Rva2Vucy9yZWZyZXNoL3tpZH0SpgIKGFJldm9rZUFsbE15UmVmcmVzaFRva2VucxIwLnppdGFkZ
  WwuYXV0aC52MS5SZXZva2VBbGxNeVJlZnJlc2hUb2tlbnNSZXF1ZXN0GjEueml0YWRlbC5hdXRoLnYxLlJldm9rZUFsbE15UmVmc
  mVzaFRva2Vuc1Jlc3BvbnNlIqQBkkFfCgtVc2VyIFRva2VucxIZUmV2b2tlIEFsbCBSZWZyZXNoIFRva2Vucxo1UmV2b2tlcyBhb
  GwgcmVmcmVzaCB0b2tlbnMgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIpOgEqIiQvd
  XNlcnMvbWUvdG9rZW5zL3JlZnJlc2gvX3Jldm9rZV9hbGwSrAIKEFVwZGF0ZU15VXNlck5hbWUSKC56aXRhZGVsLmF1dGgudjEuV
  XBkYXRlTXlVc2VyTmFtZVJlcXVlc3QaKS56aXRhZGVsLmF1dGgudjEuVXBkYXRlTXlVc2VyTmFtZVJlc3BvbnNlIsIBkkGOAQoFV
  XNlcnMSEkNoYW5nZSBNeSBVc2VybmFtZRpxQ2hhbmdlcyB0aGUgdXNlcm5hbWUgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gV
  GhlIHVzZXIgaGFzIHRvIGxvZyBpbiB3aXRoIHRoZSBuZXdseSBjcmVhdGVkIHVzZXJuYW1lIGFmdGVyd2FyZC6CtRgPCg1hdXRoZ
  W50aWNhdGVkgtPkkwIXOgEqGhIvdXNlcnMvbWUvdXNlcm5hbWUSygMKHUdldE15UGFzc3dvcmRDb21wbGV4aXR5UG9saWN5EjUue
  ml0YWRlbC5hdXRoLnYxLkdldE15UGFzc3dvcmRDb21wbGV4aXR5UG9saWN5UmVxdWVzdBo2LnppdGFkZWwuYXV0aC52MS5HZXRNe
  VBhc3N3b3JkQ29tcGxleGl0eVBvbGljeVJlc3BvbnNlIrkCkkH8AQoNVXNlciBQYXNzd29yZAoIUG9saWNpZXMSHUdldCBQYXNzd
  29yZGNvbXBsZXhpdHkgUG9saWN5GsEBUmV0dXJucyB0aGUgcGFzc3dvcmQgY29tcGxleGl0eSBzZXR0aW5ncyB0aGF0IHNob3VsZ
  CBiZSB1c2VkIGZvciB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBJdCBpcyBzZXQgZWl0aGVyIG9uIGFuIGluc3RhbmNlIG9yIG9yZ
  2FuaXphdGlvbiBsZXZlbC4gVGhpcyBwb2xpY3kgZGVmaW5lcyBob3cgdGhlIHBhc3N3b3JkIHNob3VsZCBsb29rLoK1GA8KDWF1d
  GhlbnRpY2F0ZWSC0+STAiASHi9wb2xpY2llcy9wYXNzd29yZHMvY29tcGxleGl0eRKuAgoQVXBkYXRlTXlQYXNzd29yZBIoLnppd
  GFkZWwuYXV0aC52MS5VcGRhdGVNeVBhc3N3b3JkUmVxdWVzdBopLnppdGFkZWwuYXV0aC52MS5VcGRhdGVNeVBhc3N3b3JkUmVzc
  G9uc2UixAGSQZABCg1Vc2VyIFBhc3N3b3JkEg9DaGFuZ2UgUGFzc3dvcmQabkNoYW5nZXMgdGhlIHBhc3N3b3JkIG9mIHRoZSBhd
  XRoZW50aWNhdGVkIHVzZXIuIE1ha2Ugc3VyZSB0aGUgcGFzc3dvcmQgZm9sbG93cyB0aGUgcGFzc3dvcmQgY29tcGxleGl0eSBwb
  2xpY3kugrUYDwoNYXV0aGVudGljYXRlZILT5JMCFzoBKhoSL3VzZXJzL21lL3Bhc3N3b3JkEpQCCgxHZXRNeVByb2ZpbGUSJC56a
  XRhZGVsLmF1dGgudjEuR2V0TXlQcm9maWxlUmVxdWVzdBolLnppdGFkZWwuYXV0aC52MS5HZXRNeVByb2ZpbGVSZXNwb25zZSK2A
  ZJBhgEKDFVzZXIgUHJvZmlsZRIOR2V0IE15IFByb2ZpbGUaZlJldHVybnMgdGhlIHByb2ZpbGUgaW5mb3JtYXRpb24gb2YgdGhlI
  GF1dGhlbnRpY2F0ZWQgdXNlciwgdGhpcyBpbmNsdWRlcyBnaXZlbiBuYW1lLCBmYW1pbHkgbmFtZSwgZXRjLoK1GA8KDWF1dGhlb
  nRpY2F0ZWSC0+STAhMSES91c2Vycy9tZS9wcm9maWxlEr4CCg9VcGRhdGVNeVByb2ZpbGUSJy56aXRhZGVsLmF1dGgudjEuVXBkY
  XRlTXlQcm9maWxlUmVxdWVzdBooLnppdGFkZWwuYXV0aC52MS5VcGRhdGVNeVByb2ZpbGVSZXNwb25zZSLXAZJBpAEKDFVzZXIgU
  HJvZmlsZRIRVXBkYXRlIE15IFByb2ZpbGUagAFDaGFuZ2UgdGhlIHByb2ZpbGUgaW5mb3JtYXRpb24gb2YgdGhlIGF1dGhlbnRpY
  2F0ZWQgdXNlci4gVGhpcyBpbmNsdWRlcyBpbmZvcm1hdGlvbiBsaWtlIGdpdmVuIG5hbWUsIGZhbWlseSBuYW1lLCBsYW5ndWFnZ
  SwgZXRjLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAhY6ASoaES91c2Vycy9tZS9wcm9maWxlEusBCgpHZXRNeUVtYWlsEiIueml0Y
  WRlbC5hdXRoLnYxLkdldE15RW1haWxSZXF1ZXN0GiMueml0YWRlbC5hdXRoLnYxLkdldE15RW1haWxSZXNwb25zZSKTAZJBZgoKV
  XNlciBFbWFpbBIMR2V0IE15IEVtYWlsGkpSZXR1cm5zIHRoZSBlbWFpbCBhZGRyZXNzIGFuZCB0aGUgdmVyaWZpZWQgZmxhZyBvZ
  iB0aGUgYXV0aGVudGljYXRlZCB1c2VyLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAhESDy91c2Vycy9tZS9lbWFpbBKZAgoKU2V0T
  XlFbWFpbBIiLnppdGFkZWwuYXV0aC52MS5TZXRNeUVtYWlsUmVxdWVzdBojLnppdGFkZWwuYXV0aC52MS5TZXRNeUVtYWlsUmVzc
  G9uc2UiwQGSQZABCgpVc2VyIEVtYWlsEg9VcGRhdGUgTXkgRW1haWwacUNoYW5nZSB0aGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgY
  XV0aGVudGljYXRlZCB1c2VyLiBBIHZlcmlmaWNhdGlvbiBlbWFpbCB3aWxsIGJlIHNlbnQgdG8gdGhlIGdpdmVuIGVtYWlsIGFkZ
  HJlc3MugrUYDwoNYXV0aGVudGljYXRlZILT5JMCFDoBKhoPL3VzZXJzL21lL2VtYWlsErwCCg1WZXJpZnlNeUVtYWlsEiUueml0Y
  WRlbC5hdXRoLnYxLlZlcmlmeU15RW1haWxSZXF1ZXN0GiYueml0YWRlbC5hdXRoLnYxLlZlcmlmeU15RW1haWxSZXNwb25zZSLbA
  ZJBogEKClVzZXIgRW1haWwSD1ZlcmlmeSBNeSBFbWFpbBqCAVZlcmlmeSB0aGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgYXV0aGVud
  GljYXRlZCB1c2VyIHdpdGggdGhlIGNvZGUgdGhhdCBoYXMgYmVlbiBzZW50LiBTdGF0ZSBvZiB0aGUgZW1haWwgYWRkcmVzcyBpc
  yB2ZXJpZmllZCBhZnRlci6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIcOgEqIhcvdXNlcnMvbWUvZW1haWwvX3ZlcmlmeRLuAgoZU
  mVzZW5kTXlFbWFpbFZlcmlmaWNhdGlvbhIxLnppdGFkZWwuYXV0aC52MS5SZXNlbmRNeUVtYWlsVmVyaWZpY2F0aW9uUmVxdWVzd
  BoyLnppdGFkZWwuYXV0aC52MS5SZXNlbmRNeUVtYWlsVmVyaWZpY2F0aW9uUmVzcG9uc2Ui6QGSQaMBCgpVc2VyIEVtYWlsEhlSZ
  XNlbmQgRW1haWwgVmVyaWZpY2F0aW9uGnpBIG5ldyBlbWFpbCB3aWxsIGJlIHNlbnQgdG8gdGhlIGxhc3Qgc2V0IGVtYWlsIGFkZ
  HJlc3Mgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlciwgdGhlIGxhc3Qgc2V0IGVtYWlsIGFkZHJlc3Mgd2lsbCBiZSB1c2VkLoK1G
  A8KDWF1dGhlbnRpY2F0ZWSC0+STAik6ASoiJC91c2Vycy9tZS9lbWFpbC9fcmVzZW5kX3ZlcmlmaWNhdGlvbhL4AQoKR2V0TXlQa
  G9uZRIiLnppdGFkZWwuYXV0aC52MS5HZXRNeVBob25lUmVxdWVzdBojLnppdGFkZWwuYXV0aC52MS5HZXRNeVBob25lUmVzcG9uc
  2UioAGSQXMKClVzZXIgUGhvbmUSDEdldCBNeSBQaG9uZRpXUmV0dXJucyB0aGUgcGhvbmUgbnVtYmVyIG9mIHRoZSBhdXRoZW50a
  WNhdGVkIHVzZXIgYW5kIGlmIHRoZSBzdGF0ZSBpcyB2ZXJpZmllZCBvciBub3QugrUYDwoNYXV0aGVudGljYXRlZILT5JMCERIPL
  3VzZXJzL21lL3Bob25lEsYCCgpTZXRNeVBob25lEiIueml0YWRlbC5hdXRoLnYxLlNldE15UGhvbmVSZXF1ZXN0GiMueml0YWRlb
  C5hdXRoLnYxLlNldE15UGhvbmVSZXNwb25zZSLuAZJBvQEKClVzZXIgUGhvbmUSDFNldCBNeSBQaG9uZRqgAVNldHMgYSBuZXcgc
  GhvbmUgbnVtYmVyIHRvIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIuIElmIGEgbm90aWZpY2F0aW9uIHByb3ZpZGVyIGlzIGNvbmZpZ
  3VyZWQgdGhlIHVzZXIgd2lsbCByZWNlaXZlIGFuIHNtcyB3aXRoIGEgY29kZSB0byBhdXRoZW50aWNhdGUgdGhlIG51bWJlci6Ct
  RgPCg1hdXRoZW50aWNhdGVkgtPkkwIUOgEqGg8vdXNlcnMvbWUvcGhvbmUSxgIKDVZlcmlmeU15UGhvbmUSJS56aXRhZGVsLmF1d
  GgudjEuVmVyaWZ5TXlQaG9uZVJlcXVlc3QaJi56aXRhZGVsLmF1dGgudjEuVmVyaWZ5TXlQaG9uZVJlc3BvbnNlIuUBkkGsAQoKV
  XNlciBQaG9uZRIMVmVyaWZ5IFBob25lGo8BVmVyaWZ5IHRoZSBwaG9uZSBudW1iZXIgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlc
  iwgd2l0aCB0aGUgY29kZSB0aGF0IGhhcyBiZWVuIHNlbnQgdG8gdGhlIG51bWJlci4gU3RhdGUgb2YgdGhlIHBob25lIG51bWJlc
  iBpcyB2ZXJpZmllZCBhZnRlci6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIcOgEqIhcvdXNlcnMvbWUvcGhvbmUvX3ZlcmlmeRKEA
  woZUmVzZW5kTXlQaG9uZVZlcmlmaWNhdGlvbhIxLnppdGFkZWwuYXV0aC52MS5SZXNlbmRNeVBob25lVmVyaWZpY2F0aW9uUmVxd
  WVzdBoyLnppdGFkZWwuYXV0aC52MS5SZXNlbmRNeVBob25lVmVyaWZpY2F0aW9uUmVzcG9uc2Ui/wGSQbkBCgpVc2VyIFBob25lE
  hlSZXNlbmQgUGhvbmUgdmVyaWZpY2F0aW9uGo8BUmVzZW5kcyB0aGUgdmVyaWZpY2F0aW9uIG5vdGlmaWNhdGlvbiB0byB0aGUgb
  GFzdCBnaXZlbiBwaG9uZSBudW1iZXIgb2YgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gVGhlIG5vdGlmaWNhdGlvbiBwcm92aWRlc
  iBoYXMgdG8gYmUgY29uZmlndXJlZC6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIpOgEqIiQvdXNlcnMvbWUvcGhvbmUvX3Jlc2VuZ
  F92ZXJpZmljYXRpb24S7AEKDVJlbW92ZU15UGhvbmUSJS56aXRhZGVsLmF1dGgudjEuUmVtb3ZlTXlQaG9uZVJlcXVlc3QaJi56a
  XRhZGVsLmF1dGgudjEuUmVtb3ZlTXlQaG9uZVJlc3BvbnNlIosBkkFeCgpVc2VyIFBob25lEhNSZW1vdmUgUGhvbmUgTnVtYmVyG
  jtUaGUgcGhvbmUgbnVtYmVyIG9mIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIgd2lsbCBiZSByZW1vdmVkLoK1GA8KDWF1dGhlbnRpY
  2F0ZWSC0+STAhEqDy91c2Vycy9tZS9waG9uZRKjAgoOUmVtb3ZlTXlBdmF0YXISJi56aXRhZGVsLmF1dGgudjEuUmVtb3ZlTXlBd
  mF0YXJSZXF1ZXN0Gicueml0YWRlbC5hdXRoLnYxLlJlbW92ZU15QXZhdGFyUmVzcG9uc2UivwGSQZABCgRVc2VyEhBSZW1vdmUgT
  XkgQXZhdGFyGnZSZW1vdmUgdGhlIGF2YXRhciBvZiB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBJZiBubyBhdmF0YXIgaXMgc2V0I
  GEgc2hvcnRjdXQgb2YgdGhlIG5hbWUgb2YgdGhlIHVzZXIgd2lsbCBiZSBwcmVzZW50ZWQugrUYDwoNYXV0aGVudGljYXRlZILT5
  JMCEioQL3VzZXJzL21lL2F2YXRhchK7AgoQTGlzdE15TGlua2VkSURQcxIoLnppdGFkZWwuYXV0aC52MS5MaXN0TXlMaW5rZWRJR
  FBzUmVxdWVzdBopLnppdGFkZWwuYXV0aC52MS5MaXN0TXlMaW5rZWRJRFBzUmVzcG9uc2Ui0QGSQZkBChFVc2VyIFNvY2lhbCBMb
  2dpbhISTGlzdCBTb2NpYWwgTG9naW5zGnBSZXR1cm5zIGEgbGlzdCBvZiBhbGwgbGlua2VkIGlkZW50aXR5IHByb3ZpZGVycy9zb
  2NpYWwgbG9naW5zIG9mIHRoZSB1c2VyLiAoZS4gR29vZ2xlLCBNaWNyb3NvZnQsIEF6dXJlQUQsIGV0Yy4pgrUYDwoNYXV0aGVud
  GljYXRlZILT5JMCGzoBKiIWL3VzZXJzL21lL2lkcHMvX3NlYXJjaBLkAwoRUmVtb3ZlTXlMaW5rZWRJRFASKS56aXRhZGVsLmF1d
  GgudjEuUmVtb3ZlTXlMaW5rZWRJRFBSZXF1ZXN0Gioueml0YWRlbC5hdXRoLnYxLlJlbW92ZU15TGlua2VkSURQUmVzcG9uc2Ui9
  wKSQbACChFVc2VyIFNvY2lhbCBMb2dpbhITUmVtb3ZlIFNvY2lhbCBMb2dpbhqFAlJlbW92ZSBvbmUgb2YgdGhlIGxpbmtlZCBzb
  2NpYWwgbG9naW5zL2lkZW50aXR5IHByb3ZpZGVycyBvZiB0aGUgYXV0aGVudGljYXRlZCB1c2VyIChlLmcuIEdvb2dsZSwgTWljc
  m9zb2Z0LCBBenVyZUFELCBldGMuKS4gVGhlIHVzZXIgd2lsbCBub3QgYmUgYWJsZSB0byBsb2cgaW4gd2l0aCB0aGUgZ2l2ZW4gc
  HJvdmlkZXIgYWZ0ZXJ3YXJkLiBNYWtlIHN1cmUgdGhlIHVzZXIgZG9lcyBoYXZlIG90aGVyIHBvc3NpYmlsaXRpZXMgdG8gYXV0a
  GVudGljYXRlLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAioqKC91c2Vycy9tZS9pZHBzL3tpZHBfaWR9L3tsaW5rZWRfdXNlcl9pZ
  H0SvwIKEUxpc3RNeUF1dGhGYWN0b3JzEikueml0YWRlbC5hdXRoLnYxLkxpc3RNeUF1dGhGYWN0b3JzUmVxdWVzdBoqLnppdGFkZ
  WwuYXV0aC52MS5MaXN0TXlBdXRoRmFjdG9yc1Jlc3BvbnNlItIBkkGVAQoaVXNlciBBdXRoZW50aWNhdGlvbiBGYWN0b3ISG0xpc
  3QgQXV0aGVudGljYXRpb24gRmFjdG9ycxpaUmV0dXJucyBhIGxpc3Qgb2YgcG9zc2libGUgYXV0aGVudGljYXRpb24gZmFjdG9yc
  ywgbXVsdGktZmFjdG9yIChNRkEpLCBzZWNvbmQtZmFjdG9yICgyRkEpgrUYDwoNYXV0aGVudGljYXRlZILT5JMCICIeL3VzZXJzL
  21lL2F1dGhfZmFjdG9ycy9fc2VhcmNoEsgDChJBZGRNeUF1dGhGYWN0b3JPVFASKi56aXRhZGVsLmF1dGgudjEuQWRkTXlBdXRoR
  mFjdG9yT1RQUmVxdWVzdBorLnppdGFkZWwuYXV0aC52MS5BZGRNeUF1dGhGYWN0b3JPVFBSZXNwb25zZSLYApJBnAIKGlVzZXIgQ
  XV0aGVudGljYXRpb24gRmFjdG9yEhtBZGQgT25lLVRpbWUtUGFzc3dvcmQgKE9UUCka4AFBZGQgYSBuZXcgT25lLVRpbWUtUGFzc
  3dvcmQgKE9UUCkgZmFjdG9yIHRvIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIuIE9UUCBpcyBhbiBhdXRoZW50aWNhdG9yIGFwcCBsa
  WtlIEdvb2dsZS9NaWNyb3NvZnQgQXV0aGVudGljYXRvciwgQXV0aHksIGV0Yy4gT25seSBvbmUgT1RQIHBlciB1c2VyIGlzIGFsb
  G93ZWQuIEFmdGVyIGFkZGluZyBhIG5ldyBPVFAgaXQgaGFzIHRvIGJlIHZlcmlmaWVkLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STA
  h86ASoiGi91c2Vycy9tZS9hdXRoX2ZhY3RvcnMvb3RwEroDChVWZXJpZnlNeUF1dGhGYWN0b3JPVFASLS56aXRhZGVsLmF1dGgud
  jEuVmVyaWZ5TXlBdXRoRmFjdG9yT1RQUmVxdWVzdBouLnppdGFkZWwuYXV0aC52MS5WZXJpZnlNeUF1dGhGYWN0b3JPVFBSZXNwb
  25zZSLBApJB/QEKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yEh5WZXJpZnkgT25lLVRpbWUtUGFzc3dvcmQgKE9UUCkavgFWZ
  XJpZnkgdGhlIGxhc3QgYWRkZWQgT25lLVRpbWUtUGFzc3dvcmQgKE9UUCkgZmFjdG9yIG9mIHRoZSBhdXRoZW50aWNhdGVkIHVzZ
  XIuIE9UUCBpcyBhbiBhdXRoZW50aWNhdG9yIGFwcCBsaWtlIEdvb2dsZS9NaWNyb3NvZnQgQXV0aGVudGljYXRvciwgQXV0aHksI
  GV0Yy4gT25seSBvbmUgT1RQIHBlciB1c2VyIGlzIGFsbG93ZWQugrUYDwoNYXV0aGVudGljYXRlZILT5JMCJzoBKiIiL3VzZXJzL
  21lL2F1dGhfZmFjdG9ycy9vdHAvX3ZlcmlmeRLrAwoVUmVtb3ZlTXlBdXRoRmFjdG9yT1RQEi0ueml0YWRlbC5hdXRoLnYxLlJlb
  W92ZU15QXV0aEZhY3Rvck9UUFJlcXVlc3QaLi56aXRhZGVsLmF1dGgudjEuUmVtb3ZlTXlBdXRoRmFjdG9yT1RQUmVzcG9uc2Ui8
  gKSQbkCChpVc2VyIEF1dGhlbnRpY2F0aW9uIEZhY3RvchIeUmVtb3ZlIE9uZS1UaW1lLVBhc3N3b3JkIChPVFApGvoBUmVtb3ZlI
  HRoZSBjb25maWd1cmVkIE9uZS1UaW1lLVBhc3N3b3JkIChPVFApIGZhY3RvciBvZiB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBPV
  FAgaXMgYW4gYXV0aGVudGljYXRvciBhcHAgbGlrZSBHb29nbGUvTWljcm9zb2Z0IEF1dGhlbnRpY2F0b3IsIEF1dGh5LCBldGMuI
  EFzIG9ubHkgb25lIE9UUCBwZXIgdXNlciBpcyBhbGxvd2VkLCB0aGUgdXNlciB3aWxsIG5vdCBoYXZlIE9UUCBhcyBhIHNlY29uZ
  C1mYWN0b3IgYWZ0ZXJ3YXJkLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAhwqGi91c2Vycy9tZS9hdXRoX2ZhY3RvcnMvb3RwEs8DC
  hJBZGRNeUF1dGhGYWN0b3JVMkYSKi56aXRhZGVsLmF1dGgudjEuQWRkTXlBdXRoRmFjdG9yVTJGUmVxdWVzdBorLnppdGFkZWwuY
  XV0aC52MS5BZGRNeUF1dGhGYWN0b3JVMkZSZXNwb25zZSLfApJBowIKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yEiFBZGQgV
  W5pdmVyc2FsIFNlY29uZCBGYWN0b3IgKFUyRika4QFBZGQgYSBuZXcgVW5pdmVyc2FsLVNlY29uZC1GYWN0b3IgKFUyRikgdG8gd
  GhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gVTJGIGlzIGEgZGV2aWNlLWRlcGVuZGVudCBhdXRoZW50aWNhdGlvbiBsaWtlIEZpbmdlc
  lNjYW4sIEZhY2VJRCwgV2luZG93SGVsbG8sIGV0Yy4gVGhlIGZhY3RvciBoYXMgdG8gYmUgdmVyaWZpZWQgYWZ0ZXIgYWRkaW5nL
  iBNdWx0aXBsZSBmYWN0b3JzIGNhbiBiZSBhZGRlZC6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIfOgEqIhovdXNlcnMvbWUvYXV0a
  F9mYWN0b3JzL3UyZhLQAgoVVmVyaWZ5TXlBdXRoRmFjdG9yVTJGEi0ueml0YWRlbC5hdXRoLnYxLlZlcmlmeU15QXV0aEZhY3Rvc
  lUyRlJlcXVlc3QaLi56aXRhZGVsLmF1dGgudjEuVmVyaWZ5TXlBdXRoRmFjdG9yVTJGUmVzcG9uc2Ui1wGSQZMBChpVc2VyIEF1d
  GhlbnRpY2F0aW9uIEZhY3RvchIhQWRkIFVuaXZlcnNhbCBTZWNvbmQgRmFjdG9yIChVMkYpGlJWZXJpZnkgdGhlIGxhc3QgYWRkZ
  WQgbmV3IFVuaXZlcnNhbC1TZWNvbmQtRmFjdG9yIChVMkYpIHRvIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIugrUYDwoNYXV0aGVud
  GljYXRlZILT5JMCJzoBKiIiL3VzZXJzL21lL2F1dGhfZmFjdG9ycy91MmYvX3ZlcmlmeRLfAgoVUmVtb3ZlTXlBdXRoRmFjdG9yV
  TJGEi0ueml0YWRlbC5hdXRoLnYxLlJlbW92ZU15QXV0aEZhY3RvclUyRlJlcXVlc3QaLi56aXRhZGVsLmF1dGgudjEuUmVtb3ZlT
  XlBdXRoRmFjdG9yVTJGUmVzcG9uc2Ui5gGSQaIBChpVc2VyIEF1dGhlbnRpY2F0aW9uIEZhY3RvchIkUmVtb3ZlIFVuaXZlcnNhb
  CBTZWNvbmQgRmFjdG9yIChVMkYpGl5SZW1vdmUgYSBzcGVjaWZpYyBVbml2ZXJzYWwtU2Vjb25kLUZhY3RvciAoVTJGKSBmcm9tI
  HRoZSBhdXRoZW50aWNhdGVkIHVzZXIgYnkgc2VuZGluZyB0aGUgaWQugrUYDwoNYXV0aGVudGljYXRlZILT5JMCJyolL3VzZXJzL
  21lL2F1dGhfZmFjdG9ycy91MmYve3Rva2VuX2lkfRLPAgoSTGlzdE15UGFzc3dvcmRsZXNzEioueml0YWRlbC5hdXRoLnYxLkxpc
  3RNeVBhc3N3b3JkbGVzc1JlcXVlc3QaKy56aXRhZGVsLmF1dGgudjEuTGlzdE15UGFzc3dvcmRsZXNzUmVzcG9uc2Ui3wGSQaIBC
  hpVc2VyIEF1dGhlbnRpY2F0aW9uIEZhY3RvchIMTGlzdCBQYXNza2V5GnZHZXQgdGhlIGxpc3Qgb2YgY29uZmlndXJlZCBwYXNza
  2V5IGF1dGhlbnRpY2F0aW9uIG1ldGhvZHMuIExpa2UgRmluZ2VyUHJpbnQsIEZhY2VJRCwgV2luZG93c0hlbGxvLCBIYXJkd2FyZ
  VRva2VuLCBldGMugrUYDwoNYXV0aGVudGljYXRlZILT5JMCICIeL3VzZXJzL21lL3Bhc3N3b3JkbGVzcy9fc2VhcmNoEvQCChFBZ
  GRNeVBhc3N3b3JkbGVzcxIpLnppdGFkZWwuYXV0aC52MS5BZGRNeVBhc3N3b3JkbGVzc1JlcXVlc3QaKi56aXRhZGVsLmF1dGgud
  jEuQWRkTXlQYXNzd29yZGxlc3NSZXNwb25zZSKHApJBzwEKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yEgtBZGQgcGFzc2tle
  RqjAUFkZCBhIG5ldyBwYXNza2V5IGF1dGhlbnRpY2F0aW9uIG1ldGhvZCB0byB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBMaWtlI
  EZpbmdlclByaW50LCBGYWNlSUQsIFdpbmRvd3NIZWxsbywgSGFyZHdhcmVUb2tlbiwgZXRjLiBNdWx0aXBsZSBwYXNza2V5cyBjY
  W4gYmUgY29uZmlndXJlZC6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIbOgEqIhYvdXNlcnMvbWUvcGFzc3dvcmRsZXNzEpEEChVBZ
  GRNeVBhc3N3b3JkbGVzc0xpbmsSLS56aXRhZGVsLmF1dGgudjEuQWRkTXlQYXNzd29yZGxlc3NMaW5rUmVxdWVzdBouLnppdGFkZ
  WwuYXV0aC52MS5BZGRNeVBhc3N3b3JkbGVzc0xpbmtSZXNwb25zZSKYA5JB2gIKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yE
  hBBZGQgcGFzc2tleSBsaW5rGqkCQWRkcyBhIG5ldyBwYXNza2V5IGF1dGhlbnRpY2F0b3IgbGluayB0byB0aGUgYXV0aGVudGljY
  XRlZCB1c2VyIGFuZCByZXR1cm5zIGl0IGluIHRoZSByZXNwb25zZS4gVGhpcyBsaW5rIGVuYWJsZXMgdGhlIHVzZXIgdG8gcmVna
  XN0ZXIgYSBuZXcgZGV2aWNlIGlmIGN1cnJlbnQgcGFzc2tleSBkZXZpY2VzIGFyZSBhbGwgcGxhdGZvcm0gYXV0aGVudGljYXRvc
  nMuIGUuZy4gVXNlciBoYXMgYWxyZWFkeSByZWdpc3RlcmVkIFdpbmRvd3MgSGVsbG8gYW5kIHdhbnRzIHRvIHJlZ2lzdGVyIEZhY
  2VJRCBvbiB0aGUgaVBob25lgrUYDwoNYXV0aGVudGljYXRlZILT5JMCIToBKiIcL3VzZXJzL21lL3Bhc3N3b3JkbGVzcy9fbGlua
  xKoBAoWU2VuZE15UGFzc3dvcmRsZXNzTGluaxIuLnppdGFkZWwuYXV0aC52MS5TZW5kTXlQYXNzd29yZGxlc3NMaW5rUmVxdWVzd
  BovLnppdGFkZWwuYXV0aC52MS5TZW5kTXlQYXNzd29yZGxlc3NMaW5rUmVzcG9uc2UirAOSQekCChpVc2VyIEF1dGhlbnRpY2F0a
  W9uIEZhY3RvchIRU2VuZCBwYXNza2V5IGxpbmsatwJBZGRzIGEgbmV3IHBhc3NrZXkgYXV0aGVudGljYXRvciBsaW5rIHRvIHRoZ
  SBhdXRoZW50aWNhdGVkIHVzZXIgYW5kIHNlbmRzIGl0IHRvIHRoZSByZWdpc3RlcmVkIGVtYWlsIGFkZHJlc3MuIFRoaXMgbGlua
  yBlbmFibGVzIHRoZSB1c2VyIHRvIHJlZ2lzdGVyIGEgbmV3IGRldmljZSBpZiBjdXJyZW50IHBhc3NrZXkgZGV2aWNlcyBhcmUgY
  WxsIHBsYXRmb3JtIGF1dGhlbnRpY2F0b3JzLiBlLmcuIFVzZXIgaGFzIGFscmVhZHkgcmVnaXN0ZXJlZCBXaW5kb3dzIEhlbGxvI
  GFuZCB3YW50cyB0byByZWdpc3RlciBGYWNlSUQgb24gdGhlIGlQaG9uZYK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAiY6ASoiIS91c
  2Vycy9tZS9wYXNzd29yZGxlc3MvX3NlbmRfbGluaxKrAgoUVmVyaWZ5TXlQYXNzd29yZGxlc3MSLC56aXRhZGVsLmF1dGgudjEuV
  mVyaWZ5TXlQYXNzd29yZGxlc3NSZXF1ZXN0Gi0ueml0YWRlbC5hdXRoLnYxLlZlcmlmeU15UGFzc3dvcmRsZXNzUmVzcG9uc2Uit
  QGSQXYKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yEg5WZXJpZnkgcGFzc2tleRpIVmVyaWZpZXMgdGhlIGxhc3QgYWRkZWQgc
  GFzc2tleSBjb25maWd1cmF0aW9uIG9mIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIugrUYDwoNYXV0aGVudGljYXRlZILT5JMCIzoBK
  iIeL3VzZXJzL21lL3Bhc3N3b3JkbGVzcy9fdmVyaWZ5Ep0DChRSZW1vdmVNeVBhc3N3b3JkbGVzcxIsLnppdGFkZWwuYXV0aC52M
  S5SZW1vdmVNeVBhc3N3b3JkbGVzc1JlcXVlc3QaLS56aXRhZGVsLmF1dGgudjEuUmVtb3ZlTXlQYXNzd29yZGxlc3NSZXNwb25zZ
  SKnApJB5wEKGlVzZXIgQXV0aGVudGljYXRpb24gRmFjdG9yEg5SZW1vdmUgcGFzc2tleRq4AVJlbW92ZSBhIHBhc3NrZXkgY29uZ
  mlndXJhdGlvbiBmcm9tIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIuIFRoZSB1c2VyIHdpbGwgbm90IGJlIGFibGUgdG8gbG9nIGluI
  HdpdGggdGhhdCBjb25maWd1cmF0aW9uIGFmdGVyd2FyZC4gTWFrZSBzdXJlIHRoZSB1c2VyIGhhcyBvdGhlciBwb3NzaWJpbGl0a
  WVzIHRvIGxvZyBpbi6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIjKiEvdXNlcnMvbWUvcGFzc3dvcmRsZXNzL3t0b2tlbl9pZH0S7
  QIKEExpc3RNeVVzZXJHcmFudHMSKC56aXRhZGVsLmF1dGgudjEuTGlzdE15VXNlckdyYW50c1JlcXVlc3QaKS56aXRhZGVsLmF1d
  GgudjEuTGlzdE15VXNlckdyYW50c1Jlc3BvbnNlIoMCkkHLAQoaVXNlciBBdXRob3JpemF0aW9ucy9HcmFudHMSHUxpc3QgTXkgQ
  XV0aG9yaXphdGlvbnMvR3JhbnRzGo0BUmV0dXJucyBhIGxpc3Qgb2YgdGhlIGF1dGhvcml6YXRpb25zL3VzZXIgZ3JhbnRzIHRoZ
  SBhdXRoZW50aWNhdGVkIHVzZXIgaGFzLiBVc2VyIGdyYW50cyBjb25zaXN0IG9mIGFuIG9yZ2FuaXphdGlvbiwgYSBwcm9qZWN0I
  GFuZCAxLW4gcm9sZXMugrUYDwoNYXV0aGVudGljYXRlZILT5JMCGzoBKiIWL3VzZXJncmFudHMvbWUvX3NlYXJjaBLcAwoRTGlzd
  E15UHJvamVjdE9yZ3MSKS56aXRhZGVsLmF1dGgudjEuTGlzdE15UHJvamVjdE9yZ3NSZXF1ZXN0Gioueml0YWRlbC5hdXRoLnYxL
  kxpc3RNeVByb2plY3RPcmdzUmVzcG9uc2Ui7wKSQbICChpVc2VyIEF1dGhvcml6YXRpb25zL0dyYW50cxIVTGlzdCBNeSBPcmdhb
  ml6YXRpb25zGvwBUmV0dXJucyBhIGxpc3Qgb2YgdGhlIG9yZ2FuaXphdGlvbnMgd2hlcmUgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlc
  iBoYXMgYW55IGF1dGhvcml6YXRpb25zL3VzZXIgZ3JhbnRzLiBUaGUgcmVxdWVzdCBpcyBtYWRlIGluIHRoZSBjb250ZXh0IG9mI
  HRoZSByZXF1ZXN0ZWQgcHJvamVjdC4gVGhpcyByZXF1ZXN0IGNhbiBiZSB1c2VkIGluIG11bHRpLXRlbmFuY3kgYXBwbGljYXRpb
  25zIHRvIHNob3cgdGhlIHVzZXIgYSB0ZW5hbnQgc3dpdGNoZXIugrUYDwoNYXV0aGVudGljYXRlZILT5JMCIDoBKiIbL2dsb2Jhb
  C9wcm9qZWN0b3Jncy9fc2VhcmNoEpUDChhMaXN0TXlaaXRhZGVsUGVybWlzc2lvbnMSMC56aXRhZGVsLmF1dGgudjEuTGlzdE15W
  ml0YWRlbFBlcm1pc3Npb25zUmVxdWVzdBoxLnppdGFkZWwuYXV0aC52MS5MaXN0TXlaaXRhZGVsUGVybWlzc2lvbnNSZXNwb25zZ
  SKTApJB1QEKGlVzZXIgQXV0aG9yaXphdGlvbnMvR3JhbnRzEhtMaXN0IE15IFpJVEFERUwgUGVybWlzc2lvbnMamQFSZXR1cm5zI
  GEgbGlzdCBvZiBwZXJtaXNzaW9ucyB0aGUgYXV0aGVudGljYXRlZCB1c2VyIGhhcyBpbiBaSVRBREVMIGJhc2VkIG9uIHRoZSBtY
  W5hZ2VyIHJvbGVzIHRoZSB1c2VyIGhhcy4gKGUuZzogT1JHX09XTkVSID0gb3JnLnJlYWQsIG9yZy53cml0ZSwgLi4uKS6CtRgPC
  g1hdXRoZW50aWNhdGVkgtPkkwIhIh8vcGVybWlzc2lvbnMveml0YWRlbC9tZS9fc2VhcmNoEtQCChhMaXN0TXlQcm9qZWN0UGVyb
  Wlzc2lvbnMSMC56aXRhZGVsLmF1dGgudjEuTGlzdE15UHJvamVjdFBlcm1pc3Npb25zUmVxdWVzdBoxLnppdGFkZWwuYXV0aC52M
  S5MaXN0TXlQcm9qZWN0UGVybWlzc2lvbnNSZXNwb25zZSLSAZJBnAEKGlVzZXIgQXV0aG9yaXphdGlvbnMvR3JhbnRzEhVMaXN0I
  E15IFByb2plY3QgUm9sZXMaZ1JldHVybnMgYSBsaXN0IG9mIHJvbGVzIGZvciB0aGUgYXV0aGVudGljYXRlZCB1c2VyIGFuZCBmb
  3IgdGhlIHJlcXVlc3RpbmcgcHJvamVjdCAoYmFzZWQgb24gdGhlIHRva2VuKS6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIZIhcvc
  GVybWlzc2lvbnMvbWUvX3NlYXJjaBKfAgoRTGlzdE15TWVtYmVyc2hpcHMSKS56aXRhZGVsLmF1dGgudjEuTGlzdE15TWVtYmVyc
  2hpcHNSZXF1ZXN0Gioueml0YWRlbC5hdXRoLnYxLkxpc3RNeU1lbWJlcnNoaXBzUmVzcG9uc2UisgGSQXoKEFVzZXIgTWVtYmVyc
  2hpcHMSHUxpc3QgTXkgWklUQURFTCBNYW5hZ2VyIFJvbGVzGkdTaG93IGFsbCB0aGUgbWFuYWdlbWVudCByb2xlcyBteSB1c2VyI
  GhhcyBpbiBaSVRBREVMIChaSVRBREVMIE1hbmFnZXIpLoK1GA8KDWF1dGhlbnRpY2F0ZWSC0+STAhw6ASoiFy9tZW1iZXJzaGlwc
  y9tZS9fc2VhcmNoEvYCChBHZXRNeUxhYmVsUG9saWN5Eigueml0YWRlbC5hdXRoLnYxLkdldE15TGFiZWxQb2xpY3lSZXF1ZXN0G
  ikueml0YWRlbC5hdXRoLnYxLkdldE15TGFiZWxQb2xpY3lSZXNwb25zZSKMApJB3gEKCFBvbGljaWVzEhBHZXQgTGFiZWwgUG9sa
  WN5Gr8BUmV0dXJucyB0aGUgbGFiZWwgc2V0dGluZ3MgdGhhdCBzaG91bGQgYmUgdXNlZCBmb3IgdGhlIGF1dGhlbnRpY2F0ZWQgd
  XNlci4gSXQgaXMgc2V0IGVpdGhlciBvbiBhbiBpbnN0YW5jZSBvciBvcmdhbml6YXRpb24gbGV2ZWwuIFRoaXMgcG9saWN5IGRlZ
  mluZXMgdGhlIGJyYW5kaW5nLCBjb2xvcnMsIGZvbnRzLCBpbWFnZXMsIGV0Yy6CtRgPCg1hdXRoZW50aWNhdGVkgtPkkwIREg8vc
  G9saWNpZXMvbGFiZWwS/AIKEkdldE15UHJpdmFjeVBvbGljeRIqLnppdGFkZWwuYXV0aC52MS5HZXRNeVByaXZhY3lQb2xpY3lSZ
  XF1ZXN0Gisueml0YWRlbC5hdXRoLnYxLkdldE15UHJpdmFjeVBvbGljeVJlc3BvbnNlIowCkkHcAQoIUG9saWNpZXMSEkdldCBQc
  ml2YWN5IFBvbGljeRq7AVJldHVybnMgdGhlIHByaXZhY3kgc2V0dGluZ3MgdGhhdCBzaG91bGQgYmUgdXNlZCBmb3IgdGhlIGF1d
  GhlbnRpY2F0ZWQgdXNlci4gSXQgaXMgc2V0IGVpdGhlciBvbiBhbiBpbnN0YW5jZSBvciBvcmdhbml6YXRpb24gbGV2ZWwuIFRoa
  XMgcG9saWN5IGRlZmluZXMgdGhlIFRPUyBhbmQgdGVybXMgb2Ygc2VydmljZSBsaW5rcy6CtRgPCg1hdXRoZW50aWNhdGVkgtPkk
  wITEhEvcG9saWNpZXMvcHJpdmFjeRK7AwoQR2V0TXlMb2dpblBvbGljeRIoLnppdGFkZWwuYXV0aC52MS5HZXRNeUxvZ2luUG9sa
  WN5UmVxdWVzdBopLnppdGFkZWwuYXV0aC52MS5HZXRNeUxvZ2luUG9saWN5UmVzcG9uc2Ui0QKSQaMCCghQb2xpY2llcxIQR2V0I
  ExvZ2luIFBvbGljeRqEAlJldHVybnMgdGhlIGxvZ2luIHNldHRpbmdzIHRoYXQgc2hvdWxkIGJlIHVzZWQgZm9yIHRoZSBhdXRoZ
  W50aWNhdGVkIHVzZXIuIEl0IGlzIHNldCBlaXRoZXIgb24gYW4gaW5zdGFuY2Ugb3Igb3JnYW5pemF0aW9uIGxldmVsLiBUaGlzI
  HBvbGljeSBkZWZpbmVzIHdoYXQgcG9zc2liaWxpdGllcyB0aGUgdXNlciBoYXMgdG8gYXV0aGVudGljYXRlIGFuZCB0byB1c2Uga
  W4gdGhlIGxvZ2luLCBlLmcgc29jaWFsIGxvZ2lucywgTUZBLCBwYXNza2V5LCBldGMugrUYDwoNYXV0aGVudGljYXRlZILT5JMCE
  RIPL3BvbGljaWVzL2xvZ2luQvcIChNjb20ueml0YWRlbC5hdXRoLnYxQglBdXRoUHJvdG9QAVooZ2l0aHViLmNvbS96aXRhZGVsL
  3ppdGFkZWwvcGtnL2dycGMvYXV0aKICA1pBWKoCD1ppdGFkZWwuQXV0aC5WMcoCD1ppdGFkZWxcQXV0aFxWMeICG1ppdGFkZWxcQ
  XV0aFxWMVxHUEJNZXRhZGF0YeoCEVppdGFkZWw6OkF1dGg6OlYxkkHLBxL2AQobQXV0aGVudGljYXRpb24gQVBJIGFrYSBBdXRoE
  lZUaGUgYXV0aGVudGljYXRpb24gQVBJIGlzIHVzZWQgZm9yIGFsbCBvcGVyYXRpb25zIG9uIHRoZSBjdXJyZW50bHkgYXV0aGVud
  GljYXRlZCB1c2VyLiIuCgdaSVRBREVMEhNodHRwczovL3ppdGFkZWwuY29tGg5oaUB6aXRhZGVsLmNvbSpKChJBcGFjaGUgTGljZ
  W5zZSAyLjASNGh0dHBzOi8vZ2l0aHViLmNvbS96aXRhZGVsL3ppdGFkZWwvYmxvYi9tYWluL0xJQ0VOU0UyAzEuMBoPJFpJVEFER
  UxfRE9NQUlOIggvYXV0aC92MSoBAjIQYXBwbGljYXRpb24vanNvbjIQYXBwbGljYXRpb24vZ3JwYzIaYXBwbGljYXRpb24vZ3JwY
  y13ZWIrcHJvdG86EGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2dycGM6GmFwcGxpY2F0aW9uL2dycGMtd2ViK3Byb3RvW
  nkKDwoJQmFzaWNBdXRoEgIIAQpmCgZPQXV0aDISXAgDKAQyIiRaSVRBREVMX0RPTUFJTi9vYXV0aC92Mi9hdXRob3JpemU6HiRaS
  VRBREVMX0RPTUFJTi9vYXV0aC92Mi90b2tlbkISChAKBm9wZW5pZBIGb3BlbmlkYhQKEgoGT0F1dGgyEggKBm9wZW5pZGoJCgdHZ
  W5lcmFsas4BCghQb2xpY2llcxLBAVBvbGljaWVzIGFyZSBzZXR0aW5ncyB0aGF0IGFyZSBtYWRlIG9uIGVpdGhlciBhbiBpbnN0Y
  W5jZSBvciBvcmdhbml6YXRpb24gbGV2ZWwgb2YgWklUQURFTC4gVGhlIHBvbGljaWVzIHdpbGwgaGF2ZSBhbiBpbXBhY3Qgb24gd
  2hhdCBhIHVzZXIgaXMgYWxsb3dlZCB0byBkbyBvciB3aGF0IHNob3VsZCBiZSBzaG93biB0byB0aGUgdXNlci5qBgoEVXNlcmocC
  hpVc2VyIEF1dGhlbnRpY2F0aW9uIEZhY3RvcmoMCgpVc2VyIEVtYWlsag8KDVVzZXIgTWV0YWRhdGFqDAoKVXNlciBQaG9uZWoOC
  gxVc2VyIFByb2ZpbGVqEwoRVXNlciBTb2NpYWwgTG9naW5qDQoLVXNlciBUb2tlbnNyPgoiRGV0YWlsZWQgaW5mb3JtYXRpb24gY
  WJvdXQgWklUQURFTBIYaHR0cHM6Ly96aXRhZGVsLmNvbS9kb2NzYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.zitadel.user.v1.user.UserProto.javaDescriptor,
      com.zitadel.org.v1.org.OrgProto.javaDescriptor,
      com.zitadel.change.v1.change.ChangeProto.javaDescriptor,
      com.zitadel.v1.`object`.ObjectProto.javaDescriptor,
      com.zitadel.v1.options.OptionsProto.javaDescriptor,
      com.zitadel.policy.v1.policy.PolicyProto.javaDescriptor,
      com.zitadel.idp.v1.idp.IdpProto.javaDescriptor,
      com.zitadel.metadata.v1.metadata.MetadataProto.javaDescriptor,
      com.validate.validate.ValidateProto.javaDescriptor,
      com.google.api.annotations.AnnotationsProto.javaDescriptor,
      com.google.api.field_behavior.FieldBehaviorProto.javaDescriptor,
      com.google.protobuf.duration.DurationProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}