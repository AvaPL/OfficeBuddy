// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class Human(
    profile: _root_.scala.Option[com.zitadel.user.v1.user.Profile] = _root_.scala.None,
    email: _root_.scala.Option[com.zitadel.user.v1.user.Email] = _root_.scala.None,
    phone: _root_.scala.Option[com.zitadel.user.v1.user.Phone] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Human] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (profile.isDefined) {
        val __value = profile.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (email.isDefined) {
        val __value = email.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (phone.isDefined) {
        val __value = phone.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      profile.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      email.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      phone.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getProfile: com.zitadel.user.v1.user.Profile = profile.getOrElse(com.zitadel.user.v1.user.Profile.defaultInstance)
    def clearProfile: Human = copy(profile = _root_.scala.None)
    def withProfile(__v: com.zitadel.user.v1.user.Profile): Human = copy(profile = Option(__v))
    def getEmail: com.zitadel.user.v1.user.Email = email.getOrElse(com.zitadel.user.v1.user.Email.defaultInstance)
    def clearEmail: Human = copy(email = _root_.scala.None)
    def withEmail(__v: com.zitadel.user.v1.user.Email): Human = copy(email = Option(__v))
    def getPhone: com.zitadel.user.v1.user.Phone = phone.getOrElse(com.zitadel.user.v1.user.Phone.defaultInstance)
    def clearPhone: Human = copy(phone = _root_.scala.None)
    def withPhone(__v: com.zitadel.user.v1.user.Phone): Human = copy(phone = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => profile.orNull
        case 2 => email.orNull
        case 3 => phone.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => profile.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => email.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => phone.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.Human.type = com.zitadel.user.v1.user.Human
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.Human])
}

object Human extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Human] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Human] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.Human = {
    var __profile: _root_.scala.Option[com.zitadel.user.v1.user.Profile] = _root_.scala.None
    var __email: _root_.scala.Option[com.zitadel.user.v1.user.Email] = _root_.scala.None
    var __phone: _root_.scala.Option[com.zitadel.user.v1.user.Phone] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __profile = Option(__profile.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v1.user.Profile](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __email = Option(__email.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v1.user.Email](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __phone = Option(__phone.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v1.user.Phone](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.Human(
        profile = __profile,
        email = __email,
        phone = __phone,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.Human] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.Human(
        profile = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v1.user.Profile]]),
        email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v1.user.Email]]),
        phone = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v1.user.Phone]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.zitadel.user.v1.user.Profile
      case 2 => __out = com.zitadel.user.v1.user.Email
      case 3 => __out = com.zitadel.user.v1.user.Phone
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.user.v1.user.Human(
    profile = _root_.scala.None,
    email = _root_.scala.None,
    phone = _root_.scala.None
  )
  implicit class HumanLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Human]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.Human](_l) {
    def profile: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Profile] = field(_.getProfile)((c_, f_) => c_.copy(profile = Option(f_)))
    def optionalProfile: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.user.v1.user.Profile]] = field(_.profile)((c_, f_) => c_.copy(profile = f_))
    def email: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Email] = field(_.getEmail)((c_, f_) => c_.copy(email = Option(f_)))
    def optionalEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.user.v1.user.Email]] = field(_.email)((c_, f_) => c_.copy(email = f_))
    def phone: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Phone] = field(_.getPhone)((c_, f_) => c_.copy(phone = Option(f_)))
    def optionalPhone: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.user.v1.user.Phone]] = field(_.phone)((c_, f_) => c_.copy(phone = f_))
  }
  final val PROFILE_FIELD_NUMBER = 1
  final val EMAIL_FIELD_NUMBER = 2
  final val PHONE_FIELD_NUMBER = 3
  def of(
    profile: _root_.scala.Option[com.zitadel.user.v1.user.Profile],
    email: _root_.scala.Option[com.zitadel.user.v1.user.Email],
    phone: _root_.scala.Option[com.zitadel.user.v1.user.Phone]
  ): _root_.com.zitadel.user.v1.user.Human = _root_.com.zitadel.user.v1.user.Human(
    profile,
    email,
    phone
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.Human])
}
