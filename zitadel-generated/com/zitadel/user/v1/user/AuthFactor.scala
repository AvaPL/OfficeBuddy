// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class AuthFactor(
    state: com.zitadel.user.v1.user.AuthFactorState = com.zitadel.user.v1.user.AuthFactorState.AUTH_FACTOR_STATE_UNSPECIFIED,
    `type`: com.zitadel.user.v1.user.AuthFactor.Type = com.zitadel.user.v1.user.AuthFactor.Type.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AuthFactor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = state.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      if (`type`.otp.isDefined) {
        val __value = `type`.otp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (`type`.u2F.isDefined) {
        val __value = `type`.u2F.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = state.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      `type`.otp.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      `type`.u2F.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withState(__v: com.zitadel.user.v1.user.AuthFactorState): AuthFactor = copy(state = __v)
    def getOtp: com.zitadel.user.v1.user.AuthFactorOTP = `type`.otp.getOrElse(com.zitadel.user.v1.user.AuthFactorOTP.defaultInstance)
    def withOtp(__v: com.zitadel.user.v1.user.AuthFactorOTP): AuthFactor = copy(`type` = com.zitadel.user.v1.user.AuthFactor.Type.Otp(__v))
    def getU2F: com.zitadel.user.v1.user.AuthFactorU2F = `type`.u2F.getOrElse(com.zitadel.user.v1.user.AuthFactorU2F.defaultInstance)
    def withU2F(__v: com.zitadel.user.v1.user.AuthFactorU2F): AuthFactor = copy(`type` = com.zitadel.user.v1.user.AuthFactor.Type.U2F(__v))
    def clearType: AuthFactor = copy(`type` = com.zitadel.user.v1.user.AuthFactor.Type.Empty)
    def withType(__v: com.zitadel.user.v1.user.AuthFactor.Type): AuthFactor = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => `type`.otp.orNull
        case 3 => `type`.u2F.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
        case 2 => `type`.otp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => `type`.u2F.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.AuthFactor.type = com.zitadel.user.v1.user.AuthFactor
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.AuthFactor])
}

object AuthFactor extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.AuthFactor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.AuthFactor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.AuthFactor = {
    var __state: com.zitadel.user.v1.user.AuthFactorState = com.zitadel.user.v1.user.AuthFactorState.AUTH_FACTOR_STATE_UNSPECIFIED
    var __type: com.zitadel.user.v1.user.AuthFactor.Type = com.zitadel.user.v1.user.AuthFactor.Type.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __state = com.zitadel.user.v1.user.AuthFactorState.fromValue(_input__.readEnum())
        case 18 =>
          __type = com.zitadel.user.v1.user.AuthFactor.Type.Otp(__type.otp.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v1.user.AuthFactorOTP](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __type = com.zitadel.user.v1.user.AuthFactor.Type.U2F(__type.u2F.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v1.user.AuthFactorU2F](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.AuthFactor(
        state = __state,
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.AuthFactor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.AuthFactor(
        state = com.zitadel.user.v1.user.AuthFactorState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.user.v1.user.AuthFactorState.AUTH_FACTOR_STATE_UNSPECIFIED.scalaValueDescriptor).number),
        `type` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v1.user.AuthFactorOTP]]).map(com.zitadel.user.v1.user.AuthFactor.Type.Otp(_))
            .orElse[com.zitadel.user.v1.user.AuthFactor.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v1.user.AuthFactorU2F]]).map(com.zitadel.user.v1.user.AuthFactor.Type.U2F(_)))
            .getOrElse(com.zitadel.user.v1.user.AuthFactor.Type.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.user.v1.user.AuthFactorOTP
      case 3 => __out = com.zitadel.user.v1.user.AuthFactorU2F
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => com.zitadel.user.v1.user.AuthFactorState
    }
  }
  lazy val defaultInstance = com.zitadel.user.v1.user.AuthFactor(
    state = com.zitadel.user.v1.user.AuthFactorState.AUTH_FACTOR_STATE_UNSPECIFIED,
    `type` = com.zitadel.user.v1.user.AuthFactor.Type.Empty
  )
  sealed trait Type extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isOtp: _root_.scala.Boolean = false
    def isU2F: _root_.scala.Boolean = false
    def otp: _root_.scala.Option[com.zitadel.user.v1.user.AuthFactorOTP] = _root_.scala.None
    def u2F: _root_.scala.Option[com.zitadel.user.v1.user.AuthFactorU2F] = _root_.scala.None
  }
  object Type {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.user.v1.user.AuthFactor.Type {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Otp(value: com.zitadel.user.v1.user.AuthFactorOTP) extends com.zitadel.user.v1.user.AuthFactor.Type {
      type ValueType = com.zitadel.user.v1.user.AuthFactorOTP
      override def isOtp: _root_.scala.Boolean = true
      override def otp: _root_.scala.Option[com.zitadel.user.v1.user.AuthFactorOTP] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class U2F(value: com.zitadel.user.v1.user.AuthFactorU2F) extends com.zitadel.user.v1.user.AuthFactor.Type {
      type ValueType = com.zitadel.user.v1.user.AuthFactorU2F
      override def isU2F: _root_.scala.Boolean = true
      override def u2F: _root_.scala.Option[com.zitadel.user.v1.user.AuthFactorU2F] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  implicit class AuthFactorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.AuthFactor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.AuthFactor](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.AuthFactorState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def otp: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.AuthFactorOTP] = field(_.getOtp)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.AuthFactor.Type.Otp(f_)))
    def u2F: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.AuthFactorU2F] = field(_.getU2F)((c_, f_) => c_.copy(`type` = com.zitadel.user.v1.user.AuthFactor.Type.U2F(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.AuthFactor.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  final val OTP_FIELD_NUMBER = 2
  final val U2F_FIELD_NUMBER = 3
  def of(
    state: com.zitadel.user.v1.user.AuthFactorState,
    `type`: com.zitadel.user.v1.user.AuthFactor.Type
  ): _root_.com.zitadel.user.v1.user.AuthFactor = _root_.com.zitadel.user.v1.user.AuthFactor(
    state,
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.AuthFactor])
}
