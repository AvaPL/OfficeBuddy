// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.`object`.v2alpha.`object`

@SerialVersionUID(0L)
final case class RequestContext(
    resourceOwner: com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RequestContext] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (resourceOwner.orgId.isDefined) {
        val __value = resourceOwner.orgId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (resourceOwner.instance.isDefined) {
        val __value = resourceOwner.instance.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      resourceOwner.orgId.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      resourceOwner.instance.foreach { __v =>
        val __m = __v
        _output__.writeBool(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getOrgId: _root_.scala.Predef.String = resourceOwner.orgId.getOrElse("")
    def withOrgId(__v: _root_.scala.Predef.String): RequestContext = copy(resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.OrgId(__v))
    def getInstance: _root_.scala.Boolean = resourceOwner.instance.getOrElse(false)
    def withInstance(__v: _root_.scala.Boolean): RequestContext = copy(resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Instance(__v))
    def clearResourceOwner: RequestContext = copy(resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Empty)
    def withResourceOwner(__v: com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner): RequestContext = copy(resourceOwner = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => resourceOwner.orgId.orNull
        case 2 => resourceOwner.instance.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => resourceOwner.orgId.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => resourceOwner.instance.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.`object`.v2alpha.`object`.RequestContext.type = com.zitadel.`object`.v2alpha.`object`.RequestContext
    // @@protoc_insertion_point(GeneratedMessage[zitadel.object.v2alpha.RequestContext])
}

object RequestContext extends scalapb.GeneratedMessageCompanion[com.zitadel.`object`.v2alpha.`object`.RequestContext] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.`object`.v2alpha.`object`.RequestContext] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.`object`.v2alpha.`object`.RequestContext = {
    var __resourceOwner: com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.OrgId(_input__.readStringRequireUtf8())
        case 16 =>
          __resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Instance(_input__.readBool())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.`object`.v2alpha.`object`.RequestContext(
        resourceOwner = __resourceOwner,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.`object`.v2alpha.`object`.RequestContext] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.`object`.v2alpha.`object`.RequestContext(
        resourceOwner = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.OrgId(_))
            .orElse[com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Instance(_)))
            .getOrElse(com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ObjectProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ObjectProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.`object`.v2alpha.`object`.RequestContext(
    resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Empty
  )
  sealed trait ResourceOwner extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isOrgId: _root_.scala.Boolean = false
    def isInstance: _root_.scala.Boolean = false
    def orgId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def instance: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
  }
  object ResourceOwner {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class OrgId(value: _root_.scala.Predef.String) extends com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner {
      type ValueType = _root_.scala.Predef.String
      override def isOrgId: _root_.scala.Boolean = true
      override def orgId: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Instance(value: _root_.scala.Boolean) extends com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner {
      type ValueType = _root_.scala.Boolean
      override def isInstance: _root_.scala.Boolean = true
      override def instance: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  implicit class RequestContextLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.`object`.v2alpha.`object`.RequestContext]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.`object`.v2alpha.`object`.RequestContext](_l) {
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getOrgId)((c_, f_) => c_.copy(resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.OrgId(f_)))
    def instance: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getInstance)((c_, f_) => c_.copy(resourceOwner = com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner.Instance(f_)))
    def resourceOwner: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner] = field(_.resourceOwner)((c_, f_) => c_.copy(resourceOwner = f_))
  }
  final val ORG_ID_FIELD_NUMBER = 1
  final val INSTANCE_FIELD_NUMBER = 2
  def of(
    resourceOwner: com.zitadel.`object`.v2alpha.`object`.RequestContext.ResourceOwner
  ): _root_.com.zitadel.`object`.v2alpha.`object`.RequestContext = _root_.com.zitadel.`object`.v2alpha.`object`.RequestContext(
    resourceOwner
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.object.v2alpha.RequestContext])
}
