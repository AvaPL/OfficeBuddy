// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.system.v1.system

@SerialVersionUID(0L)
final case class CreateInstanceRequest(
    instanceName: _root_.scala.Predef.String = "",
    firstOrgName: _root_.scala.Predef.String = "",
    customDomain: _root_.scala.Predef.String = "",
    owner: com.zitadel.system.v1.system.CreateInstanceRequest.Owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Empty,
    defaultLanguage: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CreateInstanceRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = instanceName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = firstOrgName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = customDomain
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      if (owner.human.isDefined) {
        val __value = owner.human.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (owner.machine.isDefined) {
        val __value = owner.machine.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = defaultLanguage
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = instanceName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = firstOrgName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = customDomain
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      owner.human.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      owner.machine.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = defaultLanguage
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withInstanceName(__v: _root_.scala.Predef.String): CreateInstanceRequest = copy(instanceName = __v)
    def withFirstOrgName(__v: _root_.scala.Predef.String): CreateInstanceRequest = copy(firstOrgName = __v)
    def withCustomDomain(__v: _root_.scala.Predef.String): CreateInstanceRequest = copy(customDomain = __v)
    def getHuman: com.zitadel.system.v1.system.CreateInstanceRequest.Human = owner.human.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Human.defaultInstance)
    def withHuman(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Human): CreateInstanceRequest = copy(owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Human(__v))
    def getMachine: com.zitadel.system.v1.system.CreateInstanceRequest.Machine = owner.machine.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Machine.defaultInstance)
    def withMachine(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Machine): CreateInstanceRequest = copy(owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Machine(__v))
    def withDefaultLanguage(__v: _root_.scala.Predef.String): CreateInstanceRequest = copy(defaultLanguage = __v)
    def clearOwner: CreateInstanceRequest = copy(owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Empty)
    def withOwner(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Owner): CreateInstanceRequest = copy(owner = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = instanceName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = firstOrgName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = customDomain
          if (__t != "") __t else null
        }
        case 4 => owner.human.orNull
        case 5 => owner.machine.orNull
        case 6 => {
          val __t = defaultLanguage
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(instanceName)
        case 2 => _root_.scalapb.descriptors.PString(firstOrgName)
        case 3 => _root_.scalapb.descriptors.PString(customDomain)
        case 4 => owner.human.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => owner.machine.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PString(defaultLanguage)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.system.v1.system.CreateInstanceRequest.type = com.zitadel.system.v1.system.CreateInstanceRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest])
}

object CreateInstanceRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest = {
    var __instanceName: _root_.scala.Predef.String = ""
    var __firstOrgName: _root_.scala.Predef.String = ""
    var __customDomain: _root_.scala.Predef.String = ""
    var __defaultLanguage: _root_.scala.Predef.String = ""
    var __owner: com.zitadel.system.v1.system.CreateInstanceRequest.Owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __instanceName = _input__.readStringRequireUtf8()
        case 18 =>
          __firstOrgName = _input__.readStringRequireUtf8()
        case 26 =>
          __customDomain = _input__.readStringRequireUtf8()
        case 34 =>
          __owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Human(__owner.human.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.Human](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Machine(__owner.machine.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.Machine](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __defaultLanguage = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.system.v1.system.CreateInstanceRequest(
        instanceName = __instanceName,
        firstOrgName = __firstOrgName,
        customDomain = __customDomain,
        defaultLanguage = __defaultLanguage,
        owner = __owner,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.system.v1.system.CreateInstanceRequest(
        instanceName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        firstOrgName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        customDomain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        defaultLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        owner = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Human]]).map(com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Human(_))
            .orElse[com.zitadel.system.v1.system.CreateInstanceRequest.Owner](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Machine]]).map(com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Machine(_)))
            .getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SystemProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SystemProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.Human
      case 5 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.Machine
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Profile,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Email,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Password,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Human,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey,
      _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Machine
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest(
    instanceName = "",
    firstOrgName = "",
    customDomain = "",
    defaultLanguage = "",
    owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Empty
  )
  sealed trait Owner extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isHuman: _root_.scala.Boolean = false
    def isMachine: _root_.scala.Boolean = false
    def human: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Human] = _root_.scala.None
    def machine: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Machine] = _root_.scala.None
  }
  object Owner {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.system.v1.system.CreateInstanceRequest.Owner {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Human(value: com.zitadel.system.v1.system.CreateInstanceRequest.Human) extends com.zitadel.system.v1.system.CreateInstanceRequest.Owner {
      type ValueType = com.zitadel.system.v1.system.CreateInstanceRequest.Human
      override def isHuman: _root_.scala.Boolean = true
      override def human: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Human] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Machine(value: com.zitadel.system.v1.system.CreateInstanceRequest.Machine) extends com.zitadel.system.v1.system.CreateInstanceRequest.Owner {
      type ValueType = com.zitadel.system.v1.system.CreateInstanceRequest.Machine
      override def isMachine: _root_.scala.Boolean = true
      override def machine: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Machine] = Some(value)
      override def number: _root_.scala.Int = 5
    }
  }
  @SerialVersionUID(0L)
  final case class Profile(
      firstName: _root_.scala.Predef.String = "",
      lastName: _root_.scala.Predef.String = "",
      preferredLanguage: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Profile] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = firstName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = lastName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = preferredLanguage
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = firstName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = lastName
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = preferredLanguage
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withFirstName(__v: _root_.scala.Predef.String): Profile = copy(firstName = __v)
      def withLastName(__v: _root_.scala.Predef.String): Profile = copy(lastName = __v)
      def withPreferredLanguage(__v: _root_.scala.Predef.String): Profile = copy(preferredLanguage = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = firstName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = lastName
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = preferredLanguage
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(firstName)
          case 2 => _root_.scalapb.descriptors.PString(lastName)
          case 3 => _root_.scalapb.descriptors.PString(preferredLanguage)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.Profile.type = com.zitadel.system.v1.system.CreateInstanceRequest.Profile
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.Profile])
  }
  
  object Profile extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Profile] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Profile] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.Profile = {
      var __firstName: _root_.scala.Predef.String = ""
      var __lastName: _root_.scala.Predef.String = ""
      var __preferredLanguage: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __firstName = _input__.readStringRequireUtf8()
          case 18 =>
            __lastName = _input__.readStringRequireUtf8()
          case 26 =>
            __preferredLanguage = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.Profile(
          firstName = __firstName,
          lastName = __lastName,
          preferredLanguage = __preferredLanguage,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.Profile] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.Profile(
          firstName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          lastName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          preferredLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.Profile(
      firstName = "",
      lastName = "",
      preferredLanguage = ""
    )
    implicit class ProfileLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Profile]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Profile](_l) {
      def firstName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstName)((c_, f_) => c_.copy(firstName = f_))
      def lastName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastName)((c_, f_) => c_.copy(lastName = f_))
      def preferredLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.preferredLanguage)((c_, f_) => c_.copy(preferredLanguage = f_))
    }
    final val FIRST_NAME_FIELD_NUMBER = 1
    final val LAST_NAME_FIELD_NUMBER = 2
    final val PREFERRED_LANGUAGE_FIELD_NUMBER = 3
    def of(
      firstName: _root_.scala.Predef.String,
      lastName: _root_.scala.Predef.String,
      preferredLanguage: _root_.scala.Predef.String
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Profile = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Profile(
      firstName,
      lastName,
      preferredLanguage
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.Profile])
  }
  
  @SerialVersionUID(0L)
  final case class Email(
      email: _root_.scala.Predef.String = "",
      isEmailVerified: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Email] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = email
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = isEmailVerified
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = email
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = isEmailVerified
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withEmail(__v: _root_.scala.Predef.String): Email = copy(email = __v)
      def withIsEmailVerified(__v: _root_.scala.Boolean): Email = copy(isEmailVerified = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = email
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = isEmailVerified
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(email)
          case 2 => _root_.scalapb.descriptors.PBoolean(isEmailVerified)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.Email.type = com.zitadel.system.v1.system.CreateInstanceRequest.Email
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.Email])
  }
  
  object Email extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Email] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Email] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.Email = {
      var __email: _root_.scala.Predef.String = ""
      var __isEmailVerified: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __email = _input__.readStringRequireUtf8()
          case 16 =>
            __isEmailVerified = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.Email(
          email = __email,
          isEmailVerified = __isEmailVerified,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.Email] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.Email(
          email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          isEmailVerified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.Email(
      email = "",
      isEmailVerified = false
    )
    implicit class EmailLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Email]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Email](_l) {
      def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.email)((c_, f_) => c_.copy(email = f_))
      def isEmailVerified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isEmailVerified)((c_, f_) => c_.copy(isEmailVerified = f_))
    }
    final val EMAIL_FIELD_NUMBER = 1
    final val IS_EMAIL_VERIFIED_FIELD_NUMBER = 2
    def of(
      email: _root_.scala.Predef.String,
      isEmailVerified: _root_.scala.Boolean
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Email = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Email(
      email,
      isEmailVerified
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.Email])
  }
  
  @SerialVersionUID(0L)
  final case class Password(
      password: _root_.scala.Predef.String = "",
      passwordChangeRequired: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Password] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = password
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = passwordChangeRequired
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = password
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = passwordChangeRequired
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPassword(__v: _root_.scala.Predef.String): Password = copy(password = __v)
      def withPasswordChangeRequired(__v: _root_.scala.Boolean): Password = copy(passwordChangeRequired = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = password
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = passwordChangeRequired
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(password)
          case 2 => _root_.scalapb.descriptors.PBoolean(passwordChangeRequired)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.Password.type = com.zitadel.system.v1.system.CreateInstanceRequest.Password
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.Password])
  }
  
  object Password extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Password] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Password] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.Password = {
      var __password: _root_.scala.Predef.String = ""
      var __passwordChangeRequired: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __password = _input__.readStringRequireUtf8()
          case 16 =>
            __passwordChangeRequired = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.Password(
          password = __password,
          passwordChangeRequired = __passwordChangeRequired,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.Password] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.Password(
          password = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          passwordChangeRequired = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.Password(
      password = "",
      passwordChangeRequired = false
    )
    implicit class PasswordLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Password]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Password](_l) {
      def password: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.password)((c_, f_) => c_.copy(password = f_))
      def passwordChangeRequired: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.passwordChangeRequired)((c_, f_) => c_.copy(passwordChangeRequired = f_))
    }
    final val PASSWORD_FIELD_NUMBER = 1
    final val PASSWORD_CHANGE_REQUIRED_FIELD_NUMBER = 2
    def of(
      password: _root_.scala.Predef.String,
      passwordChangeRequired: _root_.scala.Boolean
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Password = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Password(
      password,
      passwordChangeRequired
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.Password])
  }
  
  @SerialVersionUID(0L)
  final case class Human(
      userName: _root_.scala.Predef.String = "",
      email: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Email] = _root_.scala.None,
      profile: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Profile] = _root_.scala.None,
      password: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Password] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Human] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = userName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (email.isDefined) {
          val __value = email.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (profile.isDefined) {
          val __value = profile.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (password.isDefined) {
          val __value = password.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = userName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        email.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        profile.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        password.foreach { __v =>
          val __m = __v
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withUserName(__v: _root_.scala.Predef.String): Human = copy(userName = __v)
      def getEmail: com.zitadel.system.v1.system.CreateInstanceRequest.Email = email.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Email.defaultInstance)
      def clearEmail: Human = copy(email = _root_.scala.None)
      def withEmail(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Email): Human = copy(email = Option(__v))
      def getProfile: com.zitadel.system.v1.system.CreateInstanceRequest.Profile = profile.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Profile.defaultInstance)
      def clearProfile: Human = copy(profile = _root_.scala.None)
      def withProfile(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Profile): Human = copy(profile = Option(__v))
      def getPassword: com.zitadel.system.v1.system.CreateInstanceRequest.Password = password.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.Password.defaultInstance)
      def clearPassword: Human = copy(password = _root_.scala.None)
      def withPassword(__v: com.zitadel.system.v1.system.CreateInstanceRequest.Password): Human = copy(password = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = userName
            if (__t != "") __t else null
          }
          case 2 => email.orNull
          case 3 => profile.orNull
          case 4 => password.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(userName)
          case 2 => email.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => profile.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => password.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.Human.type = com.zitadel.system.v1.system.CreateInstanceRequest.Human
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.Human])
  }
  
  object Human extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Human] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Human] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.Human = {
      var __userName: _root_.scala.Predef.String = ""
      var __email: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Email] = _root_.scala.None
      var __profile: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Profile] = _root_.scala.None
      var __password: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Password] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __userName = _input__.readStringRequireUtf8()
          case 18 =>
            __email = Option(__email.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.Email](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 26 =>
            __profile = Option(__profile.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.Profile](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __password = Option(__password.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.Password](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.Human(
          userName = __userName,
          email = __email,
          profile = __profile,
          password = __password,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.Human] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.Human(
          userName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Email]]),
          profile = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Profile]]),
          password = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Password]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.Email
        case 3 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.Profile
        case 4 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.Password
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.Human(
      userName = "",
      email = _root_.scala.None,
      profile = _root_.scala.None,
      password = _root_.scala.None
    )
    implicit class HumanLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Human]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Human](_l) {
      def userName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
      def email: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Email] = field(_.getEmail)((c_, f_) => c_.copy(email = Option(f_)))
      def optionalEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Email]] = field(_.email)((c_, f_) => c_.copy(email = f_))
      def profile: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Profile] = field(_.getProfile)((c_, f_) => c_.copy(profile = Option(f_)))
      def optionalProfile: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Profile]] = field(_.profile)((c_, f_) => c_.copy(profile = f_))
      def password: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Password] = field(_.getPassword)((c_, f_) => c_.copy(password = Option(f_)))
      def optionalPassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Password]] = field(_.password)((c_, f_) => c_.copy(password = f_))
    }
    final val USER_NAME_FIELD_NUMBER = 1
    final val EMAIL_FIELD_NUMBER = 2
    final val PROFILE_FIELD_NUMBER = 3
    final val PASSWORD_FIELD_NUMBER = 4
    def of(
      userName: _root_.scala.Predef.String,
      email: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Email],
      profile: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Profile],
      password: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.Password]
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Human = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Human(
      userName,
      email,
      profile,
      password
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.Human])
  }
  
  @SerialVersionUID(0L)
  final case class PersonalAccessToken(
      expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PersonalAccessToken] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        if (expirationDate.isDefined) {
          val __value = expirationDate.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        expirationDate.foreach { __v =>
          val __m = __v
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def getExpirationDate: com.google.protobuf.timestamp.Timestamp = expirationDate.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearExpirationDate: PersonalAccessToken = copy(expirationDate = _root_.scala.None)
      def withExpirationDate(__v: com.google.protobuf.timestamp.Timestamp): PersonalAccessToken = copy(expirationDate = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => expirationDate.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => expirationDate.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken.type = com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.PersonalAccessToken])
  }
  
  object PersonalAccessToken extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken = {
      var __expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __expirationDate = Option(__expirationDate.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken(
          expirationDate = __expirationDate,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken(
          expirationDate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 1 => __out = com.google.protobuf.timestamp.Timestamp
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken(
      expirationDate = _root_.scala.None
    )
    implicit class PersonalAccessTokenLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken](_l) {
      def expirationDate: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getExpirationDate)((c_, f_) => c_.copy(expirationDate = Option(f_)))
      def optionalExpirationDate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.expirationDate)((c_, f_) => c_.copy(expirationDate = f_))
    }
    final val EXPIRATION_DATE_FIELD_NUMBER = 1
    def of(
      expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken(
      expirationDate
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.PersonalAccessToken])
  }
  
  @SerialVersionUID(0L)
  final case class MachineKey(
      `type`: com.zitadel.authn.v1.auth_n_key.KeyType = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED,
      expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MachineKey] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = `type`.value
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
          }
        };
        if (expirationDate.isDefined) {
          val __value = expirationDate.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = `type`.value
          if (__v != 0) {
            _output__.writeEnum(1, __v)
          }
        };
        expirationDate.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withType(__v: com.zitadel.authn.v1.auth_n_key.KeyType): MachineKey = copy(`type` = __v)
      def getExpirationDate: com.google.protobuf.timestamp.Timestamp = expirationDate.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearExpirationDate: MachineKey = copy(expirationDate = _root_.scala.None)
      def withExpirationDate(__v: com.google.protobuf.timestamp.Timestamp): MachineKey = copy(expirationDate = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = `type`.javaValueDescriptor
            if (__t.getNumber() != 0) __t else null
          }
          case 2 => expirationDate.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
          case 2 => expirationDate.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey.type = com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.MachineKey])
  }
  
  object MachineKey extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey = {
      var __type: com.zitadel.authn.v1.auth_n_key.KeyType = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED
      var __expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __type = com.zitadel.authn.v1.auth_n_key.KeyType.fromValue(_input__.readEnum())
          case 18 =>
            __expirationDate = Option(__expirationDate.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey(
          `type` = __type,
          expirationDate = __expirationDate,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey(
          `type` = com.zitadel.authn.v1.auth_n_key.KeyType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED.scalaValueDescriptor).number),
          expirationDate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.google.protobuf.timestamp.Timestamp
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => com.zitadel.authn.v1.auth_n_key.KeyType
      }
    }
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey(
      `type` = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED,
      expirationDate = _root_.scala.None
    )
    implicit class MachineKeyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey](_l) {
      def `type`: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.authn.v1.auth_n_key.KeyType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def expirationDate: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getExpirationDate)((c_, f_) => c_.copy(expirationDate = Option(f_)))
      def optionalExpirationDate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.expirationDate)((c_, f_) => c_.copy(expirationDate = f_))
    }
    final val TYPE_FIELD_NUMBER = 1
    final val EXPIRATION_DATE_FIELD_NUMBER = 2
    def of(
      `type`: com.zitadel.authn.v1.auth_n_key.KeyType,
      expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey(
      `type`,
      expirationDate
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.MachineKey])
  }
  
  @SerialVersionUID(0L)
  final case class Machine(
      userName: _root_.scala.Predef.String = "",
      name: _root_.scala.Predef.String = "",
      personalAccessToken: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] = _root_.scala.None,
      machineKey: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Machine] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = userName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        if (personalAccessToken.isDefined) {
          val __value = personalAccessToken.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (machineKey.isDefined) {
          val __value = machineKey.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = userName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        personalAccessToken.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        machineKey.foreach { __v =>
          val __m = __v
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withUserName(__v: _root_.scala.Predef.String): Machine = copy(userName = __v)
      def withName(__v: _root_.scala.Predef.String): Machine = copy(name = __v)
      def getPersonalAccessToken: com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken = personalAccessToken.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken.defaultInstance)
      def clearPersonalAccessToken: Machine = copy(personalAccessToken = _root_.scala.None)
      def withPersonalAccessToken(__v: com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken): Machine = copy(personalAccessToken = Option(__v))
      def getMachineKey: com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey = machineKey.getOrElse(com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey.defaultInstance)
      def clearMachineKey: Machine = copy(machineKey = _root_.scala.None)
      def withMachineKey(__v: com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey): Machine = copy(machineKey = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = userName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 3 => personalAccessToken.orNull
          case 4 => machineKey.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(userName)
          case 2 => _root_.scalapb.descriptors.PString(name)
          case 3 => personalAccessToken.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => machineKey.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.CreateInstanceRequest.Machine.type = com.zitadel.system.v1.system.CreateInstanceRequest.Machine
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.CreateInstanceRequest.Machine])
  }
  
  object Machine extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Machine] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.CreateInstanceRequest.Machine] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.CreateInstanceRequest.Machine = {
      var __userName: _root_.scala.Predef.String = ""
      var __name: _root_.scala.Predef.String = ""
      var __personalAccessToken: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] = _root_.scala.None
      var __machineKey: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __userName = _input__.readStringRequireUtf8()
          case 18 =>
            __name = _input__.readStringRequireUtf8()
          case 26 =>
            __personalAccessToken = Option(__personalAccessToken.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __machineKey = Option(__machineKey.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.CreateInstanceRequest.Machine(
          userName = __userName,
          name = __name,
          personalAccessToken = __personalAccessToken,
          machineKey = __machineKey,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.CreateInstanceRequest.Machine] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.CreateInstanceRequest.Machine(
          userName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          personalAccessToken = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken]]),
          machineKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.javaDescriptor.getNestedTypes().get(6)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.CreateInstanceRequest.scalaDescriptor.nestedMessages(6)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 3 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken
        case 4 => __out = com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.CreateInstanceRequest.Machine(
      userName = "",
      name = "",
      personalAccessToken = _root_.scala.None,
      machineKey = _root_.scala.None
    )
    implicit class MachineLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Machine]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Machine](_l) {
      def userName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def personalAccessToken: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken] = field(_.getPersonalAccessToken)((c_, f_) => c_.copy(personalAccessToken = Option(f_)))
      def optionalPersonalAccessToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken]] = field(_.personalAccessToken)((c_, f_) => c_.copy(personalAccessToken = f_))
      def machineKey: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey] = field(_.getMachineKey)((c_, f_) => c_.copy(machineKey = Option(f_)))
      def optionalMachineKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey]] = field(_.machineKey)((c_, f_) => c_.copy(machineKey = f_))
    }
    final val USER_NAME_FIELD_NUMBER = 1
    final val NAME_FIELD_NUMBER = 2
    final val PERSONAL_ACCESS_TOKEN_FIELD_NUMBER = 3
    final val MACHINE_KEY_FIELD_NUMBER = 4
    def of(
      userName: _root_.scala.Predef.String,
      name: _root_.scala.Predef.String,
      personalAccessToken: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.PersonalAccessToken],
      machineKey: _root_.scala.Option[com.zitadel.system.v1.system.CreateInstanceRequest.MachineKey]
    ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Machine = _root_.com.zitadel.system.v1.system.CreateInstanceRequest.Machine(
      userName,
      name,
      personalAccessToken,
      machineKey
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest.Machine])
  }
  
  implicit class CreateInstanceRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest](_l) {
    def instanceName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.instanceName)((c_, f_) => c_.copy(instanceName = f_))
    def firstOrgName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstOrgName)((c_, f_) => c_.copy(firstOrgName = f_))
    def customDomain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.customDomain)((c_, f_) => c_.copy(customDomain = f_))
    def human: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Human] = field(_.getHuman)((c_, f_) => c_.copy(owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Human(f_)))
    def machine: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Machine] = field(_.getMachine)((c_, f_) => c_.copy(owner = com.zitadel.system.v1.system.CreateInstanceRequest.Owner.Machine(f_)))
    def defaultLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.defaultLanguage)((c_, f_) => c_.copy(defaultLanguage = f_))
    def owner: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.CreateInstanceRequest.Owner] = field(_.owner)((c_, f_) => c_.copy(owner = f_))
  }
  final val INSTANCE_NAME_FIELD_NUMBER = 1
  final val FIRST_ORG_NAME_FIELD_NUMBER = 2
  final val CUSTOM_DOMAIN_FIELD_NUMBER = 3
  final val HUMAN_FIELD_NUMBER = 4
  final val MACHINE_FIELD_NUMBER = 5
  final val DEFAULT_LANGUAGE_FIELD_NUMBER = 6
  def of(
    instanceName: _root_.scala.Predef.String,
    firstOrgName: _root_.scala.Predef.String,
    customDomain: _root_.scala.Predef.String,
    owner: com.zitadel.system.v1.system.CreateInstanceRequest.Owner,
    defaultLanguage: _root_.scala.Predef.String
  ): _root_.com.zitadel.system.v1.system.CreateInstanceRequest = _root_.com.zitadel.system.v1.system.CreateInstanceRequest(
    instanceName,
    firstOrgName,
    customDomain,
    owner,
    defaultLanguage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.CreateInstanceRequest])
}
