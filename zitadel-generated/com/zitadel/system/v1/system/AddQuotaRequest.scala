// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.system.v1.system

/** @param unit
  *   the unit a quota should be imposed on
  * @param from
  *   the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
  * @param resetInterval
  *   the quota periods duration
  * @param amount
  *   the quota amount of units
  * @param limit
  *   whether ZITADEL should block further usage when the configured amount is used
  * @param notifications
  *   the handlers, ZITADEL executes when certain quota percentages are reached
  */
@SerialVersionUID(0L)
final case class AddQuotaRequest(
    instanceId: _root_.scala.Predef.String = "",
    unit: com.zitadel.quota.v1.quota.Unit = com.zitadel.quota.v1.quota.Unit.UNIT_UNIMPLEMENTED,
    from: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    resetInterval: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    amount: _root_.scala.Long = 0L,
    limit: _root_.scala.Boolean = false,
    notifications: _root_.scala.Seq[com.zitadel.quota.v1.quota.Notification] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddQuotaRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = instanceId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = unit.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      if (from.isDefined) {
        val __value = from.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (resetInterval.isDefined) {
        val __value = resetInterval.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = amount
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, __value)
        }
      };
      
      {
        val __value = limit
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, __value)
        }
      };
      notifications.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = instanceId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = unit.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      from.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      resetInterval.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = amount
        if (__v != 0L) {
          _output__.writeUInt64(5, __v)
        }
      };
      {
        val __v = limit
        if (__v != false) {
          _output__.writeBool(6, __v)
        }
      };
      notifications.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withInstanceId(__v: _root_.scala.Predef.String): AddQuotaRequest = copy(instanceId = __v)
    def withUnit(__v: com.zitadel.quota.v1.quota.Unit): AddQuotaRequest = copy(unit = __v)
    def getFrom: com.google.protobuf.timestamp.Timestamp = from.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearFrom: AddQuotaRequest = copy(from = _root_.scala.None)
    def withFrom(__v: com.google.protobuf.timestamp.Timestamp): AddQuotaRequest = copy(from = Option(__v))
    def getResetInterval: com.google.protobuf.duration.Duration = resetInterval.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearResetInterval: AddQuotaRequest = copy(resetInterval = _root_.scala.None)
    def withResetInterval(__v: com.google.protobuf.duration.Duration): AddQuotaRequest = copy(resetInterval = Option(__v))
    def withAmount(__v: _root_.scala.Long): AddQuotaRequest = copy(amount = __v)
    def withLimit(__v: _root_.scala.Boolean): AddQuotaRequest = copy(limit = __v)
    def clearNotifications = copy(notifications = _root_.scala.Seq.empty)
    def addNotifications(__vs: com.zitadel.quota.v1.quota.Notification *): AddQuotaRequest = addAllNotifications(__vs)
    def addAllNotifications(__vs: Iterable[com.zitadel.quota.v1.quota.Notification]): AddQuotaRequest = copy(notifications = notifications ++ __vs)
    def withNotifications(__v: _root_.scala.Seq[com.zitadel.quota.v1.quota.Notification]): AddQuotaRequest = copy(notifications = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = instanceId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = unit.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => from.orNull
        case 4 => resetInterval.orNull
        case 5 => {
          val __t = amount
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = limit
          if (__t != false) __t else null
        }
        case 7 => notifications
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(instanceId)
        case 2 => _root_.scalapb.descriptors.PEnum(unit.scalaValueDescriptor)
        case 3 => from.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => resetInterval.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PLong(amount)
        case 6 => _root_.scalapb.descriptors.PBoolean(limit)
        case 7 => _root_.scalapb.descriptors.PRepeated(notifications.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.system.v1.system.AddQuotaRequest.type = com.zitadel.system.v1.system.AddQuotaRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.AddQuotaRequest])
}

object AddQuotaRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddQuotaRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddQuotaRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.AddQuotaRequest = {
    var __instanceId: _root_.scala.Predef.String = ""
    var __unit: com.zitadel.quota.v1.quota.Unit = com.zitadel.quota.v1.quota.Unit.UNIT_UNIMPLEMENTED
    var __from: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __resetInterval: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __amount: _root_.scala.Long = 0L
    var __limit: _root_.scala.Boolean = false
    val __notifications: _root_.scala.collection.immutable.VectorBuilder[com.zitadel.quota.v1.quota.Notification] = new _root_.scala.collection.immutable.VectorBuilder[com.zitadel.quota.v1.quota.Notification]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __instanceId = _input__.readStringRequireUtf8()
        case 16 =>
          __unit = com.zitadel.quota.v1.quota.Unit.fromValue(_input__.readEnum())
        case 26 =>
          __from = Option(__from.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __resetInterval = Option(__resetInterval.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 40 =>
          __amount = _input__.readUInt64()
        case 48 =>
          __limit = _input__.readBool()
        case 58 =>
          __notifications += _root_.scalapb.LiteParser.readMessage[com.zitadel.quota.v1.quota.Notification](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.system.v1.system.AddQuotaRequest(
        instanceId = __instanceId,
        unit = __unit,
        from = __from,
        resetInterval = __resetInterval,
        amount = __amount,
        limit = __limit,
        notifications = __notifications.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.AddQuotaRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.system.v1.system.AddQuotaRequest(
        instanceId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        unit = com.zitadel.quota.v1.quota.Unit.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.quota.v1.quota.Unit.UNIT_UNIMPLEMENTED.scalaValueDescriptor).number),
        from = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        resetInterval = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        amount = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        limit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        notifications = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[com.zitadel.quota.v1.quota.Notification]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SystemProto.javaDescriptor.getMessageTypes().get(17)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SystemProto.scalaDescriptor.messages(17)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.google.protobuf.timestamp.Timestamp
      case 4 => __out = com.google.protobuf.duration.Duration
      case 7 => __out = com.zitadel.quota.v1.quota.Notification
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => com.zitadel.quota.v1.quota.Unit
    }
  }
  lazy val defaultInstance = com.zitadel.system.v1.system.AddQuotaRequest(
    instanceId = "",
    unit = com.zitadel.quota.v1.quota.Unit.UNIT_UNIMPLEMENTED,
    from = _root_.scala.None,
    resetInterval = _root_.scala.None,
    amount = 0L,
    limit = false,
    notifications = _root_.scala.Seq.empty
  )
  implicit class AddQuotaRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddQuotaRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.AddQuotaRequest](_l) {
    def instanceId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.instanceId)((c_, f_) => c_.copy(instanceId = f_))
    def unit: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.quota.v1.quota.Unit] = field(_.unit)((c_, f_) => c_.copy(unit = f_))
    def from: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getFrom)((c_, f_) => c_.copy(from = Option(f_)))
    def optionalFrom: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.from)((c_, f_) => c_.copy(from = f_))
    def resetInterval: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getResetInterval)((c_, f_) => c_.copy(resetInterval = Option(f_)))
    def optionalResetInterval: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.resetInterval)((c_, f_) => c_.copy(resetInterval = f_))
    def amount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.amount)((c_, f_) => c_.copy(amount = f_))
    def limit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.limit)((c_, f_) => c_.copy(limit = f_))
    def notifications: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.zitadel.quota.v1.quota.Notification]] = field(_.notifications)((c_, f_) => c_.copy(notifications = f_))
  }
  final val INSTANCE_ID_FIELD_NUMBER = 1
  final val UNIT_FIELD_NUMBER = 2
  final val FROM_FIELD_NUMBER = 3
  final val RESET_INTERVAL_FIELD_NUMBER = 4
  final val AMOUNT_FIELD_NUMBER = 5
  final val LIMIT_FIELD_NUMBER = 6
  final val NOTIFICATIONS_FIELD_NUMBER = 7
  def of(
    instanceId: _root_.scala.Predef.String,
    unit: com.zitadel.quota.v1.quota.Unit,
    from: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    resetInterval: _root_.scala.Option[com.google.protobuf.duration.Duration],
    amount: _root_.scala.Long,
    limit: _root_.scala.Boolean,
    notifications: _root_.scala.Seq[com.zitadel.quota.v1.quota.Notification]
  ): _root_.com.zitadel.system.v1.system.AddQuotaRequest = _root_.com.zitadel.system.v1.system.AddQuotaRequest(
    instanceId,
    unit,
    from,
    resetInterval,
    amount,
    limit,
    notifications
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.AddQuotaRequest])
}
