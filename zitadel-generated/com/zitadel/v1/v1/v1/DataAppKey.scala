// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.v1.v1.v1

@SerialVersionUID(0L)
final case class DataAppKey(
    id: _root_.scala.Predef.String = "",
    projectId: _root_.scala.Predef.String = "",
    appId: _root_.scala.Predef.String = "",
    clientId: _root_.scala.Predef.String = "",
    `type`: com.zitadel.authn.v1.auth_n_key.KeyType = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED,
    expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    publicKey: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DataAppKey] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = projectId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = appId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      if (expirationDate.isDefined) {
        val __value = expirationDate.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = publicKey
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = projectId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = appId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      expirationDate.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = publicKey
        if (!__v.isEmpty) {
          _output__.writeBytes(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Predef.String): DataAppKey = copy(id = __v)
    def withProjectId(__v: _root_.scala.Predef.String): DataAppKey = copy(projectId = __v)
    def withAppId(__v: _root_.scala.Predef.String): DataAppKey = copy(appId = __v)
    def withClientId(__v: _root_.scala.Predef.String): DataAppKey = copy(clientId = __v)
    def withType(__v: com.zitadel.authn.v1.auth_n_key.KeyType): DataAppKey = copy(`type` = __v)
    def getExpirationDate: com.google.protobuf.timestamp.Timestamp = expirationDate.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearExpirationDate: DataAppKey = copy(expirationDate = _root_.scala.None)
    def withExpirationDate(__v: com.google.protobuf.timestamp.Timestamp): DataAppKey = copy(expirationDate = Option(__v))
    def withPublicKey(__v: _root_.com.google.protobuf.ByteString): DataAppKey = copy(publicKey = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = projectId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = appId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => expirationDate.orNull
        case 7 => {
          val __t = publicKey
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => _root_.scalapb.descriptors.PString(projectId)
        case 3 => _root_.scalapb.descriptors.PString(appId)
        case 4 => _root_.scalapb.descriptors.PString(clientId)
        case 5 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 6 => expirationDate.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PByteString(publicKey)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.v1.v1.v1.DataAppKey.type = com.zitadel.v1.v1.v1.DataAppKey
    // @@protoc_insertion_point(GeneratedMessage[zitadel.v1.v1.DataAppKey])
}

object DataAppKey extends scalapb.GeneratedMessageCompanion[com.zitadel.v1.v1.v1.DataAppKey] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.v1.v1.v1.DataAppKey] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.v1.v1.v1.DataAppKey = {
    var __id: _root_.scala.Predef.String = ""
    var __projectId: _root_.scala.Predef.String = ""
    var __appId: _root_.scala.Predef.String = ""
    var __clientId: _root_.scala.Predef.String = ""
    var __type: com.zitadel.authn.v1.auth_n_key.KeyType = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED
    var __expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __publicKey: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __projectId = _input__.readStringRequireUtf8()
        case 26 =>
          __appId = _input__.readStringRequireUtf8()
        case 34 =>
          __clientId = _input__.readStringRequireUtf8()
        case 40 =>
          __type = com.zitadel.authn.v1.auth_n_key.KeyType.fromValue(_input__.readEnum())
        case 50 =>
          __expirationDate = Option(__expirationDate.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __publicKey = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.v1.v1.v1.DataAppKey(
        id = __id,
        projectId = __projectId,
        appId = __appId,
        clientId = __clientId,
        `type` = __type,
        expirationDate = __expirationDate,
        publicKey = __publicKey,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.v1.v1.v1.DataAppKey] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.v1.v1.v1.DataAppKey(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        appId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        `type` = com.zitadel.authn.v1.auth_n_key.KeyType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED.scalaValueDescriptor).number),
        expirationDate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        publicKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = V1Proto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = V1Proto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => com.zitadel.authn.v1.auth_n_key.KeyType
    }
  }
  lazy val defaultInstance = com.zitadel.v1.v1.v1.DataAppKey(
    id = "",
    projectId = "",
    appId = "",
    clientId = "",
    `type` = com.zitadel.authn.v1.auth_n_key.KeyType.KEY_TYPE_UNSPECIFIED,
    expirationDate = _root_.scala.None,
    publicKey = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class DataAppKeyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.v1.v1.DataAppKey]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.v1.v1.v1.DataAppKey](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def projectId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectId)((c_, f_) => c_.copy(projectId = f_))
    def appId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.appId)((c_, f_) => c_.copy(appId = f_))
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.authn.v1.auth_n_key.KeyType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def expirationDate: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getExpirationDate)((c_, f_) => c_.copy(expirationDate = Option(f_)))
    def optionalExpirationDate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.expirationDate)((c_, f_) => c_.copy(expirationDate = f_))
    def publicKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.publicKey)((c_, f_) => c_.copy(publicKey = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val PROJECT_ID_FIELD_NUMBER = 2
  final val APP_ID_FIELD_NUMBER = 3
  final val CLIENT_ID_FIELD_NUMBER = 4
  final val TYPE_FIELD_NUMBER = 5
  final val EXPIRATION_DATE_FIELD_NUMBER = 6
  final val PUBLIC_KEY_FIELD_NUMBER = 7
  def of(
    id: _root_.scala.Predef.String,
    projectId: _root_.scala.Predef.String,
    appId: _root_.scala.Predef.String,
    clientId: _root_.scala.Predef.String,
    `type`: com.zitadel.authn.v1.auth_n_key.KeyType,
    expirationDate: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    publicKey: _root_.com.google.protobuf.ByteString
  ): _root_.com.zitadel.v1.v1.v1.DataAppKey = _root_.com.zitadel.v1.v1.v1.DataAppKey(
    id,
    projectId,
    appId,
    clientId,
    `type`,
    expirationDate,
    publicKey
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.v1.v1.DataAppKey])
}
