// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.authn.v1.auth_n_key

sealed abstract class KeyType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = KeyType
  def isKeyTypeUnspecified: _root_.scala.Boolean = false
  def isKeyTypeJson: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[KeyType] = com.zitadel.authn.v1.auth_n_key.KeyType
  final def asRecognized: _root_.scala.Option[com.zitadel.authn.v1.auth_n_key.KeyType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.zitadel.authn.v1.auth_n_key.KeyType.Recognized])
}

object KeyType extends _root_.scalapb.GeneratedEnumCompanion[KeyType] {
  sealed trait Recognized extends KeyType
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[KeyType] = this
  
  @SerialVersionUID(0L)
  case object KEY_TYPE_UNSPECIFIED extends KeyType(0) with KeyType.Recognized {
    val index = 0
    val name = "KEY_TYPE_UNSPECIFIED"
    override def isKeyTypeUnspecified: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object KEY_TYPE_JSON extends KeyType(1) with KeyType.Recognized {
    val index = 1
    val name = "KEY_TYPE_JSON"
    override def isKeyTypeJson: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends KeyType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(KEY_TYPE_UNSPECIFIED, KEY_TYPE_JSON)
  def fromValue(__value: _root_.scala.Int): KeyType = __value match {
    case 0 => KEY_TYPE_UNSPECIFIED
    case 1 => KEY_TYPE_JSON
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = AuthNKeyProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = AuthNKeyProto.scalaDescriptor.enums(0)
}