// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.session.v2alpha.session_service

object SessionServiceProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.zitadel.`object`.v2alpha.`object`.ObjectProto,
    com.zitadel.protoc_gen_zitadel.v2.options.OptionsProto,
    com.zitadel.session.v2alpha.challenge.ChallengeProto,
    com.zitadel.session.v2alpha.session.SessionProto,
    com.google.api.annotations.AnnotationsProto,
    com.google.api.field_behavior.FieldBehaviorProto,
    com.google.protobuf.struct.StructProto,
    com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto,
    com.validate.validate.ValidateProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      com.zitadel.session.v2alpha.session_service.ListSessionsRequest,
      com.zitadel.session.v2alpha.session_service.ListSessionsResponse,
      com.zitadel.session.v2alpha.session_service.GetSessionRequest,
      com.zitadel.session.v2alpha.session_service.GetSessionResponse,
      com.zitadel.session.v2alpha.session_service.CreateSessionRequest,
      com.zitadel.session.v2alpha.session_service.CreateSessionResponse,
      com.zitadel.session.v2alpha.session_service.SetSessionRequest,
      com.zitadel.session.v2alpha.session_service.SetSessionResponse,
      com.zitadel.session.v2alpha.session_service.DeleteSessionRequest,
      com.zitadel.session.v2alpha.session_service.DeleteSessionResponse,
      com.zitadel.session.v2alpha.session_service.Checks,
      com.zitadel.session.v2alpha.session_service.CheckUser,
      com.zitadel.session.v2alpha.session_service.CheckPassword,
      com.zitadel.session.v2alpha.session_service.CheckPasskey,
      com.zitadel.session.v2alpha.session_service.CheckIntent
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Ci16aXRhZGVsL3Nlc3Npb24vdjJhbHBoYS9zZXNzaW9uX3NlcnZpY2UucHJvdG8SF3ppdGFkZWwuc2Vzc2lvbi52MmFscGhhG
  iN6aXRhZGVsL29iamVjdC92MmFscGhhL29iamVjdC5wcm90bxoreml0YWRlbC9wcm90b2NfZ2VuX3ppdGFkZWwvdjIvb3B0aW9uc
  y5wcm90bxoneml0YWRlbC9zZXNzaW9uL3YyYWxwaGEvY2hhbGxlbmdlLnByb3RvGiV6aXRhZGVsL3Nlc3Npb24vdjJhbHBoYS9zZ
  XNzaW9uLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvG
  hxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvGi5wcm90b2MtZ2VuLW9wZW5hcGl2Mi9vcHRpb25zL2Fubm90YXRpb25zLnByb
  3RvGhd2YWxpZGF0ZS92YWxpZGF0ZS5wcm90byKoAQoTTGlzdFNlc3Npb25zUmVxdWVzdBJDCgVxdWVyeRgBIAEoCzIhLnppdGFkZ
  Wwub2JqZWN0LnYyYWxwaGEuTGlzdFF1ZXJ5QgriPwcSBXF1ZXJ5UgVxdWVyeRJMCgdxdWVyaWVzGAIgAygLMiQueml0YWRlbC5zZ
  XNzaW9uLnYyYWxwaGEuU2VhcmNoUXVlcnlCDOI/CRIHcXVlcmllc1IHcXVlcmllcyKwAQoUTGlzdFNlc3Npb25zUmVzcG9uc2USS
  woHZGV0YWlscxgBIAEoCzIjLnppdGFkZWwub2JqZWN0LnYyYWxwaGEuTGlzdERldGFpbHNCDOI/CRIHZGV0YWlsc1IHZGV0YWlsc
  xJLCghzZXNzaW9ucxgCIAMoCzIgLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLlNlc3Npb25CDeI/ChIIc2Vzc2lvbnNSCHNlc3Npb
  25zIpEBChFHZXRTZXNzaW9uUmVxdWVzdBItCgpzZXNzaW9uX2lkGAEgASgJQg7iPwsSCXNlc3Npb25JZFIJc2Vzc2lvbklkEjsKD
  XNlc3Npb25fdG9rZW4YAiABKAlCEeI/DhIMc2Vzc2lvblRva2VuSABSDHNlc3Npb25Ub2tlbogBAUIQCg5fc2Vzc2lvbl90b2tlb
  iJeChJHZXRTZXNzaW9uUmVzcG9uc2USSAoHc2Vzc2lvbhgBIAEoCzIgLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLlNlc3Npb25CD
  OI/CRIHc2Vzc2lvblIHc2Vzc2lvbiKKBQoUQ3JlYXRlU2Vzc2lvblJlcXVlc3QSowEKBmNoZWNrcxgBIAEoCzIfLnppdGFkZWwuc
  2Vzc2lvbi52MmFscGhhLkNoZWNrc0Jq4j8IEgZjaGVja3OSQVwyWiJDaGVjayBmb3IgdXNlciBhbmQgcGFzc3dvcmQuIFN1Y2Nlc
  3NmdWwgY2hlY2tzIHdpbGwgYmUgc3RhdGVkIGFzIGZhY3RvcnMgb24gdGhlIHNlc3Npb24uIlIGY2hlY2tzEp4BCghtZXRhZGF0Y
  RgCIAMoCzI7LnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkNyZWF0ZVNlc3Npb25SZXF1ZXN0Lk1ldGFkYXRhRW50cnlCReI/ChIIb
  WV0YWRhdGGSQTUyMyJjdXN0b20ga2V5IHZhbHVlIGxpc3QgdG8gYmUgc3RvcmVkIG9uIHRoZSBzZXNzaW9uIlIIbWV0YWRhdGESV
  woKY2hhbGxlbmdlcxgDIAMoDjImLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkNoYWxsZW5nZUtpbmRCD+I/DBIKY2hhbGxlbmdlc
  1IKY2hhbGxlbmdlcxJ/CgZkb21haW4YBCABKAlCZ+I/CBIGZG9tYWlukkFZMlciRG9tYWluIG9uIHdoaWNoIHRoZSBzZXNzaW9uI
  HdhcyBjcmVhdGVkLiBXaWxsIGJlIHVzZWQgZm9yIFBhc3NrZXkgYW5kIFUyRiBjaGFsbGVuZ2VzLiJSBmRvbWFpbhpRCg1NZXRhZ
  GF0YUVudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleRIgCgV2YWx1ZRgCIAEoDEIK4j8HEgV2YWx1ZVIFdmFsdWU6AjgBI
  s8DChVDcmVhdGVTZXNzaW9uUmVzcG9uc2USRwoHZGV0YWlscxgBIAEoCzIfLnppdGFkZWwub2JqZWN0LnYyYWxwaGEuRGV0YWlsc
  0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzEm0KCnNlc3Npb25faWQYAiABKAlCTuI/CxIJc2Vzc2lvbklkkkE9MhMiaWQgb2YgdGhlI
  HNlc3Npb24iSiYiZDY1NGU2YmEtNzBhMy00OGVmLWE5NWQtMzdjOGQ4YTc5MDFhIlIJc2Vzc2lvbklkEqcBCg1zZXNzaW9uX3Rva
  2VuGAMgASgJQoEB4j8OEgxzZXNzaW9uVG9rZW6SQW0yayJ0b2tlbiBvZiB0aGUgc2Vzc2lvbiwgd2hpY2ggaXMgcmVxdWlyZWQgZ
  m9yIGZ1cnRoZXIgdXBkYXRlcyBvZiB0aGUgc2Vzc2lvbiBvciB0aGUgcmVxdWVzdCBvdGhlciByZXNvdXJjZXMiUgxzZXNzaW9uV
  G9rZW4SVAoKY2hhbGxlbmdlcxgEIAEoCzIjLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkNoYWxsZW5nZXNCD+I/DBIKY2hhbGxlb
  mdlc1IKY2hhbGxlbmdlcyKlBgoRU2V0U2Vzc2lvblJlcXVlc3QShwEKCnNlc3Npb25faWQYASABKAlCaOI/CxIJc2Vzc2lvbklkk
  kFNMh0iaWQgb2YgdGhlIHNlc3Npb24gdG8gdXBkYXRlIkomImQ2NTRlNmJhLTcwYTMtNDhlZi1hOTVkLTM3YzhkOGE3OTAxYSJ4y
  AGAAQH6QgdyBRABGMgBUglzZXNzaW9uSWQSlQEKDXNlc3Npb25fdG9rZW4YAiABKAlCcOI/DhIMc2Vzc2lvblRva2VukkFSMkoid
  G9rZW4gb2YgdGhlIHNlc3Npb24sIHByZXZpb3VzbHkgcmV0dXJuZWQgb24gdGhlIGNyZWF0ZSAvIHVwZGF0ZSByZXF1ZXN0InjIA
  YABAfpCB3IFEAEYyAFSDHNlc3Npb25Ub2tlbhKjAQoGY2hlY2tzGAMgASgLMh8ueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ2hlY
  2tzQmriPwgSBmNoZWNrc5JBXDJaIkNoZWNrIGZvciB1c2VyIGFuZCBwYXNzd29yZC4gU3VjY2Vzc2Z1bCBjaGVja3Mgd2lsbCBiZ
  SBzdGF0ZWQgYXMgZmFjdG9ycyBvbiB0aGUgc2Vzc2lvbi4iUgZjaGVja3MSmwEKCG1ldGFkYXRhGAQgAygLMjgueml0YWRlbC5zZ
  XNzaW9uLnYyYWxwaGEuU2V0U2Vzc2lvblJlcXVlc3QuTWV0YWRhdGFFbnRyeUJF4j8KEghtZXRhZGF0YZJBNTIzImN1c3RvbSBrZ
  XkgdmFsdWUgbGlzdCB0byBiZSBzdG9yZWQgb24gdGhlIHNlc3Npb24iUghtZXRhZGF0YRJXCgpjaGFsbGVuZ2VzGAUgAygOMiYue
  ml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ2hhbGxlbmdlS2luZEIP4j8MEgpjaGFsbGVuZ2VzUgpjaGFsbGVuZ2VzGlEKDU1ldGFkY
  XRhRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgMQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEi3
  QIKElNldFNlc3Npb25SZXNwb25zZRJHCgdkZXRhaWxzGAEgASgLMh8ueml0YWRlbC5vYmplY3QudjJhbHBoYS5EZXRhaWxzQgziP
  wkSB2RldGFpbHNSB2RldGFpbHMSpwEKDXNlc3Npb25fdG9rZW4YAiABKAlCgQHiPw4SDHNlc3Npb25Ub2tlbpJBbTJrInRva2VuI
  G9mIHRoZSBzZXNzaW9uLCB3aGljaCBpcyByZXF1aXJlZCBmb3IgZnVydGhlciB1cGRhdGVzIG9mIHRoZSBzZXNzaW9uIG9yIHRoZ
  SByZXF1ZXN0IG90aGVyIHJlc291cmNlcyJSDHNlc3Npb25Ub2tlbhJUCgpjaGFsbGVuZ2VzGAMgASgLMiMueml0YWRlbC5zZXNza
  W9uLnYyYWxwaGEuQ2hhbGxlbmdlc0IP4j8MEgpjaGFsbGVuZ2VzUgpjaGFsbGVuZ2VzIsICChREZWxldGVTZXNzaW9uUmVxdWVzd
  BKKAQoKc2Vzc2lvbl9pZBgBIAEoCUJr4j8LEglzZXNzaW9uSWSSQVAyICJpZCBvZiB0aGUgc2Vzc2lvbiB0byB0ZXJtaW5hdGUiS
  iYiZDY1NGU2YmEtNzBhMy00OGVmLWE5NWQtMzdjOGQ4YTc5MDFhInjIAYABAfpCB3IFEAEYyAFSCXNlc3Npb25JZBKKAQoNc2Vzc
  2lvbl90b2tlbhgCIAEoCUJg4j8OEgxzZXNzaW9uVG9rZW6SQUwySiJ0b2tlbiBvZiB0aGUgc2Vzc2lvbiwgcHJldmlvdXNseSByZ
  XR1cm5lZCBvbiB0aGUgY3JlYXRlIC8gdXBkYXRlIHJlcXVlc3QiSABSDHNlc3Npb25Ub2tlbogBAUIQCg5fc2Vzc2lvbl90b2tlb
  iJgChVEZWxldGVTZXNzaW9uUmVzcG9uc2USRwoHZGV0YWlscxgBIAEoCzIfLnppdGFkZWwub2JqZWN0LnYyYWxwaGEuRGV0YWlsc
  0IM4j8JEgdkZXRhaWxzUgdkZXRhaWxzIuEGCgZDaGVja3MSfwoEdXNlchgBIAEoCzIiLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhL
  kNoZWNrVXNlckJC4j8GEgR1c2VykkE2MjQiY2hlY2tzIHRoZSB1c2VyIGFuZCB1cGRhdGVzIHRoZSBzZXNzaW9uIG9uIHN1Y2Nlc
  3MiSABSBHVzZXKIAQES7gEKCHBhc3N3b3JkGAIgASgLMiYueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ2hlY2tQYXNzd29yZEKkA
  eI/ChIIcGFzc3dvcmSSQZMBMpABIkNoZWNrcyB0aGUgcGFzc3dvcmQgYW5kIHVwZGF0ZXMgdGhlIHNlc3Npb24gb24gc3VjY2Vzc
  y4gUmVxdWlyZXMgdGhhdCB0aGUgdXNlciBpcyBhbHJlYWR5IGNoZWNrZWQsIGVpdGhlciBpbiB0aGUgcHJldmlvdXMgb3IgdGhlI
  HNhbWUgcmVxdWVzdC4iSAFSCHBhc3N3b3JkiAEBEoYCCgdwYXNza2V5GAMgASgLMiUueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ
  2hlY2tQYXNza2V5Qr8B4j8JEgdwYXNza2V5kkGvATKsASJDaGVja3MgdGhlIHB1YmxpYyBrZXkgY3JlZGVudGlhbCBpc3N1ZWQgY
  nkgdGhlIHBhc3NrZXkgY2xpZW50LiBSZXF1aXJlcyB0aGF0IHRoZSB1c2VyIGlzIGFscmVhZHkgY2hlY2tlZCBhbmQgYSBwYXNza
  2V5IGNoYWxsZW5nZSB0byBiZSByZXF1ZXN0ZWQsIGluIGFueSBwcmV2aW91cyByZXF1ZXN0LiJIAlIHcGFzc2tleYgBARKuAQoGa
  W50ZW50GAQgASgLMiQueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ2hlY2tJbnRlbnRCa+I/CBIGaW50ZW50kkFdMlsiQ2hlY2tzI
  HRoZSBpbnRlbnQuIFJlcXVpcmVzIHRoYXQgdGhlIHVzZXJsaW5rIGlzIGFscmVhZHkgY2hlY2tlZCBhbmQgYSBzdWNjZXNzZnVsI
  GludGVudC4iSANSBmludGVudIgBAUIHCgVfdXNlckILCglfcGFzc3dvcmRCCgoIX3Bhc3NrZXlCCQoHX2ludGVudCLOAQoJQ2hlY
  2tVc2VyEmEKB3VzZXJfaWQYASABKAlCRuI/CBIGdXNlcklkkkEuSiYiZDY1NGU2YmEtNzBhMy00OGVmLWE5NWQtMzdjOGQ4YTc5M
  DFhInjIAYABAfpCB3IFEAEYyAFIAFIGdXNlcklkElQKCmxvZ2luX25hbWUYAiABKAlCM+I/CxIJbG9naW5OYW1lkkEYShAibWlua
  UBtb3VzZS5jb20ieMgBgAEB+kIHcgUQARjIAUgAUglsb2dpbk5hbWVCCAoGc2VhcmNoIlwKDUNoZWNrUGFzc3dvcmQSSwoIcGFzc
  3dvcmQYASABKAlCL+I/ChIIcGFzc3dvcmSSQRVKDSJWM3J5UzNjdXJlISJ4yAGAAQH6QgdyBRABGMgBUghwYXNzd29yZCLiAQoMQ
  2hlY2tQYXNza2V5EtEBChljcmVkZW50aWFsX2Fzc2VydGlvbl9kYXRhGAEgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEJ84
  j8ZEhdjcmVkZW50aWFsQXNzZXJ0aW9uRGF0YZJBUjJJSlNPTiByZXByZXNlbnRhdGlvbiBvZiBwdWJsaWMga2V5IGNyZWRlbnRpY
  WwgaXNzdWVkIGJ5IHRoZSBwYXNza2V5IGNsaWVudHiAgECAATfgQQL6QgWKAQIQAVIXY3JlZGVudGlhbEFzc2VydGlvbkRhdGEi/
  gIKC0NoZWNrSW50ZW50EroBCglpbnRlbnRfaWQYASABKAlCnAHiPwoSCGludGVudElkkkGBATJRSUQgb2YgdGhlIGludGVudCwgc
  HJldmlvdXNseSByZXR1cm5lZCBvbiB0aGUgc3VjY2VzcyByZXNwb25zZSBvZiB0aGUgSURQIGNhbGxiYWNrSiYiZDY1NGU2YmEtN
  zBhMy00OGVmLWE5NWQtMzdjOGQ4YTc5MDFhInjIAYABAfpCB3IFEAEYyAFSCGludGVudElkErEBCgV0b2tlbhgCIAEoCUKaAeI/B
  xIFdG9rZW6SQYIBMlR0b2tlbiBvZiB0aGUgaW50ZW50LCBwcmV2aW91c2x5IHJldHVybmVkIG9uIHRoZSBzdWNjZXNzIHJlc3Bvb
  nNlIG9mIHRoZSBJRFAgY2FsbGJhY2tKJCJTSktMM2lvSURwbzM0MmlvcXc5OGZqcDNzZGYzMndhaGI9InjIAYABAfpCB3IFEAEYy
  AFSBXRva2VuMqYLCg5TZXNzaW9uU2VydmljZRKXAgoMTGlzdFNlc3Npb25zEiwueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuTGlzd
  FNlc3Npb25zUmVxdWVzdBotLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkxpc3RTZXNzaW9uc1Jlc3BvbnNlIqkBkkFtEg9TZWFyY
  2ggc2Vzc2lvbnMaE1NlYXJjaCBmb3Igc2Vzc2lvbnNKCwoDMjAwEgQKAk9LSjgKAzQwMBIxChJpbnZhbGlkIGxpc3QgcXVlcnkSG
  woZGhcjL2RlZmluaXRpb25zL3JwY1N0YXR1c4q1GBEKDwoNYXV0aGVudGljYXRlZILT5JMCHjoBKiIZL3YyYWxwaGEvc2Vzc2lvb
  nMvX3NlYXJjaBKcAgoKR2V0U2Vzc2lvbhIqLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkdldFNlc3Npb25SZXF1ZXN0Gisueml0Y
  WRlbC5zZXNzaW9uLnYyYWxwaGEuR2V0U2Vzc2lvblJlc3BvbnNlIrQBkkF2Eg1HZXQgYSBzZXNzaW9uGlhHZXQgYSBzZXNzaW9uI
  GFuZCBhbGwgaXRzIGluZm9ybWF0aW9uIGxpa2UgdGhlIHRpbWUgb2YgdGhlIHVzZXIgb3IgcGFzc3dvcmQgdmVyaWZpY2F0aW9uS
  gsKAzIwMBIECgJPS4q1GBEKDwoNYXV0aGVudGljYXRlZILT5JMCIBIeL3YyYWxwaGEvc2Vzc2lvbnMve3Nlc3Npb25faWR9ErUCC
  g1DcmVhdGVTZXNzaW9uEi0ueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuQ3JlYXRlU2Vzc2lvblJlcXVlc3QaLi56aXRhZGVsLnNlc
  3Npb24udjJhbHBoYS5DcmVhdGVTZXNzaW9uUmVzcG9uc2UixAGSQYoBEhRDcmVhdGUgYSBuZXcgc2Vzc2lvbhplQ3JlYXRlIGEgb
  mV3IHNlc3Npb24uIEEgdG9rZW4gd2lsbCBiZSByZXR1cm5lZCwgd2hpY2ggaXMgcmVxdWlyZWQgZm9yIGZ1cnRoZXIgdXBkYXRlc
  yBvZiB0aGUgc2Vzc2lvbi5KCwoDMjAwEgQKAk9LirUYFgoPCg1hdXRoZW50aWNhdGVkEgMIyQGC0+STAhY6ASoiES92MmFscGhhL
  3Nlc3Npb25zEoQCCgpTZXRTZXNzaW9uEioueml0YWRlbC5zZXNzaW9uLnYyYWxwaGEuU2V0U2Vzc2lvblJlcXVlc3QaKy56aXRhZ
  GVsLnNlc3Npb24udjJhbHBoYS5TZXRTZXNzaW9uUmVzcG9uc2UinAGSQVsSGlVwZGF0ZSBhbiBleGlzdGluZyBzZXNzaW9uGjBVc
  GRhdGUgYW4gZXhpc3Rpbmcgc2Vzc2lvbiB3aXRoIG5ldyBpbmZvcm1hdGlvbi5KCwoDMjAwEgQKAk9LirUYEQoPCg1hdXRoZW50a
  WNhdGVkgtPkkwIjOgEqMh4vdjJhbHBoYS9zZXNzaW9ucy97c2Vzc2lvbl9pZH0SmwIKDURlbGV0ZVNlc3Npb24SLS56aXRhZGVsL
  nNlc3Npb24udjJhbHBoYS5EZWxldGVTZXNzaW9uUmVxdWVzdBouLnppdGFkZWwuc2Vzc2lvbi52MmFscGhhLkRlbGV0ZVNlc3Npb
  25SZXNwb25zZSKqAZJBaRIdVGVybWluYXRlIGFuIGV4aXN0aW5nIHNlc3Npb24aO1Rlcm1pbmF0ZSB5b3VyIG93biBzZXNzaW9uI
  G9yIGlmIGdyYW50ZWQgYW55IG90aGVyIHNlc3Npb24uSgsKAzIwMBIECgJPS4q1GBEKDwoNYXV0aGVudGljYXRlZILT5JMCIzoBK
  ioeL3YyYWxwaGEvc2Vzc2lvbnMve3Nlc3Npb25faWR9QugHChtjb20ueml0YWRlbC5zZXNzaW9uLnYyYWxwaGFCE1Nlc3Npb25TZ
  XJ2aWNlUHJvdG9QAVo7Z2l0aHViLmNvbS96aXRhZGVsL3ppdGFkZWwvcGtnL2dycGMvc2Vzc2lvbi92MmFscGhhO3Nlc3Npb26iA
  gNaU1iqAhdaaXRhZGVsLlNlc3Npb24uVjJhbHBoYcoCF1ppdGFkZWxcU2Vzc2lvblxWMmFscGhh4gIjWml0YWRlbFxTZXNzaW9uX
  FYyYWxwaGFcR1BCTWV0YWRhdGHqAhlaaXRhZGVsOjpTZXNzaW9uOjpWMmFscGhhkkH3BRLbAgoPU2Vzc2lvbiBTZXJ2aWNlEsgBV
  GhpcyBBUEkgaXMgaW50ZW5kZWQgdG8gbWFuYWdlIHNlc3Npb25zIGluIGEgWklUQURFTCBpbnN0YW5jZS4gVGhpcyBwcm9qZWN0I
  GlzIGluIGFscGhhIHN0YXRlLiBJdCBjYW4gQU5EIHdpbGwgY29udGludWUgYnJlYWtpbmcgdW50aWwgdGhlIHNlcnZpY2VzIHByb
  3ZpZGUgdGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyB0aGUgY3VycmVudCBsb2dpbi4iLgoHWklUQURFTBITaHR0cHM6Ly96aXRhZ
  GVsLmNvbRoOaGlAeml0YWRlbC5jb20qQgoKQXBhY2hlIDIuMBI0aHR0cHM6Ly9naXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9ib
  G9iL21haW4vTElDRU5TRTIJMi4wLWFscGhhGg8kWklUQURFTF9ET01BSU4iAS8qAgIBMhBhcHBsaWNhdGlvbi9qc29uMhBhcHBsa
  WNhdGlvbi9ncnBjMhphcHBsaWNhdGlvbi9ncnBjLXdlYitwcm90bzoQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vZ3JwY
  zoaYXBwbGljYXRpb24vZ3JwYy13ZWIrcHJvdG9SbQoDNDAzEmYKR1JldHVybmVkIHdoZW4gdGhlIHVzZXIgZG9lcyBub3QgaGF2Z
  SBwZXJtaXNzaW9uIHRvIGFjY2VzcyB0aGUgcmVzb3VyY2UuEhsKGRoXIy9kZWZpbml0aW9ucy9ycGNTdGF0dXNSUAoDNDA0EkkKK
  lJldHVybmVkIHdoZW4gdGhlIHJlc291cmNlIGRvZXMgbm90IGV4aXN0LhIbChkaFyMvZGVmaW5pdGlvbnMvcnBjU3RhdHVzcj4KI
  kRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IFpJVEFERUwSGGh0dHBzOi8veml0YWRlbC5jb20vZG9jc2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.zitadel.`object`.v2alpha.`object`.ObjectProto.javaDescriptor,
      com.zitadel.protoc_gen_zitadel.v2.options.OptionsProto.javaDescriptor,
      com.zitadel.session.v2alpha.challenge.ChallengeProto.javaDescriptor,
      com.zitadel.session.v2alpha.session.SessionProto.javaDescriptor,
      com.google.api.annotations.AnnotationsProto.javaDescriptor,
      com.google.api.field_behavior.FieldBehaviorProto.javaDescriptor,
      com.google.protobuf.struct.StructProto.javaDescriptor,
      com.grpc.gateway.protoc_gen_openapiv2.options.annotations.AnnotationsProto.javaDescriptor,
      com.validate.validate.ValidateProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}