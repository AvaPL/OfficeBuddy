// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.text.v1.text

@SerialVersionUID(0L)
final case class FooterText(
    tos: _root_.scala.Predef.String = "",
    privacyPolicy: _root_.scala.Predef.String = "",
    help: _root_.scala.Predef.String = "",
    supportEmail: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FooterText] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = tos
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = privacyPolicy
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = help
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = supportEmail
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = tos
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = privacyPolicy
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = help
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = supportEmail
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withTos(__v: _root_.scala.Predef.String): FooterText = copy(tos = __v)
    def withPrivacyPolicy(__v: _root_.scala.Predef.String): FooterText = copy(privacyPolicy = __v)
    def withHelp(__v: _root_.scala.Predef.String): FooterText = copy(help = __v)
    def withSupportEmail(__v: _root_.scala.Predef.String): FooterText = copy(supportEmail = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = tos
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = privacyPolicy
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = help
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = supportEmail
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(tos)
        case 3 => _root_.scalapb.descriptors.PString(privacyPolicy)
        case 5 => _root_.scalapb.descriptors.PString(help)
        case 7 => _root_.scalapb.descriptors.PString(supportEmail)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.text.v1.text.FooterText.type = com.zitadel.text.v1.text.FooterText
    // @@protoc_insertion_point(GeneratedMessage[zitadel.text.v1.FooterText])
}

object FooterText extends scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.FooterText] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.FooterText] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.text.v1.text.FooterText = {
    var __tos: _root_.scala.Predef.String = ""
    var __privacyPolicy: _root_.scala.Predef.String = ""
    var __help: _root_.scala.Predef.String = ""
    var __supportEmail: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __tos = _input__.readStringRequireUtf8()
        case 26 =>
          __privacyPolicy = _input__.readStringRequireUtf8()
        case 42 =>
          __help = _input__.readStringRequireUtf8()
        case 58 =>
          __supportEmail = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.text.v1.text.FooterText(
        tos = __tos,
        privacyPolicy = __privacyPolicy,
        help = __help,
        supportEmail = __supportEmail,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.text.v1.text.FooterText] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.text.v1.text.FooterText(
        tos = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        privacyPolicy = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        help = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        supportEmail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TextProto.javaDescriptor.getMessageTypes().get(32)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TextProto.scalaDescriptor.messages(32)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.text.v1.text.FooterText(
    tos = "",
    privacyPolicy = "",
    help = "",
    supportEmail = ""
  )
  implicit class FooterTextLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.text.v1.text.FooterText]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.text.v1.text.FooterText](_l) {
    def tos: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tos)((c_, f_) => c_.copy(tos = f_))
    def privacyPolicy: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.privacyPolicy)((c_, f_) => c_.copy(privacyPolicy = f_))
    def help: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.help)((c_, f_) => c_.copy(help = f_))
    def supportEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.supportEmail)((c_, f_) => c_.copy(supportEmail = f_))
  }
  final val TOS_FIELD_NUMBER = 1
  final val PRIVACY_POLICY_FIELD_NUMBER = 3
  final val HELP_FIELD_NUMBER = 5
  final val SUPPORT_EMAIL_FIELD_NUMBER = 7
  def of(
    tos: _root_.scala.Predef.String,
    privacyPolicy: _root_.scala.Predef.String,
    help: _root_.scala.Predef.String,
    supportEmail: _root_.scala.Predef.String
  ): _root_.com.zitadel.text.v1.text.FooterText = _root_.com.zitadel.text.v1.text.FooterText(
    tos,
    privacyPolicy,
    help,
    supportEmail
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.text.v1.FooterText])
}
