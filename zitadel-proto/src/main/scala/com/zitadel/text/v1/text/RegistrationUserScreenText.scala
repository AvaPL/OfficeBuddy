// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.text.v1.text

@SerialVersionUID(0L)
final case class RegistrationUserScreenText(
    title: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    descriptionOrgRegister: _root_.scala.Predef.String = "",
    firstnameLabel: _root_.scala.Predef.String = "",
    lastnameLabel: _root_.scala.Predef.String = "",
    emailLabel: _root_.scala.Predef.String = "",
    usernameLabel: _root_.scala.Predef.String = "",
    languageLabel: _root_.scala.Predef.String = "",
    genderLabel: _root_.scala.Predef.String = "",
    passwordLabel: _root_.scala.Predef.String = "",
    passwordConfirmLabel: _root_.scala.Predef.String = "",
    tosAndPrivacyLabel: _root_.scala.Predef.String = "",
    tosConfirm: _root_.scala.Predef.String = "",
    tosLinkText: _root_.scala.Predef.String = "",
    privacyConfirm: _root_.scala.Predef.String = "",
    privacyLinkText: _root_.scala.Predef.String = "",
    nextButtonText: _root_.scala.Predef.String = "",
    backButtonText: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RegistrationUserScreenText] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = title
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = descriptionOrgRegister
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = firstnameLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = lastnameLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = emailLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = usernameLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = languageLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      
      {
        val __value = genderLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      
      {
        val __value = passwordLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = passwordConfirmLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = tosAndPrivacyLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      
      {
        val __value = tosConfirm
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
        }
      };
      
      {
        val __value = tosLinkText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
        }
      };
      
      {
        val __value = privacyConfirm
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, __value)
        }
      };
      
      {
        val __value = privacyLinkText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(18, __value)
        }
      };
      
      {
        val __value = nextButtonText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(20, __value)
        }
      };
      
      {
        val __value = backButtonText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(21, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = title
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = descriptionOrgRegister
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = firstnameLabel
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = lastnameLabel
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = emailLabel
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = usernameLabel
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = languageLabel
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = genderLabel
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = passwordLabel
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = passwordConfirmLabel
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = tosAndPrivacyLabel
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      {
        val __v = tosConfirm
        if (!__v.isEmpty) {
          _output__.writeString(13, __v)
        }
      };
      {
        val __v = tosLinkText
        if (!__v.isEmpty) {
          _output__.writeString(15, __v)
        }
      };
      {
        val __v = privacyConfirm
        if (!__v.isEmpty) {
          _output__.writeString(16, __v)
        }
      };
      {
        val __v = privacyLinkText
        if (!__v.isEmpty) {
          _output__.writeString(18, __v)
        }
      };
      {
        val __v = nextButtonText
        if (!__v.isEmpty) {
          _output__.writeString(20, __v)
        }
      };
      {
        val __v = backButtonText
        if (!__v.isEmpty) {
          _output__.writeString(21, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withTitle(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(title = __v)
    def withDescription(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(description = __v)
    def withDescriptionOrgRegister(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(descriptionOrgRegister = __v)
    def withFirstnameLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(firstnameLabel = __v)
    def withLastnameLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(lastnameLabel = __v)
    def withEmailLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(emailLabel = __v)
    def withUsernameLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(usernameLabel = __v)
    def withLanguageLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(languageLabel = __v)
    def withGenderLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(genderLabel = __v)
    def withPasswordLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(passwordLabel = __v)
    def withPasswordConfirmLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(passwordConfirmLabel = __v)
    def withTosAndPrivacyLabel(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(tosAndPrivacyLabel = __v)
    def withTosConfirm(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(tosConfirm = __v)
    def withTosLinkText(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(tosLinkText = __v)
    def withPrivacyConfirm(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(privacyConfirm = __v)
    def withPrivacyLinkText(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(privacyLinkText = __v)
    def withNextButtonText(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(nextButtonText = __v)
    def withBackButtonText(__v: _root_.scala.Predef.String): RegistrationUserScreenText = copy(backButtonText = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = title
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = descriptionOrgRegister
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = firstnameLabel
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = lastnameLabel
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = emailLabel
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = usernameLabel
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = languageLabel
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = genderLabel
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = passwordLabel
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = passwordConfirmLabel
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = tosAndPrivacyLabel
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = tosConfirm
          if (__t != "") __t else null
        }
        case 15 => {
          val __t = tosLinkText
          if (__t != "") __t else null
        }
        case 16 => {
          val __t = privacyConfirm
          if (__t != "") __t else null
        }
        case 18 => {
          val __t = privacyLinkText
          if (__t != "") __t else null
        }
        case 20 => {
          val __t = nextButtonText
          if (__t != "") __t else null
        }
        case 21 => {
          val __t = backButtonText
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(title)
        case 2 => _root_.scalapb.descriptors.PString(description)
        case 3 => _root_.scalapb.descriptors.PString(descriptionOrgRegister)
        case 4 => _root_.scalapb.descriptors.PString(firstnameLabel)
        case 5 => _root_.scalapb.descriptors.PString(lastnameLabel)
        case 6 => _root_.scalapb.descriptors.PString(emailLabel)
        case 7 => _root_.scalapb.descriptors.PString(usernameLabel)
        case 8 => _root_.scalapb.descriptors.PString(languageLabel)
        case 9 => _root_.scalapb.descriptors.PString(genderLabel)
        case 10 => _root_.scalapb.descriptors.PString(passwordLabel)
        case 11 => _root_.scalapb.descriptors.PString(passwordConfirmLabel)
        case 12 => _root_.scalapb.descriptors.PString(tosAndPrivacyLabel)
        case 13 => _root_.scalapb.descriptors.PString(tosConfirm)
        case 15 => _root_.scalapb.descriptors.PString(tosLinkText)
        case 16 => _root_.scalapb.descriptors.PString(privacyConfirm)
        case 18 => _root_.scalapb.descriptors.PString(privacyLinkText)
        case 20 => _root_.scalapb.descriptors.PString(nextButtonText)
        case 21 => _root_.scalapb.descriptors.PString(backButtonText)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.text.v1.text.RegistrationUserScreenText.type = com.zitadel.text.v1.text.RegistrationUserScreenText
    // @@protoc_insertion_point(GeneratedMessage[zitadel.text.v1.RegistrationUserScreenText])
}

object RegistrationUserScreenText extends scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.RegistrationUserScreenText] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.RegistrationUserScreenText] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.text.v1.text.RegistrationUserScreenText = {
    var __title: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __descriptionOrgRegister: _root_.scala.Predef.String = ""
    var __firstnameLabel: _root_.scala.Predef.String = ""
    var __lastnameLabel: _root_.scala.Predef.String = ""
    var __emailLabel: _root_.scala.Predef.String = ""
    var __usernameLabel: _root_.scala.Predef.String = ""
    var __languageLabel: _root_.scala.Predef.String = ""
    var __genderLabel: _root_.scala.Predef.String = ""
    var __passwordLabel: _root_.scala.Predef.String = ""
    var __passwordConfirmLabel: _root_.scala.Predef.String = ""
    var __tosAndPrivacyLabel: _root_.scala.Predef.String = ""
    var __tosConfirm: _root_.scala.Predef.String = ""
    var __tosLinkText: _root_.scala.Predef.String = ""
    var __privacyConfirm: _root_.scala.Predef.String = ""
    var __privacyLinkText: _root_.scala.Predef.String = ""
    var __nextButtonText: _root_.scala.Predef.String = ""
    var __backButtonText: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __title = _input__.readStringRequireUtf8()
        case 18 =>
          __description = _input__.readStringRequireUtf8()
        case 26 =>
          __descriptionOrgRegister = _input__.readStringRequireUtf8()
        case 34 =>
          __firstnameLabel = _input__.readStringRequireUtf8()
        case 42 =>
          __lastnameLabel = _input__.readStringRequireUtf8()
        case 50 =>
          __emailLabel = _input__.readStringRequireUtf8()
        case 58 =>
          __usernameLabel = _input__.readStringRequireUtf8()
        case 66 =>
          __languageLabel = _input__.readStringRequireUtf8()
        case 74 =>
          __genderLabel = _input__.readStringRequireUtf8()
        case 82 =>
          __passwordLabel = _input__.readStringRequireUtf8()
        case 90 =>
          __passwordConfirmLabel = _input__.readStringRequireUtf8()
        case 98 =>
          __tosAndPrivacyLabel = _input__.readStringRequireUtf8()
        case 106 =>
          __tosConfirm = _input__.readStringRequireUtf8()
        case 122 =>
          __tosLinkText = _input__.readStringRequireUtf8()
        case 130 =>
          __privacyConfirm = _input__.readStringRequireUtf8()
        case 146 =>
          __privacyLinkText = _input__.readStringRequireUtf8()
        case 162 =>
          __nextButtonText = _input__.readStringRequireUtf8()
        case 170 =>
          __backButtonText = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.text.v1.text.RegistrationUserScreenText(
        title = __title,
        description = __description,
        descriptionOrgRegister = __descriptionOrgRegister,
        firstnameLabel = __firstnameLabel,
        lastnameLabel = __lastnameLabel,
        emailLabel = __emailLabel,
        usernameLabel = __usernameLabel,
        languageLabel = __languageLabel,
        genderLabel = __genderLabel,
        passwordLabel = __passwordLabel,
        passwordConfirmLabel = __passwordConfirmLabel,
        tosAndPrivacyLabel = __tosAndPrivacyLabel,
        tosConfirm = __tosConfirm,
        tosLinkText = __tosLinkText,
        privacyConfirm = __privacyConfirm,
        privacyLinkText = __privacyLinkText,
        nextButtonText = __nextButtonText,
        backButtonText = __backButtonText,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.text.v1.text.RegistrationUserScreenText] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.text.v1.text.RegistrationUserScreenText(
        title = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        descriptionOrgRegister = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        firstnameLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        lastnameLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        emailLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        usernameLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        languageLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        genderLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        passwordLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        passwordConfirmLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tosAndPrivacyLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tosConfirm = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tosLinkText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        privacyConfirm = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        privacyLinkText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        nextButtonText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        backButtonText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TextProto.javaDescriptor.getMessageTypes().get(25)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TextProto.scalaDescriptor.messages(25)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.text.v1.text.RegistrationUserScreenText(
    title = "",
    description = "",
    descriptionOrgRegister = "",
    firstnameLabel = "",
    lastnameLabel = "",
    emailLabel = "",
    usernameLabel = "",
    languageLabel = "",
    genderLabel = "",
    passwordLabel = "",
    passwordConfirmLabel = "",
    tosAndPrivacyLabel = "",
    tosConfirm = "",
    tosLinkText = "",
    privacyConfirm = "",
    privacyLinkText = "",
    nextButtonText = "",
    backButtonText = ""
  )
  implicit class RegistrationUserScreenTextLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.text.v1.text.RegistrationUserScreenText]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.text.v1.text.RegistrationUserScreenText](_l) {
    def title: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.title)((c_, f_) => c_.copy(title = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def descriptionOrgRegister: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.descriptionOrgRegister)((c_, f_) => c_.copy(descriptionOrgRegister = f_))
    def firstnameLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstnameLabel)((c_, f_) => c_.copy(firstnameLabel = f_))
    def lastnameLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastnameLabel)((c_, f_) => c_.copy(lastnameLabel = f_))
    def emailLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.emailLabel)((c_, f_) => c_.copy(emailLabel = f_))
    def usernameLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.usernameLabel)((c_, f_) => c_.copy(usernameLabel = f_))
    def languageLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.languageLabel)((c_, f_) => c_.copy(languageLabel = f_))
    def genderLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.genderLabel)((c_, f_) => c_.copy(genderLabel = f_))
    def passwordLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.passwordLabel)((c_, f_) => c_.copy(passwordLabel = f_))
    def passwordConfirmLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.passwordConfirmLabel)((c_, f_) => c_.copy(passwordConfirmLabel = f_))
    def tosAndPrivacyLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tosAndPrivacyLabel)((c_, f_) => c_.copy(tosAndPrivacyLabel = f_))
    def tosConfirm: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tosConfirm)((c_, f_) => c_.copy(tosConfirm = f_))
    def tosLinkText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tosLinkText)((c_, f_) => c_.copy(tosLinkText = f_))
    def privacyConfirm: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.privacyConfirm)((c_, f_) => c_.copy(privacyConfirm = f_))
    def privacyLinkText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.privacyLinkText)((c_, f_) => c_.copy(privacyLinkText = f_))
    def nextButtonText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.nextButtonText)((c_, f_) => c_.copy(nextButtonText = f_))
    def backButtonText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.backButtonText)((c_, f_) => c_.copy(backButtonText = f_))
  }
  final val TITLE_FIELD_NUMBER = 1
  final val DESCRIPTION_FIELD_NUMBER = 2
  final val DESCRIPTION_ORG_REGISTER_FIELD_NUMBER = 3
  final val FIRSTNAME_LABEL_FIELD_NUMBER = 4
  final val LASTNAME_LABEL_FIELD_NUMBER = 5
  final val EMAIL_LABEL_FIELD_NUMBER = 6
  final val USERNAME_LABEL_FIELD_NUMBER = 7
  final val LANGUAGE_LABEL_FIELD_NUMBER = 8
  final val GENDER_LABEL_FIELD_NUMBER = 9
  final val PASSWORD_LABEL_FIELD_NUMBER = 10
  final val PASSWORD_CONFIRM_LABEL_FIELD_NUMBER = 11
  final val TOS_AND_PRIVACY_LABEL_FIELD_NUMBER = 12
  final val TOS_CONFIRM_FIELD_NUMBER = 13
  final val TOS_LINK_TEXT_FIELD_NUMBER = 15
  final val PRIVACY_CONFIRM_FIELD_NUMBER = 16
  final val PRIVACY_LINK_TEXT_FIELD_NUMBER = 18
  final val NEXT_BUTTON_TEXT_FIELD_NUMBER = 20
  final val BACK_BUTTON_TEXT_FIELD_NUMBER = 21
  def of(
    title: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    descriptionOrgRegister: _root_.scala.Predef.String,
    firstnameLabel: _root_.scala.Predef.String,
    lastnameLabel: _root_.scala.Predef.String,
    emailLabel: _root_.scala.Predef.String,
    usernameLabel: _root_.scala.Predef.String,
    languageLabel: _root_.scala.Predef.String,
    genderLabel: _root_.scala.Predef.String,
    passwordLabel: _root_.scala.Predef.String,
    passwordConfirmLabel: _root_.scala.Predef.String,
    tosAndPrivacyLabel: _root_.scala.Predef.String,
    tosConfirm: _root_.scala.Predef.String,
    tosLinkText: _root_.scala.Predef.String,
    privacyConfirm: _root_.scala.Predef.String,
    privacyLinkText: _root_.scala.Predef.String,
    nextButtonText: _root_.scala.Predef.String,
    backButtonText: _root_.scala.Predef.String
  ): _root_.com.zitadel.text.v1.text.RegistrationUserScreenText = _root_.com.zitadel.text.v1.text.RegistrationUserScreenText(
    title,
    description,
    descriptionOrgRegister,
    firstnameLabel,
    lastnameLabel,
    emailLabel,
    usernameLabel,
    languageLabel,
    genderLabel,
    passwordLabel,
    passwordConfirmLabel,
    tosAndPrivacyLabel,
    tosConfirm,
    tosLinkText,
    privacyConfirm,
    privacyLinkText,
    nextButtonText,
    backButtonText
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.text.v1.RegistrationUserScreenText])
}
