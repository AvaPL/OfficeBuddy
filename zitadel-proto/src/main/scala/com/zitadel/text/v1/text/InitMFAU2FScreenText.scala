// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.text.v1.text

@SerialVersionUID(0L)
final case class InitMFAU2FScreenText(
    title: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    tokenNameLabel: _root_.scala.Predef.String = "",
    notSupported: _root_.scala.Predef.String = "",
    registerTokenButtonText: _root_.scala.Predef.String = "",
    errorRetry: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InitMFAU2FScreenText] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = title
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = tokenNameLabel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = notSupported
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = registerTokenButtonText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = errorRetry
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = title
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = tokenNameLabel
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = notSupported
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = registerTokenButtonText
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = errorRetry
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withTitle(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(title = __v)
    def withDescription(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(description = __v)
    def withTokenNameLabel(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(tokenNameLabel = __v)
    def withNotSupported(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(notSupported = __v)
    def withRegisterTokenButtonText(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(registerTokenButtonText = __v)
    def withErrorRetry(__v: _root_.scala.Predef.String): InitMFAU2FScreenText = copy(errorRetry = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = title
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = tokenNameLabel
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = notSupported
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = registerTokenButtonText
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = errorRetry
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(title)
        case 2 => _root_.scalapb.descriptors.PString(description)
        case 3 => _root_.scalapb.descriptors.PString(tokenNameLabel)
        case 4 => _root_.scalapb.descriptors.PString(notSupported)
        case 5 => _root_.scalapb.descriptors.PString(registerTokenButtonText)
        case 6 => _root_.scalapb.descriptors.PString(errorRetry)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.text.v1.text.InitMFAU2FScreenText.type = com.zitadel.text.v1.text.InitMFAU2FScreenText
    // @@protoc_insertion_point(GeneratedMessage[zitadel.text.v1.InitMFAU2FScreenText])
}

object InitMFAU2FScreenText extends scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.InitMFAU2FScreenText] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.text.v1.text.InitMFAU2FScreenText] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.text.v1.text.InitMFAU2FScreenText = {
    var __title: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __tokenNameLabel: _root_.scala.Predef.String = ""
    var __notSupported: _root_.scala.Predef.String = ""
    var __registerTokenButtonText: _root_.scala.Predef.String = ""
    var __errorRetry: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __title = _input__.readStringRequireUtf8()
        case 18 =>
          __description = _input__.readStringRequireUtf8()
        case 26 =>
          __tokenNameLabel = _input__.readStringRequireUtf8()
        case 34 =>
          __notSupported = _input__.readStringRequireUtf8()
        case 42 =>
          __registerTokenButtonText = _input__.readStringRequireUtf8()
        case 50 =>
          __errorRetry = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.text.v1.text.InitMFAU2FScreenText(
        title = __title,
        description = __description,
        tokenNameLabel = __tokenNameLabel,
        notSupported = __notSupported,
        registerTokenButtonText = __registerTokenButtonText,
        errorRetry = __errorRetry,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.text.v1.text.InitMFAU2FScreenText] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.text.v1.text.InitMFAU2FScreenText(
        title = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tokenNameLabel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        notSupported = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        registerTokenButtonText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        errorRetry = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TextProto.javaDescriptor.getMessageTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TextProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.text.v1.text.InitMFAU2FScreenText(
    title = "",
    description = "",
    tokenNameLabel = "",
    notSupported = "",
    registerTokenButtonText = "",
    errorRetry = ""
  )
  implicit class InitMFAU2FScreenTextLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.text.v1.text.InitMFAU2FScreenText]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.text.v1.text.InitMFAU2FScreenText](_l) {
    def title: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.title)((c_, f_) => c_.copy(title = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def tokenNameLabel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tokenNameLabel)((c_, f_) => c_.copy(tokenNameLabel = f_))
    def notSupported: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.notSupported)((c_, f_) => c_.copy(notSupported = f_))
    def registerTokenButtonText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.registerTokenButtonText)((c_, f_) => c_.copy(registerTokenButtonText = f_))
    def errorRetry: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.errorRetry)((c_, f_) => c_.copy(errorRetry = f_))
  }
  final val TITLE_FIELD_NUMBER = 1
  final val DESCRIPTION_FIELD_NUMBER = 2
  final val TOKEN_NAME_LABEL_FIELD_NUMBER = 3
  final val NOT_SUPPORTED_FIELD_NUMBER = 4
  final val REGISTER_TOKEN_BUTTON_TEXT_FIELD_NUMBER = 5
  final val ERROR_RETRY_FIELD_NUMBER = 6
  def of(
    title: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    tokenNameLabel: _root_.scala.Predef.String,
    notSupported: _root_.scala.Predef.String,
    registerTokenButtonText: _root_.scala.Predef.String,
    errorRetry: _root_.scala.Predef.String
  ): _root_.com.zitadel.text.v1.text.InitMFAU2FScreenText = _root_.com.zitadel.text.v1.text.InitMFAU2FScreenText(
    title,
    description,
    tokenNameLabel,
    notSupported,
    registerTokenButtonText,
    errorRetry
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.text.v1.InitMFAU2FScreenText])
}
