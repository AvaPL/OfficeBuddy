// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v1.user

@SerialVersionUID(0L)
final case class Session(
    sessionId: _root_.scala.Predef.String = "",
    agentId: _root_.scala.Predef.String = "",
    authState: com.zitadel.user.v1.user.SessionState = com.zitadel.user.v1.user.SessionState.SESSION_STATE_UNSPECIFIED,
    userId: _root_.scala.Predef.String = "",
    userName: _root_.scala.Predef.String = "",
    loginName: _root_.scala.Predef.String = "",
    displayName: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    avatarUrl: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Session] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sessionId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = agentId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = authState.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      
      {
        val __value = userId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = userName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = loginName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = avatarUrl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sessionId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = agentId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = authState.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      {
        val __v = userId
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = userName
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = loginName
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = avatarUrl
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSessionId(__v: _root_.scala.Predef.String): Session = copy(sessionId = __v)
    def withAgentId(__v: _root_.scala.Predef.String): Session = copy(agentId = __v)
    def withAuthState(__v: com.zitadel.user.v1.user.SessionState): Session = copy(authState = __v)
    def withUserId(__v: _root_.scala.Predef.String): Session = copy(userId = __v)
    def withUserName(__v: _root_.scala.Predef.String): Session = copy(userName = __v)
    def withLoginName(__v: _root_.scala.Predef.String): Session = copy(loginName = __v)
    def withDisplayName(__v: _root_.scala.Predef.String): Session = copy(displayName = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: Session = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): Session = copy(details = Option(__v))
    def withAvatarUrl(__v: _root_.scala.Predef.String): Session = copy(avatarUrl = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sessionId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = agentId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = authState.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = userName
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = loginName
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 9 => details.orNull
        case 10 => {
          val __t = avatarUrl
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(sessionId)
        case 2 => _root_.scalapb.descriptors.PString(agentId)
        case 3 => _root_.scalapb.descriptors.PEnum(authState.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PString(userId)
        case 5 => _root_.scalapb.descriptors.PString(userName)
        case 7 => _root_.scalapb.descriptors.PString(loginName)
        case 8 => _root_.scalapb.descriptors.PString(displayName)
        case 9 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => _root_.scalapb.descriptors.PString(avatarUrl)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v1.user.Session.type = com.zitadel.user.v1.user.Session
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v1.Session])
}

object Session extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Session] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v1.user.Session] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v1.user.Session = {
    var __sessionId: _root_.scala.Predef.String = ""
    var __agentId: _root_.scala.Predef.String = ""
    var __authState: com.zitadel.user.v1.user.SessionState = com.zitadel.user.v1.user.SessionState.SESSION_STATE_UNSPECIFIED
    var __userId: _root_.scala.Predef.String = ""
    var __userName: _root_.scala.Predef.String = ""
    var __loginName: _root_.scala.Predef.String = ""
    var __displayName: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __avatarUrl: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sessionId = _input__.readStringRequireUtf8()
        case 18 =>
          __agentId = _input__.readStringRequireUtf8()
        case 24 =>
          __authState = com.zitadel.user.v1.user.SessionState.fromValue(_input__.readEnum())
        case 34 =>
          __userId = _input__.readStringRequireUtf8()
        case 42 =>
          __userName = _input__.readStringRequireUtf8()
        case 58 =>
          __loginName = _input__.readStringRequireUtf8()
        case 66 =>
          __displayName = _input__.readStringRequireUtf8()
        case 74 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __avatarUrl = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v1.user.Session(
        sessionId = __sessionId,
        agentId = __agentId,
        authState = __authState,
        userId = __userId,
        userName = __userName,
        loginName = __loginName,
        displayName = __displayName,
        details = __details,
        avatarUrl = __avatarUrl,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v1.user.Session] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v1.user.Session(
        sessionId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        agentId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        authState = com.zitadel.user.v1.user.SessionState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.user.v1.user.SessionState.SESSION_STATE_UNSPECIFIED.scalaValueDescriptor).number),
        userId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        loginName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        avatarUrl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserProto.javaDescriptor.getMessageTypes().get(28)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserProto.scalaDescriptor.messages(28)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 9 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => com.zitadel.user.v1.user.SessionState
    }
  }
  lazy val defaultInstance = com.zitadel.user.v1.user.Session(
    sessionId = "",
    agentId = "",
    authState = com.zitadel.user.v1.user.SessionState.SESSION_STATE_UNSPECIFIED,
    userId = "",
    userName = "",
    loginName = "",
    displayName = "",
    details = _root_.scala.None,
    avatarUrl = ""
  )
  implicit class SessionLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.Session]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v1.user.Session](_l) {
    def sessionId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sessionId)((c_, f_) => c_.copy(sessionId = f_))
    def agentId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.agentId)((c_, f_) => c_.copy(agentId = f_))
    def authState: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v1.user.SessionState] = field(_.authState)((c_, f_) => c_.copy(authState = f_))
    def userId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def userName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
    def loginName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.loginName)((c_, f_) => c_.copy(loginName = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def avatarUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.avatarUrl)((c_, f_) => c_.copy(avatarUrl = f_))
  }
  final val SESSION_ID_FIELD_NUMBER = 1
  final val AGENT_ID_FIELD_NUMBER = 2
  final val AUTH_STATE_FIELD_NUMBER = 3
  final val USER_ID_FIELD_NUMBER = 4
  final val USER_NAME_FIELD_NUMBER = 5
  final val LOGIN_NAME_FIELD_NUMBER = 7
  final val DISPLAY_NAME_FIELD_NUMBER = 8
  final val DETAILS_FIELD_NUMBER = 9
  final val AVATAR_URL_FIELD_NUMBER = 10
  def of(
    sessionId: _root_.scala.Predef.String,
    agentId: _root_.scala.Predef.String,
    authState: com.zitadel.user.v1.user.SessionState,
    userId: _root_.scala.Predef.String,
    userName: _root_.scala.Predef.String,
    loginName: _root_.scala.Predef.String,
    displayName: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    avatarUrl: _root_.scala.Predef.String
  ): _root_.com.zitadel.user.v1.user.Session = _root_.com.zitadel.user.v1.user.Session(
    sessionId,
    agentId,
    authState,
    userId,
    userName,
    loginName,
    displayName,
    details,
    avatarUrl
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v1.Session])
}
