// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.user.v2alpha.user_service

@SerialVersionUID(0L)
final case class SetPasswordRequest(
    userId: _root_.scala.Predef.String = "",
    newPassword: _root_.scala.Option[com.zitadel.user.v2alpha.password.Password] = _root_.scala.None,
    verification: com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SetPasswordRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = userId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (newPassword.isDefined) {
        val __value = newPassword.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (verification.currentPassword.isDefined) {
        val __value = verification.currentPassword.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (verification.verificationCode.isDefined) {
        val __value = verification.verificationCode.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = userId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      newPassword.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      verification.currentPassword.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      verification.verificationCode.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withUserId(__v: _root_.scala.Predef.String): SetPasswordRequest = copy(userId = __v)
    def getNewPassword: com.zitadel.user.v2alpha.password.Password = newPassword.getOrElse(com.zitadel.user.v2alpha.password.Password.defaultInstance)
    def clearNewPassword: SetPasswordRequest = copy(newPassword = _root_.scala.None)
    def withNewPassword(__v: com.zitadel.user.v2alpha.password.Password): SetPasswordRequest = copy(newPassword = Option(__v))
    def getCurrentPassword: _root_.scala.Predef.String = verification.currentPassword.getOrElse("")
    def withCurrentPassword(__v: _root_.scala.Predef.String): SetPasswordRequest = copy(verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.CurrentPassword(__v))
    def getVerificationCode: _root_.scala.Predef.String = verification.verificationCode.getOrElse("")
    def withVerificationCode(__v: _root_.scala.Predef.String): SetPasswordRequest = copy(verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.VerificationCode(__v))
    def clearVerification: SetPasswordRequest = copy(verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.Empty)
    def withVerification(__v: com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification): SetPasswordRequest = copy(verification = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 2 => newPassword.orNull
        case 3 => verification.currentPassword.orNull
        case 4 => verification.verificationCode.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(userId)
        case 2 => newPassword.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => verification.currentPassword.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => verification.verificationCode.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.user.v2alpha.user_service.SetPasswordRequest.type = com.zitadel.user.v2alpha.user_service.SetPasswordRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.user.v2alpha.SetPasswordRequest])
}

object SetPasswordRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.user.v2alpha.user_service.SetPasswordRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.user.v2alpha.user_service.SetPasswordRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.user.v2alpha.user_service.SetPasswordRequest = {
    var __userId: _root_.scala.Predef.String = ""
    var __newPassword: _root_.scala.Option[com.zitadel.user.v2alpha.password.Password] = _root_.scala.None
    var __verification: com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __userId = _input__.readStringRequireUtf8()
        case 18 =>
          __newPassword = Option(__newPassword.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.user.v2alpha.password.Password](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.CurrentPassword(_input__.readStringRequireUtf8())
        case 34 =>
          __verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.VerificationCode(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.user.v2alpha.user_service.SetPasswordRequest(
        userId = __userId,
        newPassword = __newPassword,
        verification = __verification,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.user.v2alpha.user_service.SetPasswordRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.user.v2alpha.user_service.SetPasswordRequest(
        userId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        newPassword = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.user.v2alpha.password.Password]]),
        verification = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.CurrentPassword(_))
            .orElse[com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.VerificationCode(_)))
            .getOrElse(com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UserServiceProto.javaDescriptor.getMessageTypes().get(28)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UserServiceProto.scalaDescriptor.messages(28)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.user.v2alpha.password.Password
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.user.v2alpha.user_service.SetPasswordRequest(
    userId = "",
    newPassword = _root_.scala.None,
    verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.Empty
  )
  sealed trait Verification extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isCurrentPassword: _root_.scala.Boolean = false
    def isVerificationCode: _root_.scala.Boolean = false
    def currentPassword: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def verificationCode: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Verification {
    @SerialVersionUID(0L)
    case object Empty extends com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class CurrentPassword(value: _root_.scala.Predef.String) extends com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification {
      type ValueType = _root_.scala.Predef.String
      override def isCurrentPassword: _root_.scala.Boolean = true
      override def currentPassword: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class VerificationCode(value: _root_.scala.Predef.String) extends com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification {
      type ValueType = _root_.scala.Predef.String
      override def isVerificationCode: _root_.scala.Boolean = true
      override def verificationCode: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 4
    }
  }
  implicit class SetPasswordRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v2alpha.user_service.SetPasswordRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.user.v2alpha.user_service.SetPasswordRequest](_l) {
    def userId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def newPassword: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v2alpha.password.Password] = field(_.getNewPassword)((c_, f_) => c_.copy(newPassword = Option(f_)))
    def optionalNewPassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.user.v2alpha.password.Password]] = field(_.newPassword)((c_, f_) => c_.copy(newPassword = f_))
    def currentPassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getCurrentPassword)((c_, f_) => c_.copy(verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.CurrentPassword(f_)))
    def verificationCode: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getVerificationCode)((c_, f_) => c_.copy(verification = com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification.VerificationCode(f_)))
    def verification: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification] = field(_.verification)((c_, f_) => c_.copy(verification = f_))
  }
  final val USER_ID_FIELD_NUMBER = 1
  final val NEW_PASSWORD_FIELD_NUMBER = 2
  final val CURRENT_PASSWORD_FIELD_NUMBER = 3
  final val VERIFICATION_CODE_FIELD_NUMBER = 4
  def of(
    userId: _root_.scala.Predef.String,
    newPassword: _root_.scala.Option[com.zitadel.user.v2alpha.password.Password],
    verification: com.zitadel.user.v2alpha.user_service.SetPasswordRequest.Verification
  ): _root_.com.zitadel.user.v2alpha.user_service.SetPasswordRequest = _root_.com.zitadel.user.v2alpha.user_service.SetPasswordRequest(
    userId,
    newPassword,
    verification
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.user.v2alpha.SetPasswordRequest])
}
