// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.system.v1.system

@SerialVersionUID(0L)
final case class AddInstanceRequest(
    instanceName: _root_.scala.Predef.String = "",
    firstOrgName: _root_.scala.Predef.String = "",
    customDomain: _root_.scala.Predef.String = "",
    ownerUserName: _root_.scala.Predef.String = "",
    ownerEmail: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Email] = _root_.scala.None,
    ownerProfile: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Profile] = _root_.scala.None,
    ownerPassword: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Password] = _root_.scala.None,
    defaultLanguage: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddInstanceRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = instanceName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = firstOrgName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = customDomain
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = ownerUserName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      if (ownerEmail.isDefined) {
        val __value = ownerEmail.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (ownerProfile.isDefined) {
        val __value = ownerProfile.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (ownerPassword.isDefined) {
        val __value = ownerPassword.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = defaultLanguage
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = instanceName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = firstOrgName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = customDomain
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = ownerUserName
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      ownerEmail.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      ownerProfile.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      ownerPassword.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = defaultLanguage
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withInstanceName(__v: _root_.scala.Predef.String): AddInstanceRequest = copy(instanceName = __v)
    def withFirstOrgName(__v: _root_.scala.Predef.String): AddInstanceRequest = copy(firstOrgName = __v)
    def withCustomDomain(__v: _root_.scala.Predef.String): AddInstanceRequest = copy(customDomain = __v)
    def withOwnerUserName(__v: _root_.scala.Predef.String): AddInstanceRequest = copy(ownerUserName = __v)
    def getOwnerEmail: com.zitadel.system.v1.system.AddInstanceRequest.Email = ownerEmail.getOrElse(com.zitadel.system.v1.system.AddInstanceRequest.Email.defaultInstance)
    def clearOwnerEmail: AddInstanceRequest = copy(ownerEmail = _root_.scala.None)
    def withOwnerEmail(__v: com.zitadel.system.v1.system.AddInstanceRequest.Email): AddInstanceRequest = copy(ownerEmail = Option(__v))
    def getOwnerProfile: com.zitadel.system.v1.system.AddInstanceRequest.Profile = ownerProfile.getOrElse(com.zitadel.system.v1.system.AddInstanceRequest.Profile.defaultInstance)
    def clearOwnerProfile: AddInstanceRequest = copy(ownerProfile = _root_.scala.None)
    def withOwnerProfile(__v: com.zitadel.system.v1.system.AddInstanceRequest.Profile): AddInstanceRequest = copy(ownerProfile = Option(__v))
    def getOwnerPassword: com.zitadel.system.v1.system.AddInstanceRequest.Password = ownerPassword.getOrElse(com.zitadel.system.v1.system.AddInstanceRequest.Password.defaultInstance)
    def clearOwnerPassword: AddInstanceRequest = copy(ownerPassword = _root_.scala.None)
    def withOwnerPassword(__v: com.zitadel.system.v1.system.AddInstanceRequest.Password): AddInstanceRequest = copy(ownerPassword = Option(__v))
    def withDefaultLanguage(__v: _root_.scala.Predef.String): AddInstanceRequest = copy(defaultLanguage = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = instanceName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = firstOrgName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = customDomain
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = ownerUserName
          if (__t != "") __t else null
        }
        case 5 => ownerEmail.orNull
        case 6 => ownerProfile.orNull
        case 7 => ownerPassword.orNull
        case 8 => {
          val __t = defaultLanguage
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(instanceName)
        case 2 => _root_.scalapb.descriptors.PString(firstOrgName)
        case 3 => _root_.scalapb.descriptors.PString(customDomain)
        case 4 => _root_.scalapb.descriptors.PString(ownerUserName)
        case 5 => ownerEmail.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => ownerProfile.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => ownerPassword.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => _root_.scalapb.descriptors.PString(defaultLanguage)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.system.v1.system.AddInstanceRequest.type = com.zitadel.system.v1.system.AddInstanceRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.AddInstanceRequest])
}

object AddInstanceRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.AddInstanceRequest = {
    var __instanceName: _root_.scala.Predef.String = ""
    var __firstOrgName: _root_.scala.Predef.String = ""
    var __customDomain: _root_.scala.Predef.String = ""
    var __ownerUserName: _root_.scala.Predef.String = ""
    var __ownerEmail: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Email] = _root_.scala.None
    var __ownerProfile: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Profile] = _root_.scala.None
    var __ownerPassword: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Password] = _root_.scala.None
    var __defaultLanguage: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __instanceName = _input__.readStringRequireUtf8()
        case 18 =>
          __firstOrgName = _input__.readStringRequireUtf8()
        case 26 =>
          __customDomain = _input__.readStringRequireUtf8()
        case 34 =>
          __ownerUserName = _input__.readStringRequireUtf8()
        case 42 =>
          __ownerEmail = Option(__ownerEmail.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.AddInstanceRequest.Email](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __ownerProfile = Option(__ownerProfile.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.AddInstanceRequest.Profile](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __ownerPassword = Option(__ownerPassword.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.system.v1.system.AddInstanceRequest.Password](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __defaultLanguage = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.system.v1.system.AddInstanceRequest(
        instanceName = __instanceName,
        firstOrgName = __firstOrgName,
        customDomain = __customDomain,
        ownerUserName = __ownerUserName,
        ownerEmail = __ownerEmail,
        ownerProfile = __ownerProfile,
        ownerPassword = __ownerPassword,
        defaultLanguage = __defaultLanguage,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.AddInstanceRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.system.v1.system.AddInstanceRequest(
        instanceName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        firstOrgName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        customDomain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        ownerUserName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        ownerEmail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Email]]),
        ownerProfile = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Profile]]),
        ownerPassword = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Password]]),
        defaultLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SystemProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SystemProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = com.zitadel.system.v1.system.AddInstanceRequest.Email
      case 6 => __out = com.zitadel.system.v1.system.AddInstanceRequest.Profile
      case 7 => __out = com.zitadel.system.v1.system.AddInstanceRequest.Password
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.zitadel.system.v1.system.AddInstanceRequest.Profile,
      _root_.com.zitadel.system.v1.system.AddInstanceRequest.Email,
      _root_.com.zitadel.system.v1.system.AddInstanceRequest.Password
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.system.v1.system.AddInstanceRequest(
    instanceName = "",
    firstOrgName = "",
    customDomain = "",
    ownerUserName = "",
    ownerEmail = _root_.scala.None,
    ownerProfile = _root_.scala.None,
    ownerPassword = _root_.scala.None,
    defaultLanguage = ""
  )
  @SerialVersionUID(0L)
  final case class Profile(
      firstName: _root_.scala.Predef.String = "",
      lastName: _root_.scala.Predef.String = "",
      preferredLanguage: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Profile] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = firstName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = lastName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = preferredLanguage
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = firstName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = lastName
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = preferredLanguage
          if (!__v.isEmpty) {
            _output__.writeString(5, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withFirstName(__v: _root_.scala.Predef.String): Profile = copy(firstName = __v)
      def withLastName(__v: _root_.scala.Predef.String): Profile = copy(lastName = __v)
      def withPreferredLanguage(__v: _root_.scala.Predef.String): Profile = copy(preferredLanguage = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = firstName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = lastName
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = preferredLanguage
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(firstName)
          case 2 => _root_.scalapb.descriptors.PString(lastName)
          case 5 => _root_.scalapb.descriptors.PString(preferredLanguage)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.AddInstanceRequest.Profile.type = com.zitadel.system.v1.system.AddInstanceRequest.Profile
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.AddInstanceRequest.Profile])
  }
  
  object Profile extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Profile] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Profile] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.AddInstanceRequest.Profile = {
      var __firstName: _root_.scala.Predef.String = ""
      var __lastName: _root_.scala.Predef.String = ""
      var __preferredLanguage: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __firstName = _input__.readStringRequireUtf8()
          case 18 =>
            __lastName = _input__.readStringRequireUtf8()
          case 42 =>
            __preferredLanguage = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.AddInstanceRequest.Profile(
          firstName = __firstName,
          lastName = __lastName,
          preferredLanguage = __preferredLanguage,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.AddInstanceRequest.Profile] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.AddInstanceRequest.Profile(
          firstName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          lastName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          preferredLanguage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.AddInstanceRequest.Profile(
      firstName = "",
      lastName = "",
      preferredLanguage = ""
    )
    implicit class ProfileLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Profile]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Profile](_l) {
      def firstName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstName)((c_, f_) => c_.copy(firstName = f_))
      def lastName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.lastName)((c_, f_) => c_.copy(lastName = f_))
      def preferredLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.preferredLanguage)((c_, f_) => c_.copy(preferredLanguage = f_))
    }
    final val FIRST_NAME_FIELD_NUMBER = 1
    final val LAST_NAME_FIELD_NUMBER = 2
    final val PREFERRED_LANGUAGE_FIELD_NUMBER = 5
    def of(
      firstName: _root_.scala.Predef.String,
      lastName: _root_.scala.Predef.String,
      preferredLanguage: _root_.scala.Predef.String
    ): _root_.com.zitadel.system.v1.system.AddInstanceRequest.Profile = _root_.com.zitadel.system.v1.system.AddInstanceRequest.Profile(
      firstName,
      lastName,
      preferredLanguage
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.AddInstanceRequest.Profile])
  }
  
  @SerialVersionUID(0L)
  final case class Email(
      email: _root_.scala.Predef.String = "",
      isEmailVerified: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Email] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = email
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = isEmailVerified
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = email
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = isEmailVerified
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withEmail(__v: _root_.scala.Predef.String): Email = copy(email = __v)
      def withIsEmailVerified(__v: _root_.scala.Boolean): Email = copy(isEmailVerified = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = email
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = isEmailVerified
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(email)
          case 2 => _root_.scalapb.descriptors.PBoolean(isEmailVerified)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.AddInstanceRequest.Email.type = com.zitadel.system.v1.system.AddInstanceRequest.Email
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.AddInstanceRequest.Email])
  }
  
  object Email extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Email] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Email] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.AddInstanceRequest.Email = {
      var __email: _root_.scala.Predef.String = ""
      var __isEmailVerified: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __email = _input__.readStringRequireUtf8()
          case 16 =>
            __isEmailVerified = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.AddInstanceRequest.Email(
          email = __email,
          isEmailVerified = __isEmailVerified,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.AddInstanceRequest.Email] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.AddInstanceRequest.Email(
          email = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          isEmailVerified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.AddInstanceRequest.Email(
      email = "",
      isEmailVerified = false
    )
    implicit class EmailLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Email]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Email](_l) {
      def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.email)((c_, f_) => c_.copy(email = f_))
      def isEmailVerified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isEmailVerified)((c_, f_) => c_.copy(isEmailVerified = f_))
    }
    final val EMAIL_FIELD_NUMBER = 1
    final val IS_EMAIL_VERIFIED_FIELD_NUMBER = 2
    def of(
      email: _root_.scala.Predef.String,
      isEmailVerified: _root_.scala.Boolean
    ): _root_.com.zitadel.system.v1.system.AddInstanceRequest.Email = _root_.com.zitadel.system.v1.system.AddInstanceRequest.Email(
      email,
      isEmailVerified
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.AddInstanceRequest.Email])
  }
  
  @SerialVersionUID(0L)
  final case class Password(
      password: _root_.scala.Predef.String = "",
      passwordChangeRequired: _root_.scala.Boolean = false,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Password] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = password
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = passwordChangeRequired
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = password
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = passwordChangeRequired
          if (__v != false) {
            _output__.writeBool(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPassword(__v: _root_.scala.Predef.String): Password = copy(password = __v)
      def withPasswordChangeRequired(__v: _root_.scala.Boolean): Password = copy(passwordChangeRequired = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = password
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = passwordChangeRequired
            if (__t != false) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(password)
          case 2 => _root_.scalapb.descriptors.PBoolean(passwordChangeRequired)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.zitadel.system.v1.system.AddInstanceRequest.Password.type = com.zitadel.system.v1.system.AddInstanceRequest.Password
      // @@protoc_insertion_point(GeneratedMessage[zitadel.system.v1.AddInstanceRequest.Password])
  }
  
  object Password extends scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Password] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.system.v1.system.AddInstanceRequest.Password] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.system.v1.system.AddInstanceRequest.Password = {
      var __password: _root_.scala.Predef.String = ""
      var __passwordChangeRequired: _root_.scala.Boolean = false
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __password = _input__.readStringRequireUtf8()
          case 16 =>
            __passwordChangeRequired = _input__.readBool()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.zitadel.system.v1.system.AddInstanceRequest.Password(
          password = __password,
          passwordChangeRequired = __passwordChangeRequired,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.system.v1.system.AddInstanceRequest.Password] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.zitadel.system.v1.system.AddInstanceRequest.Password(
          password = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          passwordChangeRequired = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.zitadel.system.v1.system.AddInstanceRequest.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.zitadel.system.v1.system.AddInstanceRequest.Password(
      password = "",
      passwordChangeRequired = false
    )
    implicit class PasswordLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Password]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Password](_l) {
      def password: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.password)((c_, f_) => c_.copy(password = f_))
      def passwordChangeRequired: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.passwordChangeRequired)((c_, f_) => c_.copy(passwordChangeRequired = f_))
    }
    final val PASSWORD_FIELD_NUMBER = 1
    final val PASSWORD_CHANGE_REQUIRED_FIELD_NUMBER = 2
    def of(
      password: _root_.scala.Predef.String,
      passwordChangeRequired: _root_.scala.Boolean
    ): _root_.com.zitadel.system.v1.system.AddInstanceRequest.Password = _root_.com.zitadel.system.v1.system.AddInstanceRequest.Password(
      password,
      passwordChangeRequired
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.AddInstanceRequest.Password])
  }
  
  implicit class AddInstanceRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest](_l) {
    def instanceName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.instanceName)((c_, f_) => c_.copy(instanceName = f_))
    def firstOrgName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.firstOrgName)((c_, f_) => c_.copy(firstOrgName = f_))
    def customDomain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.customDomain)((c_, f_) => c_.copy(customDomain = f_))
    def ownerUserName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.ownerUserName)((c_, f_) => c_.copy(ownerUserName = f_))
    def ownerEmail: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Email] = field(_.getOwnerEmail)((c_, f_) => c_.copy(ownerEmail = Option(f_)))
    def optionalOwnerEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Email]] = field(_.ownerEmail)((c_, f_) => c_.copy(ownerEmail = f_))
    def ownerProfile: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Profile] = field(_.getOwnerProfile)((c_, f_) => c_.copy(ownerProfile = Option(f_)))
    def optionalOwnerProfile: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Profile]] = field(_.ownerProfile)((c_, f_) => c_.copy(ownerProfile = f_))
    def ownerPassword: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.system.v1.system.AddInstanceRequest.Password] = field(_.getOwnerPassword)((c_, f_) => c_.copy(ownerPassword = Option(f_)))
    def optionalOwnerPassword: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Password]] = field(_.ownerPassword)((c_, f_) => c_.copy(ownerPassword = f_))
    def defaultLanguage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.defaultLanguage)((c_, f_) => c_.copy(defaultLanguage = f_))
  }
  final val INSTANCE_NAME_FIELD_NUMBER = 1
  final val FIRST_ORG_NAME_FIELD_NUMBER = 2
  final val CUSTOM_DOMAIN_FIELD_NUMBER = 3
  final val OWNER_USER_NAME_FIELD_NUMBER = 4
  final val OWNER_EMAIL_FIELD_NUMBER = 5
  final val OWNER_PROFILE_FIELD_NUMBER = 6
  final val OWNER_PASSWORD_FIELD_NUMBER = 7
  final val DEFAULT_LANGUAGE_FIELD_NUMBER = 8
  def of(
    instanceName: _root_.scala.Predef.String,
    firstOrgName: _root_.scala.Predef.String,
    customDomain: _root_.scala.Predef.String,
    ownerUserName: _root_.scala.Predef.String,
    ownerEmail: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Email],
    ownerProfile: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Profile],
    ownerPassword: _root_.scala.Option[com.zitadel.system.v1.system.AddInstanceRequest.Password],
    defaultLanguage: _root_.scala.Predef.String
  ): _root_.com.zitadel.system.v1.system.AddInstanceRequest = _root_.com.zitadel.system.v1.system.AddInstanceRequest(
    instanceName,
    firstOrgName,
    customDomain,
    ownerUserName,
    ownerEmail,
    ownerProfile,
    ownerPassword,
    defaultLanguage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.system.v1.AddInstanceRequest])
}
