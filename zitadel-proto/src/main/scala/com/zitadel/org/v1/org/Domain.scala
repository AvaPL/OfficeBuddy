// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.org.v1.org

@SerialVersionUID(0L)
final case class Domain(
    orgId: _root_.scala.Predef.String = "",
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None,
    domainName: _root_.scala.Predef.String = "",
    isVerified: _root_.scala.Boolean = false,
    isPrimary: _root_.scala.Boolean = false,
    validationType: com.zitadel.org.v1.org.DomainValidationType = com.zitadel.org.v1.org.DomainValidationType.DOMAIN_VALIDATION_TYPE_UNSPECIFIED,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Domain] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = orgId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (details.isDefined) {
        val __value = details.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = domainName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = isVerified
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = isPrimary
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      
      {
        val __value = validationType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = orgId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = domainName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = isVerified
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = isPrimary
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = validationType.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withOrgId(__v: _root_.scala.Predef.String): Domain = copy(orgId = __v)
    def getDetails: com.zitadel.v1.`object`.ObjectDetails = details.getOrElse(com.zitadel.v1.`object`.ObjectDetails.defaultInstance)
    def clearDetails: Domain = copy(details = _root_.scala.None)
    def withDetails(__v: com.zitadel.v1.`object`.ObjectDetails): Domain = copy(details = Option(__v))
    def withDomainName(__v: _root_.scala.Predef.String): Domain = copy(domainName = __v)
    def withIsVerified(__v: _root_.scala.Boolean): Domain = copy(isVerified = __v)
    def withIsPrimary(__v: _root_.scala.Boolean): Domain = copy(isPrimary = __v)
    def withValidationType(__v: com.zitadel.org.v1.org.DomainValidationType): Domain = copy(validationType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = orgId
          if (__t != "") __t else null
        }
        case 2 => details.orNull
        case 3 => {
          val __t = domainName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = isVerified
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = isPrimary
          if (__t != false) __t else null
        }
        case 6 => {
          val __t = validationType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(orgId)
        case 2 => details.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(domainName)
        case 4 => _root_.scalapb.descriptors.PBoolean(isVerified)
        case 5 => _root_.scalapb.descriptors.PBoolean(isPrimary)
        case 6 => _root_.scalapb.descriptors.PEnum(validationType.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.org.v1.org.Domain.type = com.zitadel.org.v1.org.Domain
    // @@protoc_insertion_point(GeneratedMessage[zitadel.org.v1.Domain])
}

object Domain extends scalapb.GeneratedMessageCompanion[com.zitadel.org.v1.org.Domain] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.org.v1.org.Domain] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.org.v1.org.Domain = {
    var __orgId: _root_.scala.Predef.String = ""
    var __details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails] = _root_.scala.None
    var __domainName: _root_.scala.Predef.String = ""
    var __isVerified: _root_.scala.Boolean = false
    var __isPrimary: _root_.scala.Boolean = false
    var __validationType: com.zitadel.org.v1.org.DomainValidationType = com.zitadel.org.v1.org.DomainValidationType.DOMAIN_VALIDATION_TYPE_UNSPECIFIED
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __orgId = _input__.readStringRequireUtf8()
        case 18 =>
          __details = Option(__details.fold(_root_.scalapb.LiteParser.readMessage[com.zitadel.v1.`object`.ObjectDetails](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __domainName = _input__.readStringRequireUtf8()
        case 32 =>
          __isVerified = _input__.readBool()
        case 40 =>
          __isPrimary = _input__.readBool()
        case 48 =>
          __validationType = com.zitadel.org.v1.org.DomainValidationType.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.org.v1.org.Domain(
        orgId = __orgId,
        details = __details,
        domainName = __domainName,
        isVerified = __isVerified,
        isPrimary = __isPrimary,
        validationType = __validationType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.org.v1.org.Domain] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.org.v1.org.Domain(
        orgId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]]),
        domainName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        isVerified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        isPrimary = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        validationType = com.zitadel.org.v1.org.DomainValidationType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.org.v1.org.DomainValidationType.DOMAIN_VALIDATION_TYPE_UNSPECIFIED.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = OrgProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = OrgProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.zitadel.v1.`object`.ObjectDetails
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => com.zitadel.org.v1.org.DomainValidationType
    }
  }
  lazy val defaultInstance = com.zitadel.org.v1.org.Domain(
    orgId = "",
    details = _root_.scala.None,
    domainName = "",
    isVerified = false,
    isPrimary = false,
    validationType = com.zitadel.org.v1.org.DomainValidationType.DOMAIN_VALIDATION_TYPE_UNSPECIFIED
  )
  implicit class DomainLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.org.v1.org.Domain]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.org.v1.org.Domain](_l) {
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgId)((c_, f_) => c_.copy(orgId = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.v1.`object`.ObjectDetails] = field(_.getDetails)((c_, f_) => c_.copy(details = Option(f_)))
    def optionalDetails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails]] = field(_.details)((c_, f_) => c_.copy(details = f_))
    def domainName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.domainName)((c_, f_) => c_.copy(domainName = f_))
    def isVerified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isVerified)((c_, f_) => c_.copy(isVerified = f_))
    def isPrimary: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isPrimary)((c_, f_) => c_.copy(isPrimary = f_))
    def validationType: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.org.v1.org.DomainValidationType] = field(_.validationType)((c_, f_) => c_.copy(validationType = f_))
  }
  final val ORG_ID_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  final val DOMAIN_NAME_FIELD_NUMBER = 3
  final val IS_VERIFIED_FIELD_NUMBER = 4
  final val IS_PRIMARY_FIELD_NUMBER = 5
  final val VALIDATION_TYPE_FIELD_NUMBER = 6
  def of(
    orgId: _root_.scala.Predef.String,
    details: _root_.scala.Option[com.zitadel.v1.`object`.ObjectDetails],
    domainName: _root_.scala.Predef.String,
    isVerified: _root_.scala.Boolean,
    isPrimary: _root_.scala.Boolean,
    validationType: com.zitadel.org.v1.org.DomainValidationType
  ): _root_.com.zitadel.org.v1.org.Domain = _root_.com.zitadel.org.v1.org.Domain(
    orgId,
    details,
    domainName,
    isVerified,
    isPrimary,
    validationType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.org.v1.Domain])
}
