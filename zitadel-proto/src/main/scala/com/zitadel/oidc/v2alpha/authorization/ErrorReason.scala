// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.oidc.v2alpha.authorization

sealed abstract class ErrorReason(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = ErrorReason
  def isErrorReasonUnspecified: _root_.scala.Boolean = false
  def isErrorReasonInvalidRequest: _root_.scala.Boolean = false
  def isErrorReasonUnauthorizedClient: _root_.scala.Boolean = false
  def isErrorReasonAccessDenied: _root_.scala.Boolean = false
  def isErrorReasonUnsupportedResponseType: _root_.scala.Boolean = false
  def isErrorReasonInvalidScope: _root_.scala.Boolean = false
  def isErrorReasonServerError: _root_.scala.Boolean = false
  def isErrorReasonTemporaryUnavailable: _root_.scala.Boolean = false
  def isErrorReasonInteractionRequired: _root_.scala.Boolean = false
  def isErrorReasonLoginRequired: _root_.scala.Boolean = false
  def isErrorReasonAccountSelectionRequired: _root_.scala.Boolean = false
  def isErrorReasonConsentRequired: _root_.scala.Boolean = false
  def isErrorReasonInvalidRequestUri: _root_.scala.Boolean = false
  def isErrorReasonInvalidRequestObject: _root_.scala.Boolean = false
  def isErrorReasonRequestNotSupported: _root_.scala.Boolean = false
  def isErrorReasonRequestUriNotSupported: _root_.scala.Boolean = false
  def isErrorReasonRegistrationNotSupported: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[ErrorReason] = com.zitadel.oidc.v2alpha.authorization.ErrorReason
  final def asRecognized: _root_.scala.Option[com.zitadel.oidc.v2alpha.authorization.ErrorReason.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.zitadel.oidc.v2alpha.authorization.ErrorReason.Recognized])
}

object ErrorReason extends _root_.scalapb.GeneratedEnumCompanion[ErrorReason] {
  sealed trait Recognized extends ErrorReason
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ErrorReason] = this
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_UNSPECIFIED extends ErrorReason(0) with ErrorReason.Recognized {
    val index = 0
    val name = "ERROR_REASON_UNSPECIFIED"
    override def isErrorReasonUnspecified: _root_.scala.Boolean = true
  }
  
  /** Error states from https://datatracker.ietf.org/doc/html/rfc6749#section-4.2.2.1
    */
  @SerialVersionUID(0L)
  case object ERROR_REASON_INVALID_REQUEST extends ErrorReason(1) with ErrorReason.Recognized {
    val index = 1
    val name = "ERROR_REASON_INVALID_REQUEST"
    override def isErrorReasonInvalidRequest: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_UNAUTHORIZED_CLIENT extends ErrorReason(2) with ErrorReason.Recognized {
    val index = 2
    val name = "ERROR_REASON_UNAUTHORIZED_CLIENT"
    override def isErrorReasonUnauthorizedClient: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_ACCESS_DENIED extends ErrorReason(3) with ErrorReason.Recognized {
    val index = 3
    val name = "ERROR_REASON_ACCESS_DENIED"
    override def isErrorReasonAccessDenied: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE extends ErrorReason(4) with ErrorReason.Recognized {
    val index = 4
    val name = "ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE"
    override def isErrorReasonUnsupportedResponseType: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_INVALID_SCOPE extends ErrorReason(5) with ErrorReason.Recognized {
    val index = 5
    val name = "ERROR_REASON_INVALID_SCOPE"
    override def isErrorReasonInvalidScope: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_SERVER_ERROR extends ErrorReason(6) with ErrorReason.Recognized {
    val index = 6
    val name = "ERROR_REASON_SERVER_ERROR"
    override def isErrorReasonServerError: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_TEMPORARY_UNAVAILABLE extends ErrorReason(7) with ErrorReason.Recognized {
    val index = 7
    val name = "ERROR_REASON_TEMPORARY_UNAVAILABLE"
    override def isErrorReasonTemporaryUnavailable: _root_.scala.Boolean = true
  }
  
  /** Error states from https://openid.net/specs/openid-connect-core-1_0.html#AuthError
    */
  @SerialVersionUID(0L)
  case object ERROR_REASON_INTERACTION_REQUIRED extends ErrorReason(8) with ErrorReason.Recognized {
    val index = 8
    val name = "ERROR_REASON_INTERACTION_REQUIRED"
    override def isErrorReasonInteractionRequired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_LOGIN_REQUIRED extends ErrorReason(9) with ErrorReason.Recognized {
    val index = 9
    val name = "ERROR_REASON_LOGIN_REQUIRED"
    override def isErrorReasonLoginRequired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_ACCOUNT_SELECTION_REQUIRED extends ErrorReason(10) with ErrorReason.Recognized {
    val index = 10
    val name = "ERROR_REASON_ACCOUNT_SELECTION_REQUIRED"
    override def isErrorReasonAccountSelectionRequired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_CONSENT_REQUIRED extends ErrorReason(11) with ErrorReason.Recognized {
    val index = 11
    val name = "ERROR_REASON_CONSENT_REQUIRED"
    override def isErrorReasonConsentRequired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_INVALID_REQUEST_URI extends ErrorReason(12) with ErrorReason.Recognized {
    val index = 12
    val name = "ERROR_REASON_INVALID_REQUEST_URI"
    override def isErrorReasonInvalidRequestUri: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_INVALID_REQUEST_OBJECT extends ErrorReason(13) with ErrorReason.Recognized {
    val index = 13
    val name = "ERROR_REASON_INVALID_REQUEST_OBJECT"
    override def isErrorReasonInvalidRequestObject: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_REQUEST_NOT_SUPPORTED extends ErrorReason(14) with ErrorReason.Recognized {
    val index = 14
    val name = "ERROR_REASON_REQUEST_NOT_SUPPORTED"
    override def isErrorReasonRequestNotSupported: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_REQUEST_URI_NOT_SUPPORTED extends ErrorReason(15) with ErrorReason.Recognized {
    val index = 15
    val name = "ERROR_REASON_REQUEST_URI_NOT_SUPPORTED"
    override def isErrorReasonRequestUriNotSupported: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ERROR_REASON_REGISTRATION_NOT_SUPPORTED extends ErrorReason(16) with ErrorReason.Recognized {
    val index = 16
    val name = "ERROR_REASON_REGISTRATION_NOT_SUPPORTED"
    override def isErrorReasonRegistrationNotSupported: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ErrorReason(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(ERROR_REASON_UNSPECIFIED, ERROR_REASON_INVALID_REQUEST, ERROR_REASON_UNAUTHORIZED_CLIENT, ERROR_REASON_ACCESS_DENIED, ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE, ERROR_REASON_INVALID_SCOPE, ERROR_REASON_SERVER_ERROR, ERROR_REASON_TEMPORARY_UNAVAILABLE, ERROR_REASON_INTERACTION_REQUIRED, ERROR_REASON_LOGIN_REQUIRED, ERROR_REASON_ACCOUNT_SELECTION_REQUIRED, ERROR_REASON_CONSENT_REQUIRED, ERROR_REASON_INVALID_REQUEST_URI, ERROR_REASON_INVALID_REQUEST_OBJECT, ERROR_REASON_REQUEST_NOT_SUPPORTED, ERROR_REASON_REQUEST_URI_NOT_SUPPORTED, ERROR_REASON_REGISTRATION_NOT_SUPPORTED)
  def fromValue(__value: _root_.scala.Int): ErrorReason = __value match {
    case 0 => ERROR_REASON_UNSPECIFIED
    case 1 => ERROR_REASON_INVALID_REQUEST
    case 2 => ERROR_REASON_UNAUTHORIZED_CLIENT
    case 3 => ERROR_REASON_ACCESS_DENIED
    case 4 => ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE
    case 5 => ERROR_REASON_INVALID_SCOPE
    case 6 => ERROR_REASON_SERVER_ERROR
    case 7 => ERROR_REASON_TEMPORARY_UNAVAILABLE
    case 8 => ERROR_REASON_INTERACTION_REQUIRED
    case 9 => ERROR_REASON_LOGIN_REQUIRED
    case 10 => ERROR_REASON_ACCOUNT_SELECTION_REQUIRED
    case 11 => ERROR_REASON_CONSENT_REQUIRED
    case 12 => ERROR_REASON_INVALID_REQUEST_URI
    case 13 => ERROR_REASON_INVALID_REQUEST_OBJECT
    case 14 => ERROR_REASON_REQUEST_NOT_SUPPORTED
    case 15 => ERROR_REASON_REQUEST_URI_NOT_SUPPORTED
    case 16 => ERROR_REASON_REGISTRATION_NOT_SUPPORTED
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = AuthorizationProto.javaDescriptor.getEnumTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = AuthorizationProto.scalaDescriptor.enums(1)
}