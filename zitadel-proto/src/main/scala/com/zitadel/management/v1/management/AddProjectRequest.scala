// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

@SerialVersionUID(0L)
final case class AddProjectRequest(
    name: _root_.scala.Predef.String = "",
    projectRoleAssertion: _root_.scala.Boolean = false,
    projectRoleCheck: _root_.scala.Boolean = false,
    hasProjectCheck: _root_.scala.Boolean = false,
    privateLabelingSetting: com.zitadel.project.v1.project.PrivateLabelingSetting = com.zitadel.project.v1.project.PrivateLabelingSetting.PRIVATE_LABELING_SETTING_UNSPECIFIED,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddProjectRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = projectRoleAssertion
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      
      {
        val __value = projectRoleCheck
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = hasProjectCheck
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = privateLabelingSetting.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = projectRoleAssertion
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      {
        val __v = projectRoleCheck
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = hasProjectCheck
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = privateLabelingSetting.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): AddProjectRequest = copy(name = __v)
    def withProjectRoleAssertion(__v: _root_.scala.Boolean): AddProjectRequest = copy(projectRoleAssertion = __v)
    def withProjectRoleCheck(__v: _root_.scala.Boolean): AddProjectRequest = copy(projectRoleCheck = __v)
    def withHasProjectCheck(__v: _root_.scala.Boolean): AddProjectRequest = copy(hasProjectCheck = __v)
    def withPrivateLabelingSetting(__v: com.zitadel.project.v1.project.PrivateLabelingSetting): AddProjectRequest = copy(privateLabelingSetting = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = projectRoleAssertion
          if (__t != false) __t else null
        }
        case 3 => {
          val __t = projectRoleCheck
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = hasProjectCheck
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = privateLabelingSetting.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PBoolean(projectRoleAssertion)
        case 3 => _root_.scalapb.descriptors.PBoolean(projectRoleCheck)
        case 4 => _root_.scalapb.descriptors.PBoolean(hasProjectCheck)
        case 5 => _root_.scalapb.descriptors.PEnum(privateLabelingSetting.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.AddProjectRequest.type = com.zitadel.management.v1.management.AddProjectRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddProjectRequest])
}

object AddProjectRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddProjectRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddProjectRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddProjectRequest = {
    var __name: _root_.scala.Predef.String = ""
    var __projectRoleAssertion: _root_.scala.Boolean = false
    var __projectRoleCheck: _root_.scala.Boolean = false
    var __hasProjectCheck: _root_.scala.Boolean = false
    var __privateLabelingSetting: com.zitadel.project.v1.project.PrivateLabelingSetting = com.zitadel.project.v1.project.PrivateLabelingSetting.PRIVATE_LABELING_SETTING_UNSPECIFIED
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 16 =>
          __projectRoleAssertion = _input__.readBool()
        case 24 =>
          __projectRoleCheck = _input__.readBool()
        case 32 =>
          __hasProjectCheck = _input__.readBool()
        case 40 =>
          __privateLabelingSetting = com.zitadel.project.v1.project.PrivateLabelingSetting.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.AddProjectRequest(
        name = __name,
        projectRoleAssertion = __projectRoleAssertion,
        projectRoleCheck = __projectRoleCheck,
        hasProjectCheck = __hasProjectCheck,
        privateLabelingSetting = __privateLabelingSetting,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddProjectRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.AddProjectRequest(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectRoleAssertion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        projectRoleCheck = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        hasProjectCheck = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        privateLabelingSetting = com.zitadel.project.v1.project.PrivateLabelingSetting.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.zitadel.project.v1.project.PrivateLabelingSetting.PRIVATE_LABELING_SETTING_UNSPECIFIED.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(178)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(178)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => com.zitadel.project.v1.project.PrivateLabelingSetting
    }
  }
  lazy val defaultInstance = com.zitadel.management.v1.management.AddProjectRequest(
    name = "",
    projectRoleAssertion = false,
    projectRoleCheck = false,
    hasProjectCheck = false,
    privateLabelingSetting = com.zitadel.project.v1.project.PrivateLabelingSetting.PRIVATE_LABELING_SETTING_UNSPECIFIED
  )
  implicit class AddProjectRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddProjectRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddProjectRequest](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def projectRoleAssertion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.projectRoleAssertion)((c_, f_) => c_.copy(projectRoleAssertion = f_))
    def projectRoleCheck: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.projectRoleCheck)((c_, f_) => c_.copy(projectRoleCheck = f_))
    def hasProjectCheck: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.hasProjectCheck)((c_, f_) => c_.copy(hasProjectCheck = f_))
    def privateLabelingSetting: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.project.v1.project.PrivateLabelingSetting] = field(_.privateLabelingSetting)((c_, f_) => c_.copy(privateLabelingSetting = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val PROJECT_ROLE_ASSERTION_FIELD_NUMBER = 2
  final val PROJECT_ROLE_CHECK_FIELD_NUMBER = 3
  final val HAS_PROJECT_CHECK_FIELD_NUMBER = 4
  final val PRIVATE_LABELING_SETTING_FIELD_NUMBER = 5
  def of(
    name: _root_.scala.Predef.String,
    projectRoleAssertion: _root_.scala.Boolean,
    projectRoleCheck: _root_.scala.Boolean,
    hasProjectCheck: _root_.scala.Boolean,
    privateLabelingSetting: com.zitadel.project.v1.project.PrivateLabelingSetting
  ): _root_.com.zitadel.management.v1.management.AddProjectRequest = _root_.com.zitadel.management.v1.management.AddProjectRequest(
    name,
    projectRoleAssertion,
    projectRoleCheck,
    hasProjectCheck,
    privateLabelingSetting
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddProjectRequest])
}
