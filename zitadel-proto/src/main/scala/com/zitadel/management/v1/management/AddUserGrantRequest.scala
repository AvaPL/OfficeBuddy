// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.zitadel.management.v1.management

@SerialVersionUID(0L)
final case class AddUserGrantRequest(
    userId: _root_.scala.Predef.String = "",
    projectId: _root_.scala.Predef.String = "",
    projectGrantId: _root_.scala.Predef.String = "",
    roleKeys: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AddUserGrantRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = userId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = projectId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = projectGrantId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      roleKeys.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = userId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = projectId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = projectGrantId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      roleKeys.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withUserId(__v: _root_.scala.Predef.String): AddUserGrantRequest = copy(userId = __v)
    def withProjectId(__v: _root_.scala.Predef.String): AddUserGrantRequest = copy(projectId = __v)
    def withProjectGrantId(__v: _root_.scala.Predef.String): AddUserGrantRequest = copy(projectGrantId = __v)
    def clearRoleKeys = copy(roleKeys = _root_.scala.Seq.empty)
    def addRoleKeys(__vs: _root_.scala.Predef.String *): AddUserGrantRequest = addAllRoleKeys(__vs)
    def addAllRoleKeys(__vs: Iterable[_root_.scala.Predef.String]): AddUserGrantRequest = copy(roleKeys = roleKeys ++ __vs)
    def withRoleKeys(__v: _root_.scala.Seq[_root_.scala.Predef.String]): AddUserGrantRequest = copy(roleKeys = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = projectId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = projectGrantId
          if (__t != "") __t else null
        }
        case 4 => roleKeys
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(userId)
        case 2 => _root_.scalapb.descriptors.PString(projectId)
        case 3 => _root_.scalapb.descriptors.PString(projectGrantId)
        case 4 => _root_.scalapb.descriptors.PRepeated(roleKeys.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.zitadel.management.v1.management.AddUserGrantRequest.type = com.zitadel.management.v1.management.AddUserGrantRequest
    // @@protoc_insertion_point(GeneratedMessage[zitadel.management.v1.AddUserGrantRequest])
}

object AddUserGrantRequest extends scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddUserGrantRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.zitadel.management.v1.management.AddUserGrantRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.zitadel.management.v1.management.AddUserGrantRequest = {
    var __userId: _root_.scala.Predef.String = ""
    var __projectId: _root_.scala.Predef.String = ""
    var __projectGrantId: _root_.scala.Predef.String = ""
    val __roleKeys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __userId = _input__.readStringRequireUtf8()
        case 18 =>
          __projectId = _input__.readStringRequireUtf8()
        case 26 =>
          __projectGrantId = _input__.readStringRequireUtf8()
        case 34 =>
          __roleKeys += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.zitadel.management.v1.management.AddUserGrantRequest(
        userId = __userId,
        projectId = __projectId,
        projectGrantId = __projectGrantId,
        roleKeys = __roleKeys.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.zitadel.management.v1.management.AddUserGrantRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.zitadel.management.v1.management.AddUserGrantRequest(
        userId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        projectGrantId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        roleKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ManagementProto.javaDescriptor.getMessageTypes().get(280)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ManagementProto.scalaDescriptor.messages(280)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.zitadel.management.v1.management.AddUserGrantRequest(
    userId = "",
    projectId = "",
    projectGrantId = "",
    roleKeys = _root_.scala.Seq.empty
  )
  implicit class AddUserGrantRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.zitadel.management.v1.management.AddUserGrantRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.zitadel.management.v1.management.AddUserGrantRequest](_l) {
    def userId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def projectId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectId)((c_, f_) => c_.copy(projectId = f_))
    def projectGrantId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.projectGrantId)((c_, f_) => c_.copy(projectGrantId = f_))
    def roleKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.roleKeys)((c_, f_) => c_.copy(roleKeys = f_))
  }
  final val USER_ID_FIELD_NUMBER = 1
  final val PROJECT_ID_FIELD_NUMBER = 2
  final val PROJECT_GRANT_ID_FIELD_NUMBER = 3
  final val ROLE_KEYS_FIELD_NUMBER = 4
  def of(
    userId: _root_.scala.Predef.String,
    projectId: _root_.scala.Predef.String,
    projectGrantId: _root_.scala.Predef.String,
    roleKeys: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.com.zitadel.management.v1.management.AddUserGrantRequest = _root_.com.zitadel.management.v1.management.AddUserGrantRequest(
    userId,
    projectId,
    projectGrantId,
    roleKeys
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[zitadel.management.v1.AddUserGrantRequest])
}
